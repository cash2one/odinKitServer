// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageBattleDoubleWinRankingResponse.proto

#ifndef PROTOBUF_MessageBattleDoubleWinRankingResponse_2eproto__INCLUDED
#define PROTOBUF_MessageBattleDoubleWinRankingResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto();
void protobuf_AssignDesc_MessageBattleDoubleWinRankingResponse_2eproto();
void protobuf_ShutdownFile_MessageBattleDoubleWinRankingResponse_2eproto();

class BattleDoubleWinRankingResponse;
class BattleDoubleWinRankingResponse_Rankinger;

// ===================================================================

class BattleDoubleWinRankingResponse_Rankinger : public ::google::protobuf::Message {
 public:
  BattleDoubleWinRankingResponse_Rankinger();
  virtual ~BattleDoubleWinRankingResponse_Rankinger();

  BattleDoubleWinRankingResponse_Rankinger(const BattleDoubleWinRankingResponse_Rankinger& from);

  inline BattleDoubleWinRankingResponse_Rankinger& operator=(const BattleDoubleWinRankingResponse_Rankinger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleDoubleWinRankingResponse_Rankinger& default_instance();

  void Swap(BattleDoubleWinRankingResponse_Rankinger* other);

  // implements Message ----------------------------------------------

  BattleDoubleWinRankingResponse_Rankinger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleDoubleWinRankingResponse_Rankinger& from);
  void MergeFrom(const BattleDoubleWinRankingResponse_Rankinger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.BattleDoubleWinRankingResponse.Rankinger)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  friend void protobuf_AssignDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  friend void protobuf_ShutdownFile_MessageBattleDoubleWinRankingResponse_2eproto();

  void InitAsDefaultInstance();
  static BattleDoubleWinRankingResponse_Rankinger* default_instance_;
};
// -------------------------------------------------------------------

class BattleDoubleWinRankingResponse : public ::google::protobuf::Message {
 public:
  BattleDoubleWinRankingResponse();
  virtual ~BattleDoubleWinRankingResponse();

  BattleDoubleWinRankingResponse(const BattleDoubleWinRankingResponse& from);

  inline BattleDoubleWinRankingResponse& operator=(const BattleDoubleWinRankingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleDoubleWinRankingResponse& default_instance();

  void Swap(BattleDoubleWinRankingResponse* other);

  // implements Message ----------------------------------------------

  BattleDoubleWinRankingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleDoubleWinRankingResponse& from);
  void MergeFrom(const BattleDoubleWinRankingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BattleDoubleWinRankingResponse_Rankinger Rankinger;

  // accessors -------------------------------------------------------

  // repeated .Message.BattleDoubleWinRankingResponse.Rankinger ranking = 1;
  inline int ranking_size() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 1;
  inline const ::Message::BattleDoubleWinRankingResponse_Rankinger& ranking(int index) const;
  inline ::Message::BattleDoubleWinRankingResponse_Rankinger* mutable_ranking(int index);
  inline ::Message::BattleDoubleWinRankingResponse_Rankinger* add_ranking();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::BattleDoubleWinRankingResponse_Rankinger >&
      ranking() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::BattleDoubleWinRankingResponse_Rankinger >*
      mutable_ranking();

  // @@protoc_insertion_point(class_scope:Message.BattleDoubleWinRankingResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Message::BattleDoubleWinRankingResponse_Rankinger > ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  friend void protobuf_AssignDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  friend void protobuf_ShutdownFile_MessageBattleDoubleWinRankingResponse_2eproto();

  void InitAsDefaultInstance();
  static BattleDoubleWinRankingResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BattleDoubleWinRankingResponse_Rankinger

// optional string name = 1;
inline bool BattleDoubleWinRankingResponse_Rankinger::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleDoubleWinRankingResponse_Rankinger::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleDoubleWinRankingResponse_Rankinger::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleDoubleWinRankingResponse_Rankinger::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BattleDoubleWinRankingResponse_Rankinger::name() const {
  return *name_;
}
inline void BattleDoubleWinRankingResponse_Rankinger::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BattleDoubleWinRankingResponse_Rankinger::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BattleDoubleWinRankingResponse_Rankinger::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleDoubleWinRankingResponse_Rankinger::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BattleDoubleWinRankingResponse_Rankinger::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleDoubleWinRankingResponse_Rankinger::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 count = 2;
inline bool BattleDoubleWinRankingResponse_Rankinger::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleDoubleWinRankingResponse_Rankinger::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleDoubleWinRankingResponse_Rankinger::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleDoubleWinRankingResponse_Rankinger::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 BattleDoubleWinRankingResponse_Rankinger::count() const {
  return count_;
}
inline void BattleDoubleWinRankingResponse_Rankinger::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// BattleDoubleWinRankingResponse

// repeated .Message.BattleDoubleWinRankingResponse.Rankinger ranking = 1;
inline int BattleDoubleWinRankingResponse::ranking_size() const {
  return ranking_.size();
}
inline void BattleDoubleWinRankingResponse::clear_ranking() {
  ranking_.Clear();
}
inline const ::Message::BattleDoubleWinRankingResponse_Rankinger& BattleDoubleWinRankingResponse::ranking(int index) const {
  return ranking_.Get(index);
}
inline ::Message::BattleDoubleWinRankingResponse_Rankinger* BattleDoubleWinRankingResponse::mutable_ranking(int index) {
  return ranking_.Mutable(index);
}
inline ::Message::BattleDoubleWinRankingResponse_Rankinger* BattleDoubleWinRankingResponse::add_ranking() {
  return ranking_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::BattleDoubleWinRankingResponse_Rankinger >&
BattleDoubleWinRankingResponse::ranking() const {
  return ranking_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::BattleDoubleWinRankingResponse_Rankinger >*
BattleDoubleWinRankingResponse::mutable_ranking() {
  return &ranking_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageBattleDoubleWinRankingResponse_2eproto__INCLUDED
