// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageNotifyExpeditionHero.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageNotifyExpeditionHero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* NotifyExpeditionHero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyExpeditionHero_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyExpeditionHero_HeroData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyExpeditionHero_HeroData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageNotifyExpeditionHero_2eproto() {
  protobuf_AddDesc_MessageNotifyExpeditionHero_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageNotifyExpeditionHero.proto");
  GOOGLE_CHECK(file != NULL);
  NotifyExpeditionHero_descriptor_ = file->message_type(0);
  static const int NotifyExpeditionHero_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero, bclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero, heros_),
  };
  NotifyExpeditionHero_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyExpeditionHero_descriptor_,
      NotifyExpeditionHero::default_instance_,
      NotifyExpeditionHero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyExpeditionHero));
  NotifyExpeditionHero_HeroData_descriptor_ = NotifyExpeditionHero_descriptor_->nested_type(0);
  static const int NotifyExpeditionHero_HeroData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero_HeroData, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero_HeroData, curhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero_HeroData, curmorale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero_HeroData, curpos_),
  };
  NotifyExpeditionHero_HeroData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyExpeditionHero_HeroData_descriptor_,
      NotifyExpeditionHero_HeroData::default_instance_,
      NotifyExpeditionHero_HeroData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero_HeroData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionHero_HeroData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyExpeditionHero_HeroData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageNotifyExpeditionHero_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyExpeditionHero_descriptor_, &NotifyExpeditionHero::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyExpeditionHero_HeroData_descriptor_, &NotifyExpeditionHero_HeroData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageNotifyExpeditionHero_2eproto() {
  delete NotifyExpeditionHero::default_instance_;
  delete NotifyExpeditionHero_reflection_;
  delete NotifyExpeditionHero_HeroData::default_instance_;
  delete NotifyExpeditionHero_HeroData_reflection_;
}

void protobuf_AddDesc_MessageNotifyExpeditionHero_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!MessageNotifyExpeditionHero.proto\022\007Mes"
    "sage\"\253\001\n\024NotifyExpeditionHero\022\016\n\006bclear\030"
    "\001 \001(\010\0225\n\005heros\030\002 \003(\0132&.Message.NotifyExp"
    "editionHero.HeroData\032L\n\010HeroData\022\016\n\006hero"
    "id\030\001 \001(\003\022\r\n\005curhp\030\002 \001(\005\022\021\n\tcurmorale\030\003 \001"
    "(\005\022\016\n\006curpos\030\004 \001(\005", 218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageNotifyExpeditionHero.proto", &protobuf_RegisterTypes);
  NotifyExpeditionHero::default_instance_ = new NotifyExpeditionHero();
  NotifyExpeditionHero_HeroData::default_instance_ = new NotifyExpeditionHero_HeroData();
  NotifyExpeditionHero::default_instance_->InitAsDefaultInstance();
  NotifyExpeditionHero_HeroData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageNotifyExpeditionHero_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageNotifyExpeditionHero_2eproto {
  StaticDescriptorInitializer_MessageNotifyExpeditionHero_2eproto() {
    protobuf_AddDesc_MessageNotifyExpeditionHero_2eproto();
  }
} static_descriptor_initializer_MessageNotifyExpeditionHero_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int NotifyExpeditionHero_HeroData::kHeroidFieldNumber;
const int NotifyExpeditionHero_HeroData::kCurhpFieldNumber;
const int NotifyExpeditionHero_HeroData::kCurmoraleFieldNumber;
const int NotifyExpeditionHero_HeroData::kCurposFieldNumber;
#endif  // !_MSC_VER

NotifyExpeditionHero_HeroData::NotifyExpeditionHero_HeroData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyExpeditionHero_HeroData::InitAsDefaultInstance() {
}

NotifyExpeditionHero_HeroData::NotifyExpeditionHero_HeroData(const NotifyExpeditionHero_HeroData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyExpeditionHero_HeroData::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = GOOGLE_LONGLONG(0);
  curhp_ = 0;
  curmorale_ = 0;
  curpos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyExpeditionHero_HeroData::~NotifyExpeditionHero_HeroData() {
  SharedDtor();
}

void NotifyExpeditionHero_HeroData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyExpeditionHero_HeroData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyExpeditionHero_HeroData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyExpeditionHero_HeroData_descriptor_;
}

const NotifyExpeditionHero_HeroData& NotifyExpeditionHero_HeroData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageNotifyExpeditionHero_2eproto();
  return *default_instance_;
}

NotifyExpeditionHero_HeroData* NotifyExpeditionHero_HeroData::default_instance_ = NULL;

NotifyExpeditionHero_HeroData* NotifyExpeditionHero_HeroData::New() const {
  return new NotifyExpeditionHero_HeroData;
}

void NotifyExpeditionHero_HeroData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = GOOGLE_LONGLONG(0);
    curhp_ = 0;
    curmorale_ = 0;
    curpos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyExpeditionHero_HeroData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 heroid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_curhp;
        break;
      }

      // optional int32 curhp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curhp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curhp_)));
          set_has_curhp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_curmorale;
        break;
      }

      // optional int32 curmorale = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curmorale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curmorale_)));
          set_has_curmorale();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_curpos;
        break;
      }

      // optional int32 curpos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curpos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curpos_)));
          set_has_curpos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyExpeditionHero_HeroData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 heroid = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->heroid(), output);
  }

  // optional int32 curhp = 2;
  if (has_curhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->curhp(), output);
  }

  // optional int32 curmorale = 3;
  if (has_curmorale()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->curmorale(), output);
  }

  // optional int32 curpos = 4;
  if (has_curpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->curpos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyExpeditionHero_HeroData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 heroid = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->heroid(), target);
  }

  // optional int32 curhp = 2;
  if (has_curhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->curhp(), target);
  }

  // optional int32 curmorale = 3;
  if (has_curmorale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->curmorale(), target);
  }

  // optional int32 curpos = 4;
  if (has_curpos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->curpos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyExpeditionHero_HeroData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->heroid());
    }

    // optional int32 curhp = 2;
    if (has_curhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curhp());
    }

    // optional int32 curmorale = 3;
    if (has_curmorale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curmorale());
    }

    // optional int32 curpos = 4;
    if (has_curpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curpos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyExpeditionHero_HeroData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyExpeditionHero_HeroData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyExpeditionHero_HeroData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyExpeditionHero_HeroData::MergeFrom(const NotifyExpeditionHero_HeroData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_curhp()) {
      set_curhp(from.curhp());
    }
    if (from.has_curmorale()) {
      set_curmorale(from.curmorale());
    }
    if (from.has_curpos()) {
      set_curpos(from.curpos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyExpeditionHero_HeroData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyExpeditionHero_HeroData::CopyFrom(const NotifyExpeditionHero_HeroData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyExpeditionHero_HeroData::IsInitialized() const {

  return true;
}

void NotifyExpeditionHero_HeroData::Swap(NotifyExpeditionHero_HeroData* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(curhp_, other->curhp_);
    std::swap(curmorale_, other->curmorale_);
    std::swap(curpos_, other->curpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyExpeditionHero_HeroData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyExpeditionHero_HeroData_descriptor_;
  metadata.reflection = NotifyExpeditionHero_HeroData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int NotifyExpeditionHero::kBclearFieldNumber;
const int NotifyExpeditionHero::kHerosFieldNumber;
#endif  // !_MSC_VER

NotifyExpeditionHero::NotifyExpeditionHero()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyExpeditionHero::InitAsDefaultInstance() {
}

NotifyExpeditionHero::NotifyExpeditionHero(const NotifyExpeditionHero& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyExpeditionHero::SharedCtor() {
  _cached_size_ = 0;
  bclear_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyExpeditionHero::~NotifyExpeditionHero() {
  SharedDtor();
}

void NotifyExpeditionHero::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyExpeditionHero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyExpeditionHero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyExpeditionHero_descriptor_;
}

const NotifyExpeditionHero& NotifyExpeditionHero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageNotifyExpeditionHero_2eproto();
  return *default_instance_;
}

NotifyExpeditionHero* NotifyExpeditionHero::default_instance_ = NULL;

NotifyExpeditionHero* NotifyExpeditionHero::New() const {
  return new NotifyExpeditionHero;
}

void NotifyExpeditionHero::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bclear_ = false;
  }
  heros_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyExpeditionHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bclear = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bclear_)));
          set_has_bclear();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_heros;
        break;
      }

      // repeated .Message.NotifyExpeditionHero.HeroData heros = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heros:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heros()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_heros;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyExpeditionHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool bclear = 1;
  if (has_bclear()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bclear(), output);
  }

  // repeated .Message.NotifyExpeditionHero.HeroData heros = 2;
  for (int i = 0; i < this->heros_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->heros(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyExpeditionHero::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool bclear = 1;
  if (has_bclear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bclear(), target);
  }

  // repeated .Message.NotifyExpeditionHero.HeroData heros = 2;
  for (int i = 0; i < this->heros_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->heros(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyExpeditionHero::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool bclear = 1;
    if (has_bclear()) {
      total_size += 1 + 1;
    }

  }
  // repeated .Message.NotifyExpeditionHero.HeroData heros = 2;
  total_size += 1 * this->heros_size();
  for (int i = 0; i < this->heros_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heros(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyExpeditionHero::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyExpeditionHero* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyExpeditionHero*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyExpeditionHero::MergeFrom(const NotifyExpeditionHero& from) {
  GOOGLE_CHECK_NE(&from, this);
  heros_.MergeFrom(from.heros_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bclear()) {
      set_bclear(from.bclear());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyExpeditionHero::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyExpeditionHero::CopyFrom(const NotifyExpeditionHero& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyExpeditionHero::IsInitialized() const {

  return true;
}

void NotifyExpeditionHero::Swap(NotifyExpeditionHero* other) {
  if (other != this) {
    std::swap(bclear_, other->bclear_);
    heros_.Swap(&other->heros_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyExpeditionHero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyExpeditionHero_descriptor_;
  metadata.reflection = NotifyExpeditionHero_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
