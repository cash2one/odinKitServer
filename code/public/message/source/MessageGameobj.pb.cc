// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageGameobj.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageGameobj.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* SyncAttrs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncAttrs_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncAttrsObjField_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncAttrsObjField_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncAttrsMapField_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncAttrsMapField_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqPlayerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqPlayerData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageGameobj_2eproto() {
  protobuf_AddDesc_MessageGameobj_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageGameobj.proto");
  GOOGLE_CHECK(file != NULL);
  SyncAttrs_descriptor_ = file->message_type(0);
  static const int SyncAttrs_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrs, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrs, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrs, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrs, mapkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrs, jsonstr_),
  };
  SyncAttrs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncAttrs_descriptor_,
      SyncAttrs::default_instance_,
      SyncAttrs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncAttrs));
  SyncAttrsObjField_descriptor_ = file->message_type(1);
  static const int SyncAttrsObjField_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, vali32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, vali64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, valstr_),
  };
  SyncAttrsObjField_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncAttrsObjField_descriptor_,
      SyncAttrsObjField::default_instance_,
      SyncAttrsObjField_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsObjField, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncAttrsObjField));
  SyncAttrsMapField_descriptor_ = file->message_type(2);
  static const int SyncAttrsMapField_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, mapkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, vali32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, vali64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, valstr_),
  };
  SyncAttrsMapField_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncAttrsMapField_descriptor_,
      SyncAttrsMapField::default_instance_,
      SyncAttrsMapField_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAttrsMapField, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncAttrsMapField));
  ReqPlayerData_descriptor_ = file->message_type(3);
  static const int ReqPlayerData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPlayerData, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPlayerData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPlayerData, key_),
  };
  ReqPlayerData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqPlayerData_descriptor_,
      ReqPlayerData::default_instance_,
      ReqPlayerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPlayerData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqPlayerData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqPlayerData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageGameobj_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncAttrs_descriptor_, &SyncAttrs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncAttrsObjField_descriptor_, &SyncAttrsObjField::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncAttrsMapField_descriptor_, &SyncAttrsMapField::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqPlayerData_descriptor_, &ReqPlayerData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageGameobj_2eproto() {
  delete SyncAttrs::default_instance_;
  delete SyncAttrs_reflection_;
  delete SyncAttrsObjField::default_instance_;
  delete SyncAttrsObjField_reflection_;
  delete SyncAttrsMapField::default_instance_;
  delete SyncAttrsMapField_reflection_;
  delete ReqPlayerData::default_instance_;
  delete ReqPlayerData_reflection_;
}

void protobuf_AddDesc_MessageGameobj_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024MessageGameobj.proto\022\007Message\"S\n\tSyncA"
    "ttrs\022\n\n\002id\030\001 \001(\003\022\014\n\004type\030\002 \001(\t\022\013\n\003key\030\003 "
    "\001(\t\022\016\n\006mapkey\030\004 \001(\t\022\017\n\007jsonstr\030\005 \001(\t\"{\n\021"
    "SyncAttrsObjField\022\n\n\002id\030\001 \001(\003\022\014\n\004type\030\002 "
    "\001(\t\022\r\n\005group\030\003 \001(\t\022\r\n\005field\030\004 \001(\t\022\016\n\006val"
    "i32\030\005 \001(\005\022\016\n\006vali64\030\006 \001(\003\022\016\n\006valstr\030\007 \001("
    "\t\"\213\001\n\021SyncAttrsMapField\022\n\n\002id\030\001 \001(\003\022\014\n\004t"
    "ype\030\002 \001(\t\022\r\n\005group\030\003 \001(\t\022\016\n\006mapkey\030\004 \001(\t"
    "\022\r\n\005field\030\005 \001(\t\022\016\n\006vali32\030\006 \001(\005\022\016\n\006vali6"
    "4\030\007 \001(\003\022\016\n\006valstr\030\010 \001(\t\"7\n\rReqPlayerData"
    "\022\013\n\003pid\030\001 \001(\003\022\014\n\004type\030\002 \001(\t\022\013\n\003key\030\003 \001(\t", 440);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageGameobj.proto", &protobuf_RegisterTypes);
  SyncAttrs::default_instance_ = new SyncAttrs();
  SyncAttrsObjField::default_instance_ = new SyncAttrsObjField();
  SyncAttrsMapField::default_instance_ = new SyncAttrsMapField();
  ReqPlayerData::default_instance_ = new ReqPlayerData();
  SyncAttrs::default_instance_->InitAsDefaultInstance();
  SyncAttrsObjField::default_instance_->InitAsDefaultInstance();
  SyncAttrsMapField::default_instance_->InitAsDefaultInstance();
  ReqPlayerData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageGameobj_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageGameobj_2eproto {
  StaticDescriptorInitializer_MessageGameobj_2eproto() {
    protobuf_AddDesc_MessageGameobj_2eproto();
  }
} static_descriptor_initializer_MessageGameobj_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SyncAttrs::kIdFieldNumber;
const int SyncAttrs::kTypeFieldNumber;
const int SyncAttrs::kKeyFieldNumber;
const int SyncAttrs::kMapkeyFieldNumber;
const int SyncAttrs::kJsonstrFieldNumber;
#endif  // !_MSC_VER

SyncAttrs::SyncAttrs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncAttrs::InitAsDefaultInstance() {
}

SyncAttrs::SyncAttrs(const SyncAttrs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncAttrs::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mapkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  jsonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncAttrs::~SyncAttrs() {
  SharedDtor();
}

void SyncAttrs::SharedDtor() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (mapkey_ != &::google::protobuf::internal::kEmptyString) {
    delete mapkey_;
  }
  if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
    delete jsonstr_;
  }
  if (this != default_instance_) {
  }
}

void SyncAttrs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncAttrs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncAttrs_descriptor_;
}

const SyncAttrs& SyncAttrs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageGameobj_2eproto();
  return *default_instance_;
}

SyncAttrs* SyncAttrs::default_instance_ = NULL;

SyncAttrs* SyncAttrs::New() const {
  return new SyncAttrs;
}

void SyncAttrs::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    if (has_mapkey()) {
      if (mapkey_ != &::google::protobuf::internal::kEmptyString) {
        mapkey_->clear();
      }
    }
    if (has_jsonstr()) {
      if (jsonstr_ != &::google::protobuf::internal::kEmptyString) {
        jsonstr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncAttrs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional string type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_key;
        break;
      }

      // optional string key = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mapkey;
        break;
      }

      // optional string mapkey = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mapkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mapkey().data(), this->mapkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_jsonstr;
        break;
      }

      // optional string jsonstr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_jsonstr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jsonstr().data(), this->jsonstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncAttrs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type(), output);
  }

  // optional string key = 3;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->key(), output);
  }

  // optional string mapkey = 4;
  if (has_mapkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mapkey().data(), this->mapkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->mapkey(), output);
  }

  // optional string jsonstr = 5;
  if (has_jsonstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jsonstr().data(), this->jsonstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->jsonstr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncAttrs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional string key = 3;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // optional string mapkey = 4;
  if (has_mapkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mapkey().data(), this->mapkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mapkey(), target);
  }

  // optional string jsonstr = 5;
  if (has_jsonstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jsonstr().data(), this->jsonstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->jsonstr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncAttrs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string key = 3;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string mapkey = 4;
    if (has_mapkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapkey());
    }

    // optional string jsonstr = 5;
    if (has_jsonstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jsonstr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncAttrs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncAttrs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncAttrs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncAttrs::MergeFrom(const SyncAttrs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_mapkey()) {
      set_mapkey(from.mapkey());
    }
    if (from.has_jsonstr()) {
      set_jsonstr(from.jsonstr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncAttrs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncAttrs::CopyFrom(const SyncAttrs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncAttrs::IsInitialized() const {

  return true;
}

void SyncAttrs::Swap(SyncAttrs* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(key_, other->key_);
    std::swap(mapkey_, other->mapkey_);
    std::swap(jsonstr_, other->jsonstr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncAttrs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncAttrs_descriptor_;
  metadata.reflection = SyncAttrs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncAttrsObjField::kIdFieldNumber;
const int SyncAttrsObjField::kTypeFieldNumber;
const int SyncAttrsObjField::kGroupFieldNumber;
const int SyncAttrsObjField::kFieldFieldNumber;
const int SyncAttrsObjField::kVali32FieldNumber;
const int SyncAttrsObjField::kVali64FieldNumber;
const int SyncAttrsObjField::kValstrFieldNumber;
#endif  // !_MSC_VER

SyncAttrsObjField::SyncAttrsObjField()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncAttrsObjField::InitAsDefaultInstance() {
}

SyncAttrsObjField::SyncAttrsObjField(const SyncAttrsObjField& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncAttrsObjField::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  field_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vali32_ = 0;
  vali64_ = GOOGLE_LONGLONG(0);
  valstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncAttrsObjField::~SyncAttrsObjField() {
  SharedDtor();
}

void SyncAttrsObjField::SharedDtor() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (group_ != &::google::protobuf::internal::kEmptyString) {
    delete group_;
  }
  if (field_ != &::google::protobuf::internal::kEmptyString) {
    delete field_;
  }
  if (valstr_ != &::google::protobuf::internal::kEmptyString) {
    delete valstr_;
  }
  if (this != default_instance_) {
  }
}

void SyncAttrsObjField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncAttrsObjField::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncAttrsObjField_descriptor_;
}

const SyncAttrsObjField& SyncAttrsObjField::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageGameobj_2eproto();
  return *default_instance_;
}

SyncAttrsObjField* SyncAttrsObjField::default_instance_ = NULL;

SyncAttrsObjField* SyncAttrsObjField::New() const {
  return new SyncAttrsObjField;
}

void SyncAttrsObjField::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
    if (has_group()) {
      if (group_ != &::google::protobuf::internal::kEmptyString) {
        group_->clear();
      }
    }
    if (has_field()) {
      if (field_ != &::google::protobuf::internal::kEmptyString) {
        field_->clear();
      }
    }
    vali32_ = 0;
    vali64_ = GOOGLE_LONGLONG(0);
    if (has_valstr()) {
      if (valstr_ != &::google::protobuf::internal::kEmptyString) {
        valstr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncAttrsObjField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional string type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_group;
        break;
      }

      // optional string group = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_field;
        break;
      }

      // optional string field = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->field().data(), this->field().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_vali32;
        break;
      }

      // optional int32 vali32 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vali32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vali32_)));
          set_has_vali32();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_vali64;
        break;
      }

      // optional int64 vali64 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vali64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vali64_)));
          set_has_vali64();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_valstr;
        break;
      }

      // optional string valstr = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_valstr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valstr().data(), this->valstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncAttrsObjField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type(), output);
  }

  // optional string group = 3;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->group(), output);
  }

  // optional string field = 4;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->field(), output);
  }

  // optional int32 vali32 = 5;
  if (has_vali32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vali32(), output);
  }

  // optional int64 vali64 = 6;
  if (has_vali64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->vali64(), output);
  }

  // optional string valstr = 7;
  if (has_valstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valstr().data(), this->valstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->valstr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncAttrsObjField::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional string group = 3;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group(), target);
  }

  // optional string field = 4;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->field(), target);
  }

  // optional int32 vali32 = 5;
  if (has_vali32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->vali32(), target);
  }

  // optional int64 vali64 = 6;
  if (has_vali64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->vali64(), target);
  }

  // optional string valstr = 7;
  if (has_valstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valstr().data(), this->valstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->valstr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncAttrsObjField::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string group = 3;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group());
    }

    // optional string field = 4;
    if (has_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field());
    }

    // optional int32 vali32 = 5;
    if (has_vali32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vali32());
    }

    // optional int64 vali64 = 6;
    if (has_vali64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->vali64());
    }

    // optional string valstr = 7;
    if (has_valstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valstr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncAttrsObjField::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncAttrsObjField* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncAttrsObjField*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncAttrsObjField::MergeFrom(const SyncAttrsObjField& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_field()) {
      set_field(from.field());
    }
    if (from.has_vali32()) {
      set_vali32(from.vali32());
    }
    if (from.has_vali64()) {
      set_vali64(from.vali64());
    }
    if (from.has_valstr()) {
      set_valstr(from.valstr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncAttrsObjField::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncAttrsObjField::CopyFrom(const SyncAttrsObjField& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncAttrsObjField::IsInitialized() const {

  return true;
}

void SyncAttrsObjField::Swap(SyncAttrsObjField* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(group_, other->group_);
    std::swap(field_, other->field_);
    std::swap(vali32_, other->vali32_);
    std::swap(vali64_, other->vali64_);
    std::swap(valstr_, other->valstr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncAttrsObjField::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncAttrsObjField_descriptor_;
  metadata.reflection = SyncAttrsObjField_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncAttrsMapField::kIdFieldNumber;
const int SyncAttrsMapField::kTypeFieldNumber;
const int SyncAttrsMapField::kGroupFieldNumber;
const int SyncAttrsMapField::kMapkeyFieldNumber;
const int SyncAttrsMapField::kFieldFieldNumber;
const int SyncAttrsMapField::kVali32FieldNumber;
const int SyncAttrsMapField::kVali64FieldNumber;
const int SyncAttrsMapField::kValstrFieldNumber;
#endif  // !_MSC_VER

SyncAttrsMapField::SyncAttrsMapField()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncAttrsMapField::InitAsDefaultInstance() {
}

SyncAttrsMapField::SyncAttrsMapField(const SyncAttrsMapField& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncAttrsMapField::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mapkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  field_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vali32_ = 0;
  vali64_ = GOOGLE_LONGLONG(0);
  valstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncAttrsMapField::~SyncAttrsMapField() {
  SharedDtor();
}

void SyncAttrsMapField::SharedDtor() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (group_ != &::google::protobuf::internal::kEmptyString) {
    delete group_;
  }
  if (mapkey_ != &::google::protobuf::internal::kEmptyString) {
    delete mapkey_;
  }
  if (field_ != &::google::protobuf::internal::kEmptyString) {
    delete field_;
  }
  if (valstr_ != &::google::protobuf::internal::kEmptyString) {
    delete valstr_;
  }
  if (this != default_instance_) {
  }
}

void SyncAttrsMapField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncAttrsMapField::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncAttrsMapField_descriptor_;
}

const SyncAttrsMapField& SyncAttrsMapField::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageGameobj_2eproto();
  return *default_instance_;
}

SyncAttrsMapField* SyncAttrsMapField::default_instance_ = NULL;

SyncAttrsMapField* SyncAttrsMapField::New() const {
  return new SyncAttrsMapField;
}

void SyncAttrsMapField::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
    if (has_group()) {
      if (group_ != &::google::protobuf::internal::kEmptyString) {
        group_->clear();
      }
    }
    if (has_mapkey()) {
      if (mapkey_ != &::google::protobuf::internal::kEmptyString) {
        mapkey_->clear();
      }
    }
    if (has_field()) {
      if (field_ != &::google::protobuf::internal::kEmptyString) {
        field_->clear();
      }
    }
    vali32_ = 0;
    vali64_ = GOOGLE_LONGLONG(0);
    if (has_valstr()) {
      if (valstr_ != &::google::protobuf::internal::kEmptyString) {
        valstr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncAttrsMapField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional string type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_group;
        break;
      }

      // optional string group = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mapkey;
        break;
      }

      // optional string mapkey = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mapkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mapkey().data(), this->mapkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_field;
        break;
      }

      // optional string field = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->field().data(), this->field().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_vali32;
        break;
      }

      // optional int32 vali32 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vali32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vali32_)));
          set_has_vali32();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_vali64;
        break;
      }

      // optional int64 vali64 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vali64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vali64_)));
          set_has_vali64();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_valstr;
        break;
      }

      // optional string valstr = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_valstr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valstr().data(), this->valstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncAttrsMapField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type(), output);
  }

  // optional string group = 3;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->group(), output);
  }

  // optional string mapkey = 4;
  if (has_mapkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mapkey().data(), this->mapkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->mapkey(), output);
  }

  // optional string field = 5;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->field(), output);
  }

  // optional int32 vali32 = 6;
  if (has_vali32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vali32(), output);
  }

  // optional int64 vali64 = 7;
  if (has_vali64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->vali64(), output);
  }

  // optional string valstr = 8;
  if (has_valstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valstr().data(), this->valstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->valstr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncAttrsMapField::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional string group = 3;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group(), target);
  }

  // optional string mapkey = 4;
  if (has_mapkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mapkey().data(), this->mapkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mapkey(), target);
  }

  // optional string field = 5;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->field(), target);
  }

  // optional int32 vali32 = 6;
  if (has_vali32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vali32(), target);
  }

  // optional int64 vali64 = 7;
  if (has_vali64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->vali64(), target);
  }

  // optional string valstr = 8;
  if (has_valstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valstr().data(), this->valstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->valstr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncAttrsMapField::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }

    // optional string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string group = 3;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group());
    }

    // optional string mapkey = 4;
    if (has_mapkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapkey());
    }

    // optional string field = 5;
    if (has_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field());
    }

    // optional int32 vali32 = 6;
    if (has_vali32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vali32());
    }

    // optional int64 vali64 = 7;
    if (has_vali64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->vali64());
    }

    // optional string valstr = 8;
    if (has_valstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valstr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncAttrsMapField::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncAttrsMapField* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncAttrsMapField*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncAttrsMapField::MergeFrom(const SyncAttrsMapField& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_mapkey()) {
      set_mapkey(from.mapkey());
    }
    if (from.has_field()) {
      set_field(from.field());
    }
    if (from.has_vali32()) {
      set_vali32(from.vali32());
    }
    if (from.has_vali64()) {
      set_vali64(from.vali64());
    }
    if (from.has_valstr()) {
      set_valstr(from.valstr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncAttrsMapField::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncAttrsMapField::CopyFrom(const SyncAttrsMapField& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncAttrsMapField::IsInitialized() const {

  return true;
}

void SyncAttrsMapField::Swap(SyncAttrsMapField* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(group_, other->group_);
    std::swap(mapkey_, other->mapkey_);
    std::swap(field_, other->field_);
    std::swap(vali32_, other->vali32_);
    std::swap(vali64_, other->vali64_);
    std::swap(valstr_, other->valstr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncAttrsMapField::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncAttrsMapField_descriptor_;
  metadata.reflection = SyncAttrsMapField_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReqPlayerData::kPidFieldNumber;
const int ReqPlayerData::kTypeFieldNumber;
const int ReqPlayerData::kKeyFieldNumber;
#endif  // !_MSC_VER

ReqPlayerData::ReqPlayerData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReqPlayerData::InitAsDefaultInstance() {
}

ReqPlayerData::ReqPlayerData(const ReqPlayerData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReqPlayerData::SharedCtor() {
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqPlayerData::~ReqPlayerData() {
  SharedDtor();
}

void ReqPlayerData::SharedDtor() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (this != default_instance_) {
  }
}

void ReqPlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqPlayerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqPlayerData_descriptor_;
}

const ReqPlayerData& ReqPlayerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageGameobj_2eproto();
  return *default_instance_;
}

ReqPlayerData* ReqPlayerData::default_instance_ = NULL;

ReqPlayerData* ReqPlayerData::New() const {
  return new ReqPlayerData;
}

void ReqPlayerData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = GOOGLE_LONGLONG(0);
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqPlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional string type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_key;
        break;
      }

      // optional string key = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReqPlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->type(), output);
  }

  // optional string key = 3;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->key(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReqPlayerData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  // optional string type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // optional string key = 3;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReqPlayerData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }

    // optional string type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string key = 3;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqPlayerData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqPlayerData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqPlayerData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqPlayerData::MergeFrom(const ReqPlayerData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_key()) {
      set_key(from.key());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqPlayerData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqPlayerData::CopyFrom(const ReqPlayerData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqPlayerData::IsInitialized() const {

  return true;
}

void ReqPlayerData::Swap(ReqPlayerData* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    std::swap(type_, other->type_);
    std::swap(key_, other->key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqPlayerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqPlayerData_descriptor_;
  metadata.reflection = ReqPlayerData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
