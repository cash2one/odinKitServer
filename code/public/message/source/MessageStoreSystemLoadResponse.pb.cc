// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageStoreSystemLoadResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageStoreSystemLoadResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* StoreSystemLoadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreSystemLoadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreSystemLoadResponse_storeitem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreSystemLoadResponse_storeitem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageStoreSystemLoadResponse_2eproto() {
  protobuf_AddDesc_MessageStoreSystemLoadResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageStoreSystemLoadResponse.proto");
  GOOGLE_CHECK(file != NULL);
  StoreSystemLoadResponse_descriptor_ = file->message_type(0);
  static const int StoreSystemLoadResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse, groupitem_),
  };
  StoreSystemLoadResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreSystemLoadResponse_descriptor_,
      StoreSystemLoadResponse::default_instance_,
      StoreSystemLoadResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreSystemLoadResponse));
  StoreSystemLoadResponse_storeitem_descriptor_ = StoreSystemLoadResponse_descriptor_->nested_type(0);
  static const int StoreSystemLoadResponse_storeitem_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, timingprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, timingpricestarttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, timingpricestoptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, timeup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, timedown_),
  };
  StoreSystemLoadResponse_storeitem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreSystemLoadResponse_storeitem_descriptor_,
      StoreSystemLoadResponse_storeitem::default_instance_,
      StoreSystemLoadResponse_storeitem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemLoadResponse_storeitem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreSystemLoadResponse_storeitem));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageStoreSystemLoadResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreSystemLoadResponse_descriptor_, &StoreSystemLoadResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreSystemLoadResponse_storeitem_descriptor_, &StoreSystemLoadResponse_storeitem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageStoreSystemLoadResponse_2eproto() {
  delete StoreSystemLoadResponse::default_instance_;
  delete StoreSystemLoadResponse_reflection_;
  delete StoreSystemLoadResponse_storeitem::default_instance_;
  delete StoreSystemLoadResponse_storeitem_reflection_;
}

void protobuf_AddDesc_MessageStoreSystemLoadResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$MessageStoreSystemLoadResponse.proto\022\007"
    "Message\"\252\002\n\027StoreSystemLoadResponse\022\014\n\004t"
    "ype\030\001 \001(\005\022\r\n\005group\030\002 \001(\005\022=\n\tgroupitem\030\003 "
    "\003(\0132*.Message.StoreSystemLoadResponse.st"
    "oreitem\032\262\001\n\tstoreitem\022\022\n\ntemplateid\030\001 \001("
    "\005\022\020\n\010currency\030\002 \001(\005\022\r\n\005price\030\003 \001(\005\022\023\n\013ti"
    "mingprice\030\004 \001(\005\022\034\n\024timingpricestarttime\030"
    "\005 \001(\004\022\033\n\023timingpricestoptime\030\006 \001(\004\022\016\n\006ti"
    "meup\030\007 \001(\004\022\020\n\010timedown\030\010 \001(\004", 348);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageStoreSystemLoadResponse.proto", &protobuf_RegisterTypes);
  StoreSystemLoadResponse::default_instance_ = new StoreSystemLoadResponse();
  StoreSystemLoadResponse_storeitem::default_instance_ = new StoreSystemLoadResponse_storeitem();
  StoreSystemLoadResponse::default_instance_->InitAsDefaultInstance();
  StoreSystemLoadResponse_storeitem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageStoreSystemLoadResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageStoreSystemLoadResponse_2eproto {
  StaticDescriptorInitializer_MessageStoreSystemLoadResponse_2eproto() {
    protobuf_AddDesc_MessageStoreSystemLoadResponse_2eproto();
  }
} static_descriptor_initializer_MessageStoreSystemLoadResponse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int StoreSystemLoadResponse_storeitem::kTemplateidFieldNumber;
const int StoreSystemLoadResponse_storeitem::kCurrencyFieldNumber;
const int StoreSystemLoadResponse_storeitem::kPriceFieldNumber;
const int StoreSystemLoadResponse_storeitem::kTimingpriceFieldNumber;
const int StoreSystemLoadResponse_storeitem::kTimingpricestarttimeFieldNumber;
const int StoreSystemLoadResponse_storeitem::kTimingpricestoptimeFieldNumber;
const int StoreSystemLoadResponse_storeitem::kTimeupFieldNumber;
const int StoreSystemLoadResponse_storeitem::kTimedownFieldNumber;
#endif  // !_MSC_VER

StoreSystemLoadResponse_storeitem::StoreSystemLoadResponse_storeitem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreSystemLoadResponse_storeitem::InitAsDefaultInstance() {
}

StoreSystemLoadResponse_storeitem::StoreSystemLoadResponse_storeitem(const StoreSystemLoadResponse_storeitem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreSystemLoadResponse_storeitem::SharedCtor() {
  _cached_size_ = 0;
  templateid_ = 0;
  currency_ = 0;
  price_ = 0;
  timingprice_ = 0;
  timingpricestarttime_ = GOOGLE_ULONGLONG(0);
  timingpricestoptime_ = GOOGLE_ULONGLONG(0);
  timeup_ = GOOGLE_ULONGLONG(0);
  timedown_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreSystemLoadResponse_storeitem::~StoreSystemLoadResponse_storeitem() {
  SharedDtor();
}

void StoreSystemLoadResponse_storeitem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreSystemLoadResponse_storeitem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreSystemLoadResponse_storeitem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreSystemLoadResponse_storeitem_descriptor_;
}

const StoreSystemLoadResponse_storeitem& StoreSystemLoadResponse_storeitem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageStoreSystemLoadResponse_2eproto();
  return *default_instance_;
}

StoreSystemLoadResponse_storeitem* StoreSystemLoadResponse_storeitem::default_instance_ = NULL;

StoreSystemLoadResponse_storeitem* StoreSystemLoadResponse_storeitem::New() const {
  return new StoreSystemLoadResponse_storeitem;
}

void StoreSystemLoadResponse_storeitem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    templateid_ = 0;
    currency_ = 0;
    price_ = 0;
    timingprice_ = 0;
    timingpricestarttime_ = GOOGLE_ULONGLONG(0);
    timingpricestoptime_ = GOOGLE_ULONGLONG(0);
    timeup_ = GOOGLE_ULONGLONG(0);
    timedown_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreSystemLoadResponse_storeitem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 templateid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_currency;
        break;
      }

      // optional int32 currency = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_price;
        break;
      }

      // optional int32 price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_timingprice;
        break;
      }

      // optional int32 timingprice = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timingprice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timingprice_)));
          set_has_timingprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_timingpricestarttime;
        break;
      }

      // optional uint64 timingpricestarttime = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timingpricestarttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timingpricestarttime_)));
          set_has_timingpricestarttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_timingpricestoptime;
        break;
      }

      // optional uint64 timingpricestoptime = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timingpricestoptime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timingpricestoptime_)));
          set_has_timingpricestoptime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_timeup;
        break;
      }

      // optional uint64 timeup = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timeup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeup_)));
          set_has_timeup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_timedown;
        break;
      }

      // optional uint64 timedown = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timedown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timedown_)));
          set_has_timedown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreSystemLoadResponse_storeitem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 templateid = 1;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->templateid(), output);
  }

  // optional int32 currency = 2;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->currency(), output);
  }

  // optional int32 price = 3;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->price(), output);
  }

  // optional int32 timingprice = 4;
  if (has_timingprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timingprice(), output);
  }

  // optional uint64 timingpricestarttime = 5;
  if (has_timingpricestarttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->timingpricestarttime(), output);
  }

  // optional uint64 timingpricestoptime = 6;
  if (has_timingpricestoptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->timingpricestoptime(), output);
  }

  // optional uint64 timeup = 7;
  if (has_timeup()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->timeup(), output);
  }

  // optional uint64 timedown = 8;
  if (has_timedown()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->timedown(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreSystemLoadResponse_storeitem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 templateid = 1;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->templateid(), target);
  }

  // optional int32 currency = 2;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->currency(), target);
  }

  // optional int32 price = 3;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->price(), target);
  }

  // optional int32 timingprice = 4;
  if (has_timingprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timingprice(), target);
  }

  // optional uint64 timingpricestarttime = 5;
  if (has_timingpricestarttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->timingpricestarttime(), target);
  }

  // optional uint64 timingpricestoptime = 6;
  if (has_timingpricestoptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->timingpricestoptime(), target);
  }

  // optional uint64 timeup = 7;
  if (has_timeup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->timeup(), target);
  }

  // optional uint64 timedown = 8;
  if (has_timedown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->timedown(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreSystemLoadResponse_storeitem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 templateid = 1;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int32 currency = 2;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

    // optional int32 price = 3;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int32 timingprice = 4;
    if (has_timingprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timingprice());
    }

    // optional uint64 timingpricestarttime = 5;
    if (has_timingpricestarttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timingpricestarttime());
    }

    // optional uint64 timingpricestoptime = 6;
    if (has_timingpricestoptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timingpricestoptime());
    }

    // optional uint64 timeup = 7;
    if (has_timeup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeup());
    }

    // optional uint64 timedown = 8;
    if (has_timedown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timedown());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreSystemLoadResponse_storeitem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreSystemLoadResponse_storeitem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreSystemLoadResponse_storeitem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreSystemLoadResponse_storeitem::MergeFrom(const StoreSystemLoadResponse_storeitem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_timingprice()) {
      set_timingprice(from.timingprice());
    }
    if (from.has_timingpricestarttime()) {
      set_timingpricestarttime(from.timingpricestarttime());
    }
    if (from.has_timingpricestoptime()) {
      set_timingpricestoptime(from.timingpricestoptime());
    }
    if (from.has_timeup()) {
      set_timeup(from.timeup());
    }
    if (from.has_timedown()) {
      set_timedown(from.timedown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreSystemLoadResponse_storeitem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreSystemLoadResponse_storeitem::CopyFrom(const StoreSystemLoadResponse_storeitem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreSystemLoadResponse_storeitem::IsInitialized() const {

  return true;
}

void StoreSystemLoadResponse_storeitem::Swap(StoreSystemLoadResponse_storeitem* other) {
  if (other != this) {
    std::swap(templateid_, other->templateid_);
    std::swap(currency_, other->currency_);
    std::swap(price_, other->price_);
    std::swap(timingprice_, other->timingprice_);
    std::swap(timingpricestarttime_, other->timingpricestarttime_);
    std::swap(timingpricestoptime_, other->timingpricestoptime_);
    std::swap(timeup_, other->timeup_);
    std::swap(timedown_, other->timedown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreSystemLoadResponse_storeitem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreSystemLoadResponse_storeitem_descriptor_;
  metadata.reflection = StoreSystemLoadResponse_storeitem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int StoreSystemLoadResponse::kTypeFieldNumber;
const int StoreSystemLoadResponse::kGroupFieldNumber;
const int StoreSystemLoadResponse::kGroupitemFieldNumber;
#endif  // !_MSC_VER

StoreSystemLoadResponse::StoreSystemLoadResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreSystemLoadResponse::InitAsDefaultInstance() {
}

StoreSystemLoadResponse::StoreSystemLoadResponse(const StoreSystemLoadResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreSystemLoadResponse::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  group_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreSystemLoadResponse::~StoreSystemLoadResponse() {
  SharedDtor();
}

void StoreSystemLoadResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreSystemLoadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreSystemLoadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreSystemLoadResponse_descriptor_;
}

const StoreSystemLoadResponse& StoreSystemLoadResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageStoreSystemLoadResponse_2eproto();
  return *default_instance_;
}

StoreSystemLoadResponse* StoreSystemLoadResponse::default_instance_ = NULL;

StoreSystemLoadResponse* StoreSystemLoadResponse::New() const {
  return new StoreSystemLoadResponse;
}

void StoreSystemLoadResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    group_ = 0;
  }
  groupitem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreSystemLoadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_group;
        break;
      }

      // optional int32 group = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_groupitem;
        break;
      }

      // repeated .Message.StoreSystemLoadResponse.storeitem groupitem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_groupitem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_groupitem()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_groupitem;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreSystemLoadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 group = 2;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->group(), output);
  }

  // repeated .Message.StoreSystemLoadResponse.storeitem groupitem = 3;
  for (int i = 0; i < this->groupitem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->groupitem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreSystemLoadResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 group = 2;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->group(), target);
  }

  // repeated .Message.StoreSystemLoadResponse.storeitem groupitem = 3;
  for (int i = 0; i < this->groupitem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->groupitem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreSystemLoadResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 group = 2;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group());
    }

  }
  // repeated .Message.StoreSystemLoadResponse.storeitem groupitem = 3;
  total_size += 1 * this->groupitem_size();
  for (int i = 0; i < this->groupitem_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->groupitem(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreSystemLoadResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreSystemLoadResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreSystemLoadResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreSystemLoadResponse::MergeFrom(const StoreSystemLoadResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  groupitem_.MergeFrom(from.groupitem_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreSystemLoadResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreSystemLoadResponse::CopyFrom(const StoreSystemLoadResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreSystemLoadResponse::IsInitialized() const {

  return true;
}

void StoreSystemLoadResponse::Swap(StoreSystemLoadResponse* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(group_, other->group_);
    groupitem_.Swap(&other->groupitem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreSystemLoadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreSystemLoadResponse_descriptor_;
  metadata.reflection = StoreSystemLoadResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
