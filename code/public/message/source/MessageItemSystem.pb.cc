// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageItemSystem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageItemSystem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* ItemSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemSystem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageItemSystem_2eproto() {
  protobuf_AddDesc_MessageItemSystem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageItemSystem.proto");
  GOOGLE_CHECK(file != NULL);
  ItemSystem_descriptor_ = file->message_type(0);
  static const int ItemSystem_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, holeindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, equipposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, hunshiid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, hunshitemplateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, flag_),
  };
  ItemSystem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemSystem_descriptor_,
      ItemSystem::default_instance_,
      ItemSystem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSystem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemSystem));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageItemSystem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemSystem_descriptor_, &ItemSystem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageItemSystem_2eproto() {
  delete ItemSystem::default_instance_;
  delete ItemSystem_reflection_;
}

void protobuf_AddDesc_MessageItemSystem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027MessageItemSystem.proto\022\007Message\"\242\001\n\nI"
    "temSystem\022\017\n\007command\030\001 \001(\005\022\016\n\006roleid\030\002 \001"
    "(\003\022\017\n\007equipid\030\003 \001(\003\022\021\n\tholeindex\030\004 \001(\005\022\025"
    "\n\requipposition\030\005 \001(\005\022\020\n\010hunshiid\030\006 \001(\003\022"
    "\030\n\020hunshitemplateid\030\007 \001(\005\022\014\n\004flag\030\010 \001(\005", 199);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageItemSystem.proto", &protobuf_RegisterTypes);
  ItemSystem::default_instance_ = new ItemSystem();
  ItemSystem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageItemSystem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageItemSystem_2eproto {
  StaticDescriptorInitializer_MessageItemSystem_2eproto() {
    protobuf_AddDesc_MessageItemSystem_2eproto();
  }
} static_descriptor_initializer_MessageItemSystem_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ItemSystem::kCommandFieldNumber;
const int ItemSystem::kRoleidFieldNumber;
const int ItemSystem::kEquipidFieldNumber;
const int ItemSystem::kHoleindexFieldNumber;
const int ItemSystem::kEquippositionFieldNumber;
const int ItemSystem::kHunshiidFieldNumber;
const int ItemSystem::kHunshitemplateidFieldNumber;
const int ItemSystem::kFlagFieldNumber;
#endif  // !_MSC_VER

ItemSystem::ItemSystem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemSystem::InitAsDefaultInstance() {
}

ItemSystem::ItemSystem(const ItemSystem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemSystem::SharedCtor() {
  _cached_size_ = 0;
  command_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
  equipid_ = GOOGLE_LONGLONG(0);
  holeindex_ = 0;
  equipposition_ = 0;
  hunshiid_ = GOOGLE_LONGLONG(0);
  hunshitemplateid_ = 0;
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemSystem::~ItemSystem() {
  SharedDtor();
}

void ItemSystem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemSystem_descriptor_;
}

const ItemSystem& ItemSystem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItemSystem_2eproto();
  return *default_instance_;
}

ItemSystem* ItemSystem::default_instance_ = NULL;

ItemSystem* ItemSystem::New() const {
  return new ItemSystem;
}

void ItemSystem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    command_ = 0;
    roleid_ = GOOGLE_LONGLONG(0);
    equipid_ = GOOGLE_LONGLONG(0);
    holeindex_ = 0;
    equipposition_ = 0;
    hunshiid_ = GOOGLE_LONGLONG(0);
    hunshitemplateid_ = 0;
    flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 command = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
          set_has_command();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_roleid;
        break;
      }

      // optional int64 roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_equipid;
        break;
      }

      // optional int64 equipid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_holeindex;
        break;
      }

      // optional int32 holeindex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_holeindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &holeindex_)));
          set_has_holeindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_equipposition;
        break;
      }

      // optional int32 equipposition = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipposition:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipposition_)));
          set_has_equipposition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_hunshiid;
        break;
      }

      // optional int64 hunshiid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hunshiid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hunshiid_)));
          set_has_hunshiid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_hunshitemplateid;
        break;
      }

      // optional int32 hunshitemplateid = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hunshitemplateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hunshitemplateid_)));
          set_has_hunshitemplateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_flag;
        break;
      }

      // optional int32 flag = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command(), output);
  }

  // optional int64 roleid = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // optional int64 equipid = 3;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->equipid(), output);
  }

  // optional int32 holeindex = 4;
  if (has_holeindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->holeindex(), output);
  }

  // optional int32 equipposition = 5;
  if (has_equipposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->equipposition(), output);
  }

  // optional int64 hunshiid = 6;
  if (has_hunshiid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->hunshiid(), output);
  }

  // optional int32 hunshitemplateid = 7;
  if (has_hunshitemplateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hunshitemplateid(), output);
  }

  // optional int32 flag = 8;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemSystem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 command = 1;
  if (has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->command(), target);
  }

  // optional int64 roleid = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // optional int64 equipid = 3;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->equipid(), target);
  }

  // optional int32 holeindex = 4;
  if (has_holeindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->holeindex(), target);
  }

  // optional int32 equipposition = 5;
  if (has_equipposition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->equipposition(), target);
  }

  // optional int64 hunshiid = 6;
  if (has_hunshiid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->hunshiid(), target);
  }

  // optional int32 hunshitemplateid = 7;
  if (has_hunshitemplateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hunshitemplateid(), target);
  }

  // optional int32 flag = 8;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemSystem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 command = 1;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->command());
    }

    // optional int64 roleid = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

    // optional int64 equipid = 3;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->equipid());
    }

    // optional int32 holeindex = 4;
    if (has_holeindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->holeindex());
    }

    // optional int32 equipposition = 5;
    if (has_equipposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equipposition());
    }

    // optional int64 hunshiid = 6;
    if (has_hunshiid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->hunshiid());
    }

    // optional int32 hunshitemplateid = 7;
    if (has_hunshitemplateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hunshitemplateid());
    }

    // optional int32 flag = 8;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemSystem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemSystem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemSystem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemSystem::MergeFrom(const ItemSystem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command()) {
      set_command(from.command());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_holeindex()) {
      set_holeindex(from.holeindex());
    }
    if (from.has_equipposition()) {
      set_equipposition(from.equipposition());
    }
    if (from.has_hunshiid()) {
      set_hunshiid(from.hunshiid());
    }
    if (from.has_hunshitemplateid()) {
      set_hunshitemplateid(from.hunshitemplateid());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemSystem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemSystem::CopyFrom(const ItemSystem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemSystem::IsInitialized() const {

  return true;
}

void ItemSystem::Swap(ItemSystem* other) {
  if (other != this) {
    std::swap(command_, other->command_);
    std::swap(roleid_, other->roleid_);
    std::swap(equipid_, other->equipid_);
    std::swap(holeindex_, other->holeindex_);
    std::swap(equipposition_, other->equipposition_);
    std::swap(hunshiid_, other->hunshiid_);
    std::swap(hunshitemplateid_, other->hunshitemplateid_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemSystem_descriptor_;
  metadata.reflection = ItemSystem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
