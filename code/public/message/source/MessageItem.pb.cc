// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageItem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageItem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* ItemGainSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemGainSync_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemDeleteSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemDeleteSync_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemUseRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemUseRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemDeleteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemDeleteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemSellRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemSellRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemEquipRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemEquipRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemUnequipRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemUnequipRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemAttrSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemAttrSync_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemAttrSync_Attr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemAttrSync_Attr_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageItem_2eproto() {
  protobuf_AddDesc_MessageItem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageItem.proto");
  GOOGLE_CHECK(file != NULL);
  ItemGainSync_descriptor_ = file->message_type(0);
  static const int ItemGainSync_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, stack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, parent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, intensify_),
  };
  ItemGainSync_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemGainSync_descriptor_,
      ItemGainSync::default_instance_,
      ItemGainSync_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainSync, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemGainSync));
  ItemDeleteSync_descriptor_ = file->message_type(1);
  static const int ItemDeleteSync_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDeleteSync, itemid_),
  };
  ItemDeleteSync_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemDeleteSync_descriptor_,
      ItemDeleteSync::default_instance_,
      ItemDeleteSync_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDeleteSync, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDeleteSync, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemDeleteSync));
  ItemUseRequest_descriptor_ = file->message_type(2);
  static const int ItemUseRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUseRequest, itemid_),
  };
  ItemUseRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemUseRequest_descriptor_,
      ItemUseRequest::default_instance_,
      ItemUseRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUseRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUseRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemUseRequest));
  ItemDeleteRequest_descriptor_ = file->message_type(3);
  static const int ItemDeleteRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDeleteRequest, itemid_),
  };
  ItemDeleteRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemDeleteRequest_descriptor_,
      ItemDeleteRequest::default_instance_,
      ItemDeleteRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDeleteRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemDeleteRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemDeleteRequest));
  ItemSellRequest_descriptor_ = file->message_type(4);
  static const int ItemSellRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSellRequest, itemid_),
  };
  ItemSellRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemSellRequest_descriptor_,
      ItemSellRequest::default_instance_,
      ItemSellRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSellRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSellRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemSellRequest));
  ItemEquipRequest_descriptor_ = file->message_type(5);
  static const int ItemEquipRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemEquipRequest, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemEquipRequest, roleid_),
  };
  ItemEquipRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemEquipRequest_descriptor_,
      ItemEquipRequest::default_instance_,
      ItemEquipRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemEquipRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemEquipRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemEquipRequest));
  ItemUnequipRequest_descriptor_ = file->message_type(6);
  static const int ItemUnequipRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUnequipRequest, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUnequipRequest, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUnequipRequest, position_),
  };
  ItemUnequipRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemUnequipRequest_descriptor_,
      ItemUnequipRequest::default_instance_,
      ItemUnequipRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUnequipRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUnequipRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemUnequipRequest));
  ItemAttrSync_descriptor_ = file->message_type(7);
  static const int ItemAttrSync_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync, attr_),
  };
  ItemAttrSync_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemAttrSync_descriptor_,
      ItemAttrSync::default_instance_,
      ItemAttrSync_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemAttrSync));
  ItemAttrSync_Attr_descriptor_ = ItemAttrSync_descriptor_->nested_type(0);
  static const int ItemAttrSync_Attr_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, val32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, val64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, valstr_),
  };
  ItemAttrSync_Attr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemAttrSync_Attr_descriptor_,
      ItemAttrSync_Attr::default_instance_,
      ItemAttrSync_Attr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttrSync_Attr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemAttrSync_Attr));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageItem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemGainSync_descriptor_, &ItemGainSync::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemDeleteSync_descriptor_, &ItemDeleteSync::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemUseRequest_descriptor_, &ItemUseRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemDeleteRequest_descriptor_, &ItemDeleteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemSellRequest_descriptor_, &ItemSellRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemEquipRequest_descriptor_, &ItemEquipRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemUnequipRequest_descriptor_, &ItemUnequipRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemAttrSync_descriptor_, &ItemAttrSync::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemAttrSync_Attr_descriptor_, &ItemAttrSync_Attr::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageItem_2eproto() {
  delete ItemGainSync::default_instance_;
  delete ItemGainSync_reflection_;
  delete ItemDeleteSync::default_instance_;
  delete ItemDeleteSync_reflection_;
  delete ItemUseRequest::default_instance_;
  delete ItemUseRequest_reflection_;
  delete ItemDeleteRequest::default_instance_;
  delete ItemDeleteRequest_reflection_;
  delete ItemSellRequest::default_instance_;
  delete ItemSellRequest_reflection_;
  delete ItemEquipRequest::default_instance_;
  delete ItemEquipRequest_reflection_;
  delete ItemUnequipRequest::default_instance_;
  delete ItemUnequipRequest_reflection_;
  delete ItemAttrSync::default_instance_;
  delete ItemAttrSync_reflection_;
  delete ItemAttrSync_Attr::default_instance_;
  delete ItemAttrSync_Attr_reflection_;
}

void protobuf_AddDesc_MessageItem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021MessageItem.proto\022\007Message\"\207\001\n\014ItemGai"
    "nSync\022\016\n\006itemid\030\001 \001(\003\022\022\n\ntemplateid\030\002 \001("
    "\005\022\r\n\005stack\030\003 \001(\005\022\020\n\010position\030\004 \001(\005\022\016\n\006pa"
    "rent\030\005 \001(\003\022\017\n\007equipid\030\006 \001(\003\022\021\n\tintensify"
    "\030\007 \001(\005\" \n\016ItemDeleteSync\022\016\n\006itemid\030\001 \001(\003"
    "\" \n\016ItemUseRequest\022\016\n\006itemid\030\001 \001(\003\"#\n\021It"
    "emDeleteRequest\022\016\n\006itemid\030\001 \001(\003\"!\n\017ItemS"
    "ellRequest\022\016\n\006itemid\030\001 \001(\003\"2\n\020ItemEquipR"
    "equest\022\016\n\006itemid\030\001 \001(\003\022\016\n\006roleid\030\002 \001(\003\"F"
    "\n\022ItemUnequipRequest\022\016\n\006itemid\030\001 \001(\003\022\016\n\006"
    "roleid\030\002 \001(\003\022\020\n\010position\030\003 \001(\005\"\250\001\n\014ItemA"
    "ttrSync\022\016\n\006itemid\030\001 \001(\003\022(\n\004attr\030\002 \003(\0132\032."
    "Message.ItemAttrSync.Attr\032^\n\004Attr\022\014\n\004typ"
    "e\030\001 \001(\005\022\r\n\005group\030\002 \001(\t\022\013\n\003key\030\003 \001(\t\022\r\n\005v"
    "al32\030\004 \001(\005\022\r\n\005val64\030\005 \001(\003\022\016\n\006valstr\030\006 \001("
    "\t", 601);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageItem.proto", &protobuf_RegisterTypes);
  ItemGainSync::default_instance_ = new ItemGainSync();
  ItemDeleteSync::default_instance_ = new ItemDeleteSync();
  ItemUseRequest::default_instance_ = new ItemUseRequest();
  ItemDeleteRequest::default_instance_ = new ItemDeleteRequest();
  ItemSellRequest::default_instance_ = new ItemSellRequest();
  ItemEquipRequest::default_instance_ = new ItemEquipRequest();
  ItemUnequipRequest::default_instance_ = new ItemUnequipRequest();
  ItemAttrSync::default_instance_ = new ItemAttrSync();
  ItemAttrSync_Attr::default_instance_ = new ItemAttrSync_Attr();
  ItemGainSync::default_instance_->InitAsDefaultInstance();
  ItemDeleteSync::default_instance_->InitAsDefaultInstance();
  ItemUseRequest::default_instance_->InitAsDefaultInstance();
  ItemDeleteRequest::default_instance_->InitAsDefaultInstance();
  ItemSellRequest::default_instance_->InitAsDefaultInstance();
  ItemEquipRequest::default_instance_->InitAsDefaultInstance();
  ItemUnequipRequest::default_instance_->InitAsDefaultInstance();
  ItemAttrSync::default_instance_->InitAsDefaultInstance();
  ItemAttrSync_Attr::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageItem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageItem_2eproto {
  StaticDescriptorInitializer_MessageItem_2eproto() {
    protobuf_AddDesc_MessageItem_2eproto();
  }
} static_descriptor_initializer_MessageItem_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ItemGainSync::kItemidFieldNumber;
const int ItemGainSync::kTemplateidFieldNumber;
const int ItemGainSync::kStackFieldNumber;
const int ItemGainSync::kPositionFieldNumber;
const int ItemGainSync::kParentFieldNumber;
const int ItemGainSync::kEquipidFieldNumber;
const int ItemGainSync::kIntensifyFieldNumber;
#endif  // !_MSC_VER

ItemGainSync::ItemGainSync()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemGainSync::InitAsDefaultInstance() {
}

ItemGainSync::ItemGainSync(const ItemGainSync& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemGainSync::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  templateid_ = 0;
  stack_ = 0;
  position_ = 0;
  parent_ = GOOGLE_LONGLONG(0);
  equipid_ = GOOGLE_LONGLONG(0);
  intensify_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemGainSync::~ItemGainSync() {
  SharedDtor();
}

void ItemGainSync::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemGainSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemGainSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemGainSync_descriptor_;
}

const ItemGainSync& ItemGainSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemGainSync* ItemGainSync::default_instance_ = NULL;

ItemGainSync* ItemGainSync::New() const {
  return new ItemGainSync;
}

void ItemGainSync::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    templateid_ = 0;
    stack_ = 0;
    position_ = 0;
    parent_ = GOOGLE_LONGLONG(0);
    equipid_ = GOOGLE_LONGLONG(0);
    intensify_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemGainSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_templateid;
        break;
      }

      // optional int32 templateid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stack;
        break;
      }

      // optional int32 stack = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stack_)));
          set_has_stack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_position;
        break;
      }

      // optional int32 position = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
          set_has_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_parent;
        break;
      }

      // optional int64 parent = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_parent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parent_)));
          set_has_parent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_equipid;
        break;
      }

      // optional int64 equipid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &equipid_)));
          set_has_equipid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_intensify;
        break;
      }

      // optional int32 intensify = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intensify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intensify_)));
          set_has_intensify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemGainSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->templateid(), output);
  }

  // optional int32 stack = 3;
  if (has_stack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stack(), output);
  }

  // optional int32 position = 4;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->position(), output);
  }

  // optional int64 parent = 5;
  if (has_parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->parent(), output);
  }

  // optional int64 equipid = 6;
  if (has_equipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->equipid(), output);
  }

  // optional int32 intensify = 7;
  if (has_intensify()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->intensify(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemGainSync::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->templateid(), target);
  }

  // optional int32 stack = 3;
  if (has_stack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stack(), target);
  }

  // optional int32 position = 4;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->position(), target);
  }

  // optional int64 parent = 5;
  if (has_parent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->parent(), target);
  }

  // optional int64 equipid = 6;
  if (has_equipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->equipid(), target);
  }

  // optional int32 intensify = 7;
  if (has_intensify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->intensify(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemGainSync::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional int32 templateid = 2;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int32 stack = 3;
    if (has_stack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stack());
    }

    // optional int32 position = 4;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->position());
    }

    // optional int64 parent = 5;
    if (has_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->parent());
    }

    // optional int64 equipid = 6;
    if (has_equipid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->equipid());
    }

    // optional int32 intensify = 7;
    if (has_intensify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intensify());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemGainSync::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemGainSync* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemGainSync*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemGainSync::MergeFrom(const ItemGainSync& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_stack()) {
      set_stack(from.stack());
    }
    if (from.has_position()) {
      set_position(from.position());
    }
    if (from.has_parent()) {
      set_parent(from.parent());
    }
    if (from.has_equipid()) {
      set_equipid(from.equipid());
    }
    if (from.has_intensify()) {
      set_intensify(from.intensify());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemGainSync::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemGainSync::CopyFrom(const ItemGainSync& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemGainSync::IsInitialized() const {

  return true;
}

void ItemGainSync::Swap(ItemGainSync* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(templateid_, other->templateid_);
    std::swap(stack_, other->stack_);
    std::swap(position_, other->position_);
    std::swap(parent_, other->parent_);
    std::swap(equipid_, other->equipid_);
    std::swap(intensify_, other->intensify_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemGainSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemGainSync_descriptor_;
  metadata.reflection = ItemGainSync_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemDeleteSync::kItemidFieldNumber;
#endif  // !_MSC_VER

ItemDeleteSync::ItemDeleteSync()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemDeleteSync::InitAsDefaultInstance() {
}

ItemDeleteSync::ItemDeleteSync(const ItemDeleteSync& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemDeleteSync::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemDeleteSync::~ItemDeleteSync() {
  SharedDtor();
}

void ItemDeleteSync::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemDeleteSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemDeleteSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemDeleteSync_descriptor_;
}

const ItemDeleteSync& ItemDeleteSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemDeleteSync* ItemDeleteSync::default_instance_ = NULL;

ItemDeleteSync* ItemDeleteSync::New() const {
  return new ItemDeleteSync;
}

void ItemDeleteSync::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemDeleteSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemDeleteSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemDeleteSync::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemDeleteSync::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemDeleteSync::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemDeleteSync* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemDeleteSync*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemDeleteSync::MergeFrom(const ItemDeleteSync& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemDeleteSync::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemDeleteSync::CopyFrom(const ItemDeleteSync& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemDeleteSync::IsInitialized() const {

  return true;
}

void ItemDeleteSync::Swap(ItemDeleteSync* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemDeleteSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemDeleteSync_descriptor_;
  metadata.reflection = ItemDeleteSync_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemUseRequest::kItemidFieldNumber;
#endif  // !_MSC_VER

ItemUseRequest::ItemUseRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemUseRequest::InitAsDefaultInstance() {
}

ItemUseRequest::ItemUseRequest(const ItemUseRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemUseRequest::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemUseRequest::~ItemUseRequest() {
  SharedDtor();
}

void ItemUseRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemUseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemUseRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemUseRequest_descriptor_;
}

const ItemUseRequest& ItemUseRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemUseRequest* ItemUseRequest::default_instance_ = NULL;

ItemUseRequest* ItemUseRequest::New() const {
  return new ItemUseRequest;
}

void ItemUseRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemUseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemUseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemUseRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemUseRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemUseRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemUseRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemUseRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemUseRequest::MergeFrom(const ItemUseRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemUseRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemUseRequest::CopyFrom(const ItemUseRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemUseRequest::IsInitialized() const {

  return true;
}

void ItemUseRequest::Swap(ItemUseRequest* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemUseRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemUseRequest_descriptor_;
  metadata.reflection = ItemUseRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemDeleteRequest::kItemidFieldNumber;
#endif  // !_MSC_VER

ItemDeleteRequest::ItemDeleteRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemDeleteRequest::InitAsDefaultInstance() {
}

ItemDeleteRequest::ItemDeleteRequest(const ItemDeleteRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemDeleteRequest::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemDeleteRequest::~ItemDeleteRequest() {
  SharedDtor();
}

void ItemDeleteRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemDeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemDeleteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemDeleteRequest_descriptor_;
}

const ItemDeleteRequest& ItemDeleteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemDeleteRequest* ItemDeleteRequest::default_instance_ = NULL;

ItemDeleteRequest* ItemDeleteRequest::New() const {
  return new ItemDeleteRequest;
}

void ItemDeleteRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemDeleteRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemDeleteRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemDeleteRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemDeleteRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemDeleteRequest::MergeFrom(const ItemDeleteRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemDeleteRequest::CopyFrom(const ItemDeleteRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemDeleteRequest::IsInitialized() const {

  return true;
}

void ItemDeleteRequest::Swap(ItemDeleteRequest* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemDeleteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemDeleteRequest_descriptor_;
  metadata.reflection = ItemDeleteRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemSellRequest::kItemidFieldNumber;
#endif  // !_MSC_VER

ItemSellRequest::ItemSellRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemSellRequest::InitAsDefaultInstance() {
}

ItemSellRequest::ItemSellRequest(const ItemSellRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemSellRequest::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemSellRequest::~ItemSellRequest() {
  SharedDtor();
}

void ItemSellRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemSellRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemSellRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemSellRequest_descriptor_;
}

const ItemSellRequest& ItemSellRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemSellRequest* ItemSellRequest::default_instance_ = NULL;

ItemSellRequest* ItemSellRequest::New() const {
  return new ItemSellRequest;
}

void ItemSellRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemSellRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemSellRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemSellRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemSellRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemSellRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemSellRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemSellRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemSellRequest::MergeFrom(const ItemSellRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemSellRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemSellRequest::CopyFrom(const ItemSellRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemSellRequest::IsInitialized() const {

  return true;
}

void ItemSellRequest::Swap(ItemSellRequest* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemSellRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemSellRequest_descriptor_;
  metadata.reflection = ItemSellRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemEquipRequest::kItemidFieldNumber;
const int ItemEquipRequest::kRoleidFieldNumber;
#endif  // !_MSC_VER

ItemEquipRequest::ItemEquipRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemEquipRequest::InitAsDefaultInstance() {
}

ItemEquipRequest::ItemEquipRequest(const ItemEquipRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemEquipRequest::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  roleid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemEquipRequest::~ItemEquipRequest() {
  SharedDtor();
}

void ItemEquipRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemEquipRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemEquipRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemEquipRequest_descriptor_;
}

const ItemEquipRequest& ItemEquipRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemEquipRequest* ItemEquipRequest::default_instance_ = NULL;

ItemEquipRequest* ItemEquipRequest::New() const {
  return new ItemEquipRequest;
}

void ItemEquipRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    roleid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemEquipRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_roleid;
        break;
      }

      // optional int64 roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemEquipRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional int64 roleid = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemEquipRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional int64 roleid = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemEquipRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional int64 roleid = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemEquipRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemEquipRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemEquipRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemEquipRequest::MergeFrom(const ItemEquipRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemEquipRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemEquipRequest::CopyFrom(const ItemEquipRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemEquipRequest::IsInitialized() const {

  return true;
}

void ItemEquipRequest::Swap(ItemEquipRequest* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(roleid_, other->roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemEquipRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemEquipRequest_descriptor_;
  metadata.reflection = ItemEquipRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemUnequipRequest::kItemidFieldNumber;
const int ItemUnequipRequest::kRoleidFieldNumber;
const int ItemUnequipRequest::kPositionFieldNumber;
#endif  // !_MSC_VER

ItemUnequipRequest::ItemUnequipRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemUnequipRequest::InitAsDefaultInstance() {
}

ItemUnequipRequest::ItemUnequipRequest(const ItemUnequipRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemUnequipRequest::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  roleid_ = GOOGLE_LONGLONG(0);
  position_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemUnequipRequest::~ItemUnequipRequest() {
  SharedDtor();
}

void ItemUnequipRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemUnequipRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemUnequipRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemUnequipRequest_descriptor_;
}

const ItemUnequipRequest& ItemUnequipRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemUnequipRequest* ItemUnequipRequest::default_instance_ = NULL;

ItemUnequipRequest* ItemUnequipRequest::New() const {
  return new ItemUnequipRequest;
}

void ItemUnequipRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    roleid_ = GOOGLE_LONGLONG(0);
    position_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemUnequipRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_roleid;
        break;
      }

      // optional int64 roleid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_position;
        break;
      }

      // optional int32 position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
          set_has_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemUnequipRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional int64 roleid = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roleid(), output);
  }

  // optional int32 position = 3;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->position(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemUnequipRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional int64 roleid = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roleid(), target);
  }

  // optional int32 position = 3;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->position(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemUnequipRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional int64 roleid = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

    // optional int32 position = 3;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->position());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemUnequipRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemUnequipRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemUnequipRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemUnequipRequest::MergeFrom(const ItemUnequipRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_position()) {
      set_position(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemUnequipRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemUnequipRequest::CopyFrom(const ItemUnequipRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemUnequipRequest::IsInitialized() const {

  return true;
}

void ItemUnequipRequest::Swap(ItemUnequipRequest* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(roleid_, other->roleid_);
    std::swap(position_, other->position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemUnequipRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemUnequipRequest_descriptor_;
  metadata.reflection = ItemUnequipRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemAttrSync_Attr::kTypeFieldNumber;
const int ItemAttrSync_Attr::kGroupFieldNumber;
const int ItemAttrSync_Attr::kKeyFieldNumber;
const int ItemAttrSync_Attr::kVal32FieldNumber;
const int ItemAttrSync_Attr::kVal64FieldNumber;
const int ItemAttrSync_Attr::kValstrFieldNumber;
#endif  // !_MSC_VER

ItemAttrSync_Attr::ItemAttrSync_Attr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemAttrSync_Attr::InitAsDefaultInstance() {
}

ItemAttrSync_Attr::ItemAttrSync_Attr(const ItemAttrSync_Attr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemAttrSync_Attr::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  group_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  val32_ = 0;
  val64_ = GOOGLE_LONGLONG(0);
  valstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemAttrSync_Attr::~ItemAttrSync_Attr() {
  SharedDtor();
}

void ItemAttrSync_Attr::SharedDtor() {
  if (group_ != &::google::protobuf::internal::kEmptyString) {
    delete group_;
  }
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (valstr_ != &::google::protobuf::internal::kEmptyString) {
    delete valstr_;
  }
  if (this != default_instance_) {
  }
}

void ItemAttrSync_Attr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemAttrSync_Attr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemAttrSync_Attr_descriptor_;
}

const ItemAttrSync_Attr& ItemAttrSync_Attr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemAttrSync_Attr* ItemAttrSync_Attr::default_instance_ = NULL;

ItemAttrSync_Attr* ItemAttrSync_Attr::New() const {
  return new ItemAttrSync_Attr;
}

void ItemAttrSync_Attr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_group()) {
      if (group_ != &::google::protobuf::internal::kEmptyString) {
        group_->clear();
      }
    }
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    val32_ = 0;
    val64_ = GOOGLE_LONGLONG(0);
    if (has_valstr()) {
      if (valstr_ != &::google::protobuf::internal::kEmptyString) {
        valstr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemAttrSync_Attr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_group;
        break;
      }

      // optional string group = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_key;
        break;
      }

      // optional string key = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_val32;
        break;
      }

      // optional int32 val32 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_val32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &val32_)));
          set_has_val32();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_val64;
        break;
      }

      // optional int64 val64 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_val64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &val64_)));
          set_has_val64();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_valstr;
        break;
      }

      // optional string valstr = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_valstr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->valstr().data(), this->valstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemAttrSync_Attr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string group = 2;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->group(), output);
  }

  // optional string key = 3;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->key(), output);
  }

  // optional int32 val32 = 4;
  if (has_val32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->val32(), output);
  }

  // optional int64 val64 = 5;
  if (has_val64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->val64(), output);
  }

  // optional string valstr = 6;
  if (has_valstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valstr().data(), this->valstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->valstr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemAttrSync_Attr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string group = 2;
  if (has_group()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group(), target);
  }

  // optional string key = 3;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // optional int32 val32 = 4;
  if (has_val32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->val32(), target);
  }

  // optional int64 val64 = 5;
  if (has_val64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->val64(), target);
  }

  // optional string valstr = 6;
  if (has_valstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->valstr().data(), this->valstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->valstr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemAttrSync_Attr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional string group = 2;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group());
    }

    // optional string key = 3;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional int32 val32 = 4;
    if (has_val32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->val32());
    }

    // optional int64 val64 = 5;
    if (has_val64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->val64());
    }

    // optional string valstr = 6;
    if (has_valstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->valstr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemAttrSync_Attr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemAttrSync_Attr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemAttrSync_Attr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemAttrSync_Attr::MergeFrom(const ItemAttrSync_Attr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_val32()) {
      set_val32(from.val32());
    }
    if (from.has_val64()) {
      set_val64(from.val64());
    }
    if (from.has_valstr()) {
      set_valstr(from.valstr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemAttrSync_Attr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemAttrSync_Attr::CopyFrom(const ItemAttrSync_Attr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemAttrSync_Attr::IsInitialized() const {

  return true;
}

void ItemAttrSync_Attr::Swap(ItemAttrSync_Attr* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(group_, other->group_);
    std::swap(key_, other->key_);
    std::swap(val32_, other->val32_);
    std::swap(val64_, other->val64_);
    std::swap(valstr_, other->valstr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemAttrSync_Attr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemAttrSync_Attr_descriptor_;
  metadata.reflection = ItemAttrSync_Attr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ItemAttrSync::kItemidFieldNumber;
const int ItemAttrSync::kAttrFieldNumber;
#endif  // !_MSC_VER

ItemAttrSync::ItemAttrSync()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemAttrSync::InitAsDefaultInstance() {
}

ItemAttrSync::ItemAttrSync(const ItemAttrSync& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemAttrSync::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemAttrSync::~ItemAttrSync() {
  SharedDtor();
}

void ItemAttrSync::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemAttrSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemAttrSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemAttrSync_descriptor_;
}

const ItemAttrSync& ItemAttrSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItem_2eproto();
  return *default_instance_;
}

ItemAttrSync* ItemAttrSync::default_instance_ = NULL;

ItemAttrSync* ItemAttrSync::New() const {
  return new ItemAttrSync;
}

void ItemAttrSync::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
  }
  attr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemAttrSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        break;
      }

      // repeated .Message.ItemAttrSync.Attr attr = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_attr;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemAttrSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // repeated .Message.ItemAttrSync.Attr attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemAttrSync::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // repeated .Message.ItemAttrSync.Attr attr = 2;
  for (int i = 0; i < this->attr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemAttrSync::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

  }
  // repeated .Message.ItemAttrSync.Attr attr = 2;
  total_size += 1 * this->attr_size();
  for (int i = 0; i < this->attr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemAttrSync::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemAttrSync* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemAttrSync*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemAttrSync::MergeFrom(const ItemAttrSync& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_.MergeFrom(from.attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemAttrSync::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemAttrSync::CopyFrom(const ItemAttrSync& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemAttrSync::IsInitialized() const {

  return true;
}

void ItemAttrSync::Swap(ItemAttrSync* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    attr_.Swap(&other->attr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemAttrSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemAttrSync_descriptor_;
  metadata.reflection = ItemAttrSync_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
