// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageFriendsSyncToData.proto

#ifndef PROTOBUF_MessageFriendsSyncToData_2eproto__INCLUDED
#define PROTOBUF_MessageFriendsSyncToData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageFriendsSyncToData_2eproto();
void protobuf_AssignDesc_MessageFriendsSyncToData_2eproto();
void protobuf_ShutdownFile_MessageFriendsSyncToData_2eproto();

class DataFriendAdd;
class DataFriendDel;
class DataFriendRequestAdd;
class DataFriendRequestDel;

// ===================================================================

class DataFriendAdd : public ::google::protobuf::Message {
 public:
  DataFriendAdd();
  virtual ~DataFriendAdd();

  DataFriendAdd(const DataFriendAdd& from);

  inline DataFriendAdd& operator=(const DataFriendAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFriendAdd& default_instance();

  void Swap(DataFriendAdd* other);

  // implements Message ----------------------------------------------

  DataFriendAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFriendAdd& from);
  void MergeFrom(const DataFriendAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional bool offline = 2;
  inline bool has_offline() const;
  inline void clear_offline();
  static const int kOfflineFieldNumber = 2;
  inline bool offline() const;
  inline void set_offline(bool value);

  // @@protoc_insertion_point(class_scope:Message.DataFriendAdd)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_offline();
  inline void clear_has_offline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  bool offline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageFriendsSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataFriendAdd* default_instance_;
};
// -------------------------------------------------------------------

class DataFriendDel : public ::google::protobuf::Message {
 public:
  DataFriendDel();
  virtual ~DataFriendDel();

  DataFriendDel(const DataFriendDel& from);

  inline DataFriendDel& operator=(const DataFriendDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFriendDel& default_instance();

  void Swap(DataFriendDel* other);

  // implements Message ----------------------------------------------

  DataFriendDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFriendDel& from);
  void MergeFrom(const DataFriendDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.DataFriendDel)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageFriendsSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataFriendDel* default_instance_;
};
// -------------------------------------------------------------------

class DataFriendRequestAdd : public ::google::protobuf::Message {
 public:
  DataFriendRequestAdd();
  virtual ~DataFriendRequestAdd();

  DataFriendRequestAdd(const DataFriendRequestAdd& from);

  inline DataFriendRequestAdd& operator=(const DataFriendRequestAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFriendRequestAdd& default_instance();

  void Swap(DataFriendRequestAdd* other);

  // implements Message ----------------------------------------------

  DataFriendRequestAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFriendRequestAdd& from);
  void MergeFrom(const DataFriendRequestAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 fighter = 3;
  inline bool has_fighter() const;
  inline void clear_fighter();
  static const int kFighterFieldNumber = 3;
  inline ::google::protobuf::int32 fighter() const;
  inline void set_fighter(::google::protobuf::int32 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Message.DataFriendRequestAdd)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fighter();
  inline void clear_has_fighter();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 fighter_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageFriendsSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataFriendRequestAdd* default_instance_;
};
// -------------------------------------------------------------------

class DataFriendRequestDel : public ::google::protobuf::Message {
 public:
  DataFriendRequestDel();
  virtual ~DataFriendRequestDel();

  DataFriendRequestDel(const DataFriendRequestDel& from);

  inline DataFriendRequestDel& operator=(const DataFriendRequestDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFriendRequestDel& default_instance();

  void Swap(DataFriendRequestDel* other);

  // implements Message ----------------------------------------------

  DataFriendRequestDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFriendRequestDel& from);
  void MergeFrom(const DataFriendRequestDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.DataFriendRequestDel)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageFriendsSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageFriendsSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataFriendRequestDel* default_instance_;
};
// ===================================================================


// ===================================================================

// DataFriendAdd

// optional int64 pid = 1;
inline bool DataFriendAdd::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFriendAdd::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFriendAdd::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFriendAdd::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 DataFriendAdd::pid() const {
  return pid_;
}
inline void DataFriendAdd::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional bool offline = 2;
inline bool DataFriendAdd::has_offline() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataFriendAdd::set_has_offline() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataFriendAdd::clear_has_offline() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataFriendAdd::clear_offline() {
  offline_ = false;
  clear_has_offline();
}
inline bool DataFriendAdd::offline() const {
  return offline_;
}
inline void DataFriendAdd::set_offline(bool value) {
  set_has_offline();
  offline_ = value;
}

// -------------------------------------------------------------------

// DataFriendDel

// optional int64 pid = 1;
inline bool DataFriendDel::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFriendDel::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFriendDel::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFriendDel::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 DataFriendDel::pid() const {
  return pid_;
}
inline void DataFriendDel::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// -------------------------------------------------------------------

// DataFriendRequestAdd

// optional int64 pid = 1;
inline bool DataFriendRequestAdd::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFriendRequestAdd::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFriendRequestAdd::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFriendRequestAdd::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 DataFriendRequestAdd::pid() const {
  return pid_;
}
inline void DataFriendRequestAdd::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional int32 level = 2;
inline bool DataFriendRequestAdd::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataFriendRequestAdd::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataFriendRequestAdd::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataFriendRequestAdd::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 DataFriendRequestAdd::level() const {
  return level_;
}
inline void DataFriendRequestAdd::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 fighter = 3;
inline bool DataFriendRequestAdd::has_fighter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataFriendRequestAdd::set_has_fighter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataFriendRequestAdd::clear_has_fighter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataFriendRequestAdd::clear_fighter() {
  fighter_ = 0;
  clear_has_fighter();
}
inline ::google::protobuf::int32 DataFriendRequestAdd::fighter() const {
  return fighter_;
}
inline void DataFriendRequestAdd::set_fighter(::google::protobuf::int32 value) {
  set_has_fighter();
  fighter_ = value;
}

// optional string name = 4;
inline bool DataFriendRequestAdd::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataFriendRequestAdd::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataFriendRequestAdd::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataFriendRequestAdd::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DataFriendRequestAdd::name() const {
  return *name_;
}
inline void DataFriendRequestAdd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DataFriendRequestAdd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DataFriendRequestAdd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataFriendRequestAdd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DataFriendRequestAdd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataFriendRequestAdd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DataFriendRequestDel

// optional int64 pid = 1;
inline bool DataFriendRequestDel::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFriendRequestDel::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFriendRequestDel::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFriendRequestDel::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 DataFriendRequestDel::pid() const {
  return pid_;
}
inline void DataFriendRequestDel::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageFriendsSyncToData_2eproto__INCLUDED
