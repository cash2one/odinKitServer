// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageItemUpGradeRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageItemUpGradeRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* ItemUpGradeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemUpGradeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemUpGradeRequest_Soul_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemUpGradeRequest_Soul_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageItemUpGradeRequest_2eproto() {
  protobuf_AddDesc_MessageItemUpGradeRequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageItemUpGradeRequest.proto");
  GOOGLE_CHECK(file != NULL);
  ItemUpGradeRequest_descriptor_ = file->message_type(0);
  static const int ItemUpGradeRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest, seconds_),
  };
  ItemUpGradeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemUpGradeRequest_descriptor_,
      ItemUpGradeRequest::default_instance_,
      ItemUpGradeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemUpGradeRequest));
  ItemUpGradeRequest_Soul_descriptor_ = ItemUpGradeRequest_descriptor_->nested_type(0);
  static const int ItemUpGradeRequest_Soul_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest_Soul, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest_Soul, nums_),
  };
  ItemUpGradeRequest_Soul_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemUpGradeRequest_Soul_descriptor_,
      ItemUpGradeRequest_Soul::default_instance_,
      ItemUpGradeRequest_Soul_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest_Soul, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemUpGradeRequest_Soul, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemUpGradeRequest_Soul));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageItemUpGradeRequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemUpGradeRequest_descriptor_, &ItemUpGradeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemUpGradeRequest_Soul_descriptor_, &ItemUpGradeRequest_Soul::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageItemUpGradeRequest_2eproto() {
  delete ItemUpGradeRequest::default_instance_;
  delete ItemUpGradeRequest_reflection_;
  delete ItemUpGradeRequest_Soul::default_instance_;
  delete ItemUpGradeRequest_Soul_reflection_;
}

void protobuf_AddDesc_MessageItemUpGradeRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037MessageItemUpGradeRequest.proto\022\007Messa"
    "ge\"\221\001\n\022ItemUpGradeRequest\022\016\n\006roleid\030\001 \001("
    "\003\022\016\n\006itemId\030\002 \001(\003\0221\n\007seconds\030\003 \003(\0132 .Mes"
    "sage.ItemUpGradeRequest.Soul\032(\n\004Soul\022\022\n\n"
    "templateId\030\001 \001(\005\022\014\n\004nums\030\002 \001(\005", 190);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageItemUpGradeRequest.proto", &protobuf_RegisterTypes);
  ItemUpGradeRequest::default_instance_ = new ItemUpGradeRequest();
  ItemUpGradeRequest_Soul::default_instance_ = new ItemUpGradeRequest_Soul();
  ItemUpGradeRequest::default_instance_->InitAsDefaultInstance();
  ItemUpGradeRequest_Soul::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageItemUpGradeRequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageItemUpGradeRequest_2eproto {
  StaticDescriptorInitializer_MessageItemUpGradeRequest_2eproto() {
    protobuf_AddDesc_MessageItemUpGradeRequest_2eproto();
  }
} static_descriptor_initializer_MessageItemUpGradeRequest_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ItemUpGradeRequest_Soul::kTemplateIdFieldNumber;
const int ItemUpGradeRequest_Soul::kNumsFieldNumber;
#endif  // !_MSC_VER

ItemUpGradeRequest_Soul::ItemUpGradeRequest_Soul()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemUpGradeRequest_Soul::InitAsDefaultInstance() {
}

ItemUpGradeRequest_Soul::ItemUpGradeRequest_Soul(const ItemUpGradeRequest_Soul& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemUpGradeRequest_Soul::SharedCtor() {
  _cached_size_ = 0;
  templateid_ = 0;
  nums_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemUpGradeRequest_Soul::~ItemUpGradeRequest_Soul() {
  SharedDtor();
}

void ItemUpGradeRequest_Soul::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemUpGradeRequest_Soul::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemUpGradeRequest_Soul::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemUpGradeRequest_Soul_descriptor_;
}

const ItemUpGradeRequest_Soul& ItemUpGradeRequest_Soul::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItemUpGradeRequest_2eproto();
  return *default_instance_;
}

ItemUpGradeRequest_Soul* ItemUpGradeRequest_Soul::default_instance_ = NULL;

ItemUpGradeRequest_Soul* ItemUpGradeRequest_Soul::New() const {
  return new ItemUpGradeRequest_Soul;
}

void ItemUpGradeRequest_Soul::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    templateid_ = 0;
    nums_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemUpGradeRequest_Soul::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 templateId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nums;
        break;
      }

      // optional int32 nums = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nums:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nums_)));
          set_has_nums();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemUpGradeRequest_Soul::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 templateId = 1;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->templateid(), output);
  }

  // optional int32 nums = 2;
  if (has_nums()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nums(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemUpGradeRequest_Soul::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 templateId = 1;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->templateid(), target);
  }

  // optional int32 nums = 2;
  if (has_nums()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nums(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemUpGradeRequest_Soul::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 templateId = 1;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int32 nums = 2;
    if (has_nums()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nums());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemUpGradeRequest_Soul::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemUpGradeRequest_Soul* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemUpGradeRequest_Soul*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemUpGradeRequest_Soul::MergeFrom(const ItemUpGradeRequest_Soul& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_nums()) {
      set_nums(from.nums());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemUpGradeRequest_Soul::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemUpGradeRequest_Soul::CopyFrom(const ItemUpGradeRequest_Soul& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemUpGradeRequest_Soul::IsInitialized() const {

  return true;
}

void ItemUpGradeRequest_Soul::Swap(ItemUpGradeRequest_Soul* other) {
  if (other != this) {
    std::swap(templateid_, other->templateid_);
    std::swap(nums_, other->nums_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemUpGradeRequest_Soul::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemUpGradeRequest_Soul_descriptor_;
  metadata.reflection = ItemUpGradeRequest_Soul_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ItemUpGradeRequest::kRoleidFieldNumber;
const int ItemUpGradeRequest::kItemIdFieldNumber;
const int ItemUpGradeRequest::kSecondsFieldNumber;
#endif  // !_MSC_VER

ItemUpGradeRequest::ItemUpGradeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemUpGradeRequest::InitAsDefaultInstance() {
}

ItemUpGradeRequest::ItemUpGradeRequest(const ItemUpGradeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemUpGradeRequest::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
  itemid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemUpGradeRequest::~ItemUpGradeRequest() {
  SharedDtor();
}

void ItemUpGradeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemUpGradeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemUpGradeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemUpGradeRequest_descriptor_;
}

const ItemUpGradeRequest& ItemUpGradeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItemUpGradeRequest_2eproto();
  return *default_instance_;
}

ItemUpGradeRequest* ItemUpGradeRequest::default_instance_ = NULL;

ItemUpGradeRequest* ItemUpGradeRequest::New() const {
  return new ItemUpGradeRequest;
}

void ItemUpGradeRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = GOOGLE_LONGLONG(0);
    itemid_ = GOOGLE_LONGLONG(0);
  }
  seconds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemUpGradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 roleid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemId;
        break;
      }

      // optional int64 itemId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_seconds;
        break;
      }

      // repeated .Message.ItemUpGradeRequest.Soul seconds = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_seconds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_seconds()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_seconds;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemUpGradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 roleid = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  // optional int64 itemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->itemid(), output);
  }

  // repeated .Message.ItemUpGradeRequest.Soul seconds = 3;
  for (int i = 0; i < this->seconds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->seconds(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemUpGradeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 roleid = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  // optional int64 itemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->itemid(), target);
  }

  // repeated .Message.ItemUpGradeRequest.Soul seconds = 3;
  for (int i = 0; i < this->seconds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->seconds(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemUpGradeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 roleid = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

    // optional int64 itemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

  }
  // repeated .Message.ItemUpGradeRequest.Soul seconds = 3;
  total_size += 1 * this->seconds_size();
  for (int i = 0; i < this->seconds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->seconds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemUpGradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemUpGradeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemUpGradeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemUpGradeRequest::MergeFrom(const ItemUpGradeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  seconds_.MergeFrom(from.seconds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemUpGradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemUpGradeRequest::CopyFrom(const ItemUpGradeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemUpGradeRequest::IsInitialized() const {

  return true;
}

void ItemUpGradeRequest::Swap(ItemUpGradeRequest* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    std::swap(itemid_, other->itemid_);
    seconds_.Swap(&other->seconds_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemUpGradeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemUpGradeRequest_descriptor_;
  metadata.reflection = ItemUpGradeRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
