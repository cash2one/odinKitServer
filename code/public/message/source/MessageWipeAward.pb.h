// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageWipeAward.proto

#ifndef PROTOBUF_MessageWipeAward_2eproto__INCLUDED
#define PROTOBUF_MessageWipeAward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageWipeAward_2eproto();
void protobuf_AssignDesc_MessageWipeAward_2eproto();
void protobuf_ShutdownFile_MessageWipeAward_2eproto();

class WipeAward;
class WipeAward_AwardElem;
class WipeAward_AwardElem_AwardItem;

// ===================================================================

class WipeAward_AwardElem_AwardItem : public ::google::protobuf::Message {
 public:
  WipeAward_AwardElem_AwardItem();
  virtual ~WipeAward_AwardElem_AwardItem();

  WipeAward_AwardElem_AwardItem(const WipeAward_AwardElem_AwardItem& from);

  inline WipeAward_AwardElem_AwardItem& operator=(const WipeAward_AwardElem_AwardItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WipeAward_AwardElem_AwardItem& default_instance();

  void Swap(WipeAward_AwardElem_AwardItem* other);

  // implements Message ----------------------------------------------

  WipeAward_AwardElem_AwardItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WipeAward_AwardElem_AwardItem& from);
  void MergeFrom(const WipeAward_AwardElem_AwardItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::int32 tempid() const;
  inline void set_tempid(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.WipeAward.AwardElem.AwardItem)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tempid_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageWipeAward_2eproto();
  friend void protobuf_AssignDesc_MessageWipeAward_2eproto();
  friend void protobuf_ShutdownFile_MessageWipeAward_2eproto();

  void InitAsDefaultInstance();
  static WipeAward_AwardElem_AwardItem* default_instance_;
};
// -------------------------------------------------------------------

class WipeAward_AwardElem : public ::google::protobuf::Message {
 public:
  WipeAward_AwardElem();
  virtual ~WipeAward_AwardElem();

  WipeAward_AwardElem(const WipeAward_AwardElem& from);

  inline WipeAward_AwardElem& operator=(const WipeAward_AwardElem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WipeAward_AwardElem& default_instance();

  void Swap(WipeAward_AwardElem* other);

  // implements Message ----------------------------------------------

  WipeAward_AwardElem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WipeAward_AwardElem& from);
  void MergeFrom(const WipeAward_AwardElem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WipeAward_AwardElem_AwardItem AwardItem;

  // accessors -------------------------------------------------------

  // optional int32 wiperound = 1;
  inline bool has_wiperound() const;
  inline void clear_wiperound();
  static const int kWiperoundFieldNumber = 1;
  inline ::google::protobuf::int32 wiperound() const;
  inline void set_wiperound(::google::protobuf::int32 value);

  // optional int32 silver = 2;
  inline bool has_silver() const;
  inline void clear_silver();
  static const int kSilverFieldNumber = 2;
  inline ::google::protobuf::int32 silver() const;
  inline void set_silver(::google::protobuf::int32 value);

  // optional int32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // repeated .Message.WipeAward.AwardElem.AwardItem itemawards = 4;
  inline int itemawards_size() const;
  inline void clear_itemawards();
  static const int kItemawardsFieldNumber = 4;
  inline const ::Message::WipeAward_AwardElem_AwardItem& itemawards(int index) const;
  inline ::Message::WipeAward_AwardElem_AwardItem* mutable_itemawards(int index);
  inline ::Message::WipeAward_AwardElem_AwardItem* add_itemawards();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem_AwardItem >&
      itemawards() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem_AwardItem >*
      mutable_itemawards();

  // @@protoc_insertion_point(class_scope:Message.WipeAward.AwardElem)
 private:
  inline void set_has_wiperound();
  inline void clear_has_wiperound();
  inline void set_has_silver();
  inline void clear_has_silver();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wiperound_;
  ::google::protobuf::int32 silver_;
  ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem_AwardItem > itemawards_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MessageWipeAward_2eproto();
  friend void protobuf_AssignDesc_MessageWipeAward_2eproto();
  friend void protobuf_ShutdownFile_MessageWipeAward_2eproto();

  void InitAsDefaultInstance();
  static WipeAward_AwardElem* default_instance_;
};
// -------------------------------------------------------------------

class WipeAward : public ::google::protobuf::Message {
 public:
  WipeAward();
  virtual ~WipeAward();

  WipeAward(const WipeAward& from);

  inline WipeAward& operator=(const WipeAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WipeAward& default_instance();

  void Swap(WipeAward* other);

  // implements Message ----------------------------------------------

  WipeAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WipeAward& from);
  void MergeFrom(const WipeAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WipeAward_AwardElem AwardElem;

  // accessors -------------------------------------------------------

  // optional int32 wipecount = 1;
  inline bool has_wipecount() const;
  inline void clear_wipecount();
  static const int kWipecountFieldNumber = 1;
  inline ::google::protobuf::int32 wipecount() const;
  inline void set_wipecount(::google::protobuf::int32 value);

  // repeated .Message.WipeAward.AwardElem wipeawards = 2;
  inline int wipeawards_size() const;
  inline void clear_wipeawards();
  static const int kWipeawardsFieldNumber = 2;
  inline const ::Message::WipeAward_AwardElem& wipeawards(int index) const;
  inline ::Message::WipeAward_AwardElem* mutable_wipeawards(int index);
  inline ::Message::WipeAward_AwardElem* add_wipeawards();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem >&
      wipeawards() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem >*
      mutable_wipeawards();

  // @@protoc_insertion_point(class_scope:Message.WipeAward)
 private:
  inline void set_has_wipecount();
  inline void clear_has_wipecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem > wipeawards_;
  ::google::protobuf::int32 wipecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageWipeAward_2eproto();
  friend void protobuf_AssignDesc_MessageWipeAward_2eproto();
  friend void protobuf_ShutdownFile_MessageWipeAward_2eproto();

  void InitAsDefaultInstance();
  static WipeAward* default_instance_;
};
// ===================================================================


// ===================================================================

// WipeAward_AwardElem_AwardItem

// optional int32 tempid = 1;
inline bool WipeAward_AwardElem_AwardItem::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WipeAward_AwardElem_AwardItem::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WipeAward_AwardElem_AwardItem::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WipeAward_AwardElem_AwardItem::clear_tempid() {
  tempid_ = 0;
  clear_has_tempid();
}
inline ::google::protobuf::int32 WipeAward_AwardElem_AwardItem::tempid() const {
  return tempid_;
}
inline void WipeAward_AwardElem_AwardItem::set_tempid(::google::protobuf::int32 value) {
  set_has_tempid();
  tempid_ = value;
}

// optional int32 num = 2;
inline bool WipeAward_AwardElem_AwardItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WipeAward_AwardElem_AwardItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WipeAward_AwardElem_AwardItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WipeAward_AwardElem_AwardItem::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 WipeAward_AwardElem_AwardItem::num() const {
  return num_;
}
inline void WipeAward_AwardElem_AwardItem::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// WipeAward_AwardElem

// optional int32 wiperound = 1;
inline bool WipeAward_AwardElem::has_wiperound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WipeAward_AwardElem::set_has_wiperound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WipeAward_AwardElem::clear_has_wiperound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WipeAward_AwardElem::clear_wiperound() {
  wiperound_ = 0;
  clear_has_wiperound();
}
inline ::google::protobuf::int32 WipeAward_AwardElem::wiperound() const {
  return wiperound_;
}
inline void WipeAward_AwardElem::set_wiperound(::google::protobuf::int32 value) {
  set_has_wiperound();
  wiperound_ = value;
}

// optional int32 silver = 2;
inline bool WipeAward_AwardElem::has_silver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WipeAward_AwardElem::set_has_silver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WipeAward_AwardElem::clear_has_silver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WipeAward_AwardElem::clear_silver() {
  silver_ = 0;
  clear_has_silver();
}
inline ::google::protobuf::int32 WipeAward_AwardElem::silver() const {
  return silver_;
}
inline void WipeAward_AwardElem::set_silver(::google::protobuf::int32 value) {
  set_has_silver();
  silver_ = value;
}

// optional int32 exp = 3;
inline bool WipeAward_AwardElem::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WipeAward_AwardElem::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WipeAward_AwardElem::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WipeAward_AwardElem::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 WipeAward_AwardElem::exp() const {
  return exp_;
}
inline void WipeAward_AwardElem::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// repeated .Message.WipeAward.AwardElem.AwardItem itemawards = 4;
inline int WipeAward_AwardElem::itemawards_size() const {
  return itemawards_.size();
}
inline void WipeAward_AwardElem::clear_itemawards() {
  itemawards_.Clear();
}
inline const ::Message::WipeAward_AwardElem_AwardItem& WipeAward_AwardElem::itemawards(int index) const {
  return itemawards_.Get(index);
}
inline ::Message::WipeAward_AwardElem_AwardItem* WipeAward_AwardElem::mutable_itemawards(int index) {
  return itemawards_.Mutable(index);
}
inline ::Message::WipeAward_AwardElem_AwardItem* WipeAward_AwardElem::add_itemawards() {
  return itemawards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem_AwardItem >&
WipeAward_AwardElem::itemawards() const {
  return itemawards_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem_AwardItem >*
WipeAward_AwardElem::mutable_itemawards() {
  return &itemawards_;
}

// -------------------------------------------------------------------

// WipeAward

// optional int32 wipecount = 1;
inline bool WipeAward::has_wipecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WipeAward::set_has_wipecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WipeAward::clear_has_wipecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WipeAward::clear_wipecount() {
  wipecount_ = 0;
  clear_has_wipecount();
}
inline ::google::protobuf::int32 WipeAward::wipecount() const {
  return wipecount_;
}
inline void WipeAward::set_wipecount(::google::protobuf::int32 value) {
  set_has_wipecount();
  wipecount_ = value;
}

// repeated .Message.WipeAward.AwardElem wipeawards = 2;
inline int WipeAward::wipeawards_size() const {
  return wipeawards_.size();
}
inline void WipeAward::clear_wipeawards() {
  wipeawards_.Clear();
}
inline const ::Message::WipeAward_AwardElem& WipeAward::wipeawards(int index) const {
  return wipeawards_.Get(index);
}
inline ::Message::WipeAward_AwardElem* WipeAward::mutable_wipeawards(int index) {
  return wipeawards_.Mutable(index);
}
inline ::Message::WipeAward_AwardElem* WipeAward::add_wipeawards() {
  return wipeawards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem >&
WipeAward::wipeawards() const {
  return wipeawards_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::WipeAward_AwardElem >*
WipeAward::mutable_wipeawards() {
  return &wipeawards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageWipeAward_2eproto__INCLUDED
