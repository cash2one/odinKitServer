// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageBattleDoubleWinRankingResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageBattleDoubleWinRankingResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* BattleDoubleWinRankingResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleDoubleWinRankingResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleDoubleWinRankingResponse_Rankinger_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleDoubleWinRankingResponse_Rankinger_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageBattleDoubleWinRankingResponse_2eproto() {
  protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageBattleDoubleWinRankingResponse.proto");
  GOOGLE_CHECK(file != NULL);
  BattleDoubleWinRankingResponse_descriptor_ = file->message_type(0);
  static const int BattleDoubleWinRankingResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleDoubleWinRankingResponse, ranking_),
  };
  BattleDoubleWinRankingResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleDoubleWinRankingResponse_descriptor_,
      BattleDoubleWinRankingResponse::default_instance_,
      BattleDoubleWinRankingResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleDoubleWinRankingResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleDoubleWinRankingResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleDoubleWinRankingResponse));
  BattleDoubleWinRankingResponse_Rankinger_descriptor_ = BattleDoubleWinRankingResponse_descriptor_->nested_type(0);
  static const int BattleDoubleWinRankingResponse_Rankinger_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleDoubleWinRankingResponse_Rankinger, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleDoubleWinRankingResponse_Rankinger, count_),
  };
  BattleDoubleWinRankingResponse_Rankinger_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleDoubleWinRankingResponse_Rankinger_descriptor_,
      BattleDoubleWinRankingResponse_Rankinger::default_instance_,
      BattleDoubleWinRankingResponse_Rankinger_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleDoubleWinRankingResponse_Rankinger, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleDoubleWinRankingResponse_Rankinger, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleDoubleWinRankingResponse_Rankinger));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageBattleDoubleWinRankingResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleDoubleWinRankingResponse_descriptor_, &BattleDoubleWinRankingResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleDoubleWinRankingResponse_Rankinger_descriptor_, &BattleDoubleWinRankingResponse_Rankinger::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageBattleDoubleWinRankingResponse_2eproto() {
  delete BattleDoubleWinRankingResponse::default_instance_;
  delete BattleDoubleWinRankingResponse_reflection_;
  delete BattleDoubleWinRankingResponse_Rankinger::default_instance_;
  delete BattleDoubleWinRankingResponse_Rankinger_reflection_;
}

void protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n+MessageBattleDoubleWinRankingResponse."
    "proto\022\007Message\"\216\001\n\036BattleDoubleWinRankin"
    "gResponse\022B\n\007ranking\030\001 \003(\01321.Message.Bat"
    "tleDoubleWinRankingResponse.Rankinger\032(\n"
    "\tRankinger\022\014\n\004name\030\001 \001(\t\022\r\n\005count\030\002 \001(\005", 199);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageBattleDoubleWinRankingResponse.proto", &protobuf_RegisterTypes);
  BattleDoubleWinRankingResponse::default_instance_ = new BattleDoubleWinRankingResponse();
  BattleDoubleWinRankingResponse_Rankinger::default_instance_ = new BattleDoubleWinRankingResponse_Rankinger();
  BattleDoubleWinRankingResponse::default_instance_->InitAsDefaultInstance();
  BattleDoubleWinRankingResponse_Rankinger::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageBattleDoubleWinRankingResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageBattleDoubleWinRankingResponse_2eproto {
  StaticDescriptorInitializer_MessageBattleDoubleWinRankingResponse_2eproto() {
    protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  }
} static_descriptor_initializer_MessageBattleDoubleWinRankingResponse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BattleDoubleWinRankingResponse_Rankinger::kNameFieldNumber;
const int BattleDoubleWinRankingResponse_Rankinger::kCountFieldNumber;
#endif  // !_MSC_VER

BattleDoubleWinRankingResponse_Rankinger::BattleDoubleWinRankingResponse_Rankinger()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BattleDoubleWinRankingResponse_Rankinger::InitAsDefaultInstance() {
}

BattleDoubleWinRankingResponse_Rankinger::BattleDoubleWinRankingResponse_Rankinger(const BattleDoubleWinRankingResponse_Rankinger& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BattleDoubleWinRankingResponse_Rankinger::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleDoubleWinRankingResponse_Rankinger::~BattleDoubleWinRankingResponse_Rankinger() {
  SharedDtor();
}

void BattleDoubleWinRankingResponse_Rankinger::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void BattleDoubleWinRankingResponse_Rankinger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleDoubleWinRankingResponse_Rankinger::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleDoubleWinRankingResponse_Rankinger_descriptor_;
}

const BattleDoubleWinRankingResponse_Rankinger& BattleDoubleWinRankingResponse_Rankinger::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  return *default_instance_;
}

BattleDoubleWinRankingResponse_Rankinger* BattleDoubleWinRankingResponse_Rankinger::default_instance_ = NULL;

BattleDoubleWinRankingResponse_Rankinger* BattleDoubleWinRankingResponse_Rankinger::New() const {
  return new BattleDoubleWinRankingResponse_Rankinger;
}

void BattleDoubleWinRankingResponse_Rankinger::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleDoubleWinRankingResponse_Rankinger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BattleDoubleWinRankingResponse_Rankinger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BattleDoubleWinRankingResponse_Rankinger::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BattleDoubleWinRankingResponse_Rankinger::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleDoubleWinRankingResponse_Rankinger::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleDoubleWinRankingResponse_Rankinger* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleDoubleWinRankingResponse_Rankinger*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleDoubleWinRankingResponse_Rankinger::MergeFrom(const BattleDoubleWinRankingResponse_Rankinger& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleDoubleWinRankingResponse_Rankinger::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleDoubleWinRankingResponse_Rankinger::CopyFrom(const BattleDoubleWinRankingResponse_Rankinger& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleDoubleWinRankingResponse_Rankinger::IsInitialized() const {

  return true;
}

void BattleDoubleWinRankingResponse_Rankinger::Swap(BattleDoubleWinRankingResponse_Rankinger* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleDoubleWinRankingResponse_Rankinger::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleDoubleWinRankingResponse_Rankinger_descriptor_;
  metadata.reflection = BattleDoubleWinRankingResponse_Rankinger_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BattleDoubleWinRankingResponse::kRankingFieldNumber;
#endif  // !_MSC_VER

BattleDoubleWinRankingResponse::BattleDoubleWinRankingResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BattleDoubleWinRankingResponse::InitAsDefaultInstance() {
}

BattleDoubleWinRankingResponse::BattleDoubleWinRankingResponse(const BattleDoubleWinRankingResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BattleDoubleWinRankingResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleDoubleWinRankingResponse::~BattleDoubleWinRankingResponse() {
  SharedDtor();
}

void BattleDoubleWinRankingResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleDoubleWinRankingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleDoubleWinRankingResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleDoubleWinRankingResponse_descriptor_;
}

const BattleDoubleWinRankingResponse& BattleDoubleWinRankingResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageBattleDoubleWinRankingResponse_2eproto();
  return *default_instance_;
}

BattleDoubleWinRankingResponse* BattleDoubleWinRankingResponse::default_instance_ = NULL;

BattleDoubleWinRankingResponse* BattleDoubleWinRankingResponse::New() const {
  return new BattleDoubleWinRankingResponse;
}

void BattleDoubleWinRankingResponse::Clear() {
  ranking_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleDoubleWinRankingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Message.BattleDoubleWinRankingResponse.Rankinger ranking = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ranking:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ranking()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ranking;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BattleDoubleWinRankingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Message.BattleDoubleWinRankingResponse.Rankinger ranking = 1;
  for (int i = 0; i < this->ranking_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ranking(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BattleDoubleWinRankingResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Message.BattleDoubleWinRankingResponse.Rankinger ranking = 1;
  for (int i = 0; i < this->ranking_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ranking(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BattleDoubleWinRankingResponse::ByteSize() const {
  int total_size = 0;

  // repeated .Message.BattleDoubleWinRankingResponse.Rankinger ranking = 1;
  total_size += 1 * this->ranking_size();
  for (int i = 0; i < this->ranking_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ranking(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleDoubleWinRankingResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleDoubleWinRankingResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleDoubleWinRankingResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleDoubleWinRankingResponse::MergeFrom(const BattleDoubleWinRankingResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  ranking_.MergeFrom(from.ranking_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleDoubleWinRankingResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleDoubleWinRankingResponse::CopyFrom(const BattleDoubleWinRankingResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleDoubleWinRankingResponse::IsInitialized() const {

  return true;
}

void BattleDoubleWinRankingResponse::Swap(BattleDoubleWinRankingResponse* other) {
  if (other != this) {
    ranking_.Swap(&other->ranking_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleDoubleWinRankingResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleDoubleWinRankingResponse_descriptor_;
  metadata.reflection = BattleDoubleWinRankingResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
