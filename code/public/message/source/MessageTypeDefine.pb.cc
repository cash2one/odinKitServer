// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageTypeDefine.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageTypeDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::EnumDescriptor* MsgDefine_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageTypeDefine_2eproto() {
  protobuf_AddDesc_MessageTypeDefine_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageTypeDefine.proto");
  GOOGLE_CHECK(file != NULL);
  MsgDefine_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageTypeDefine_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_MessageTypeDefine_2eproto() {
}

void protobuf_AddDesc_MessageTypeDefine_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027MessageTypeDefine.proto\022\007Message*\331\016\n\tM"
    "sgDefine\022\024\n\020MSG_SERVER_BEGIN\020\000\022\027\n\023MSG_SE"
    "RVER_REGISTER\020\001\022\031\n\025MSG_SERVER_SYNCSERVER"
    "\020\002\022\033\n\027MSG_SERVER_SYNCGATELOAD\020\003\022\034\n\030MSG_S"
    "ERVER_WORLD_REQUEST\020\004\022\035\n\031MSG_SERVER_WORL"
    "D_RESPONSE\020\005\022\031\n\025MSG_SERVER_NET_ACCEPT\020\006\022"
    "\030\n\024MSG_SERVER_NET_CLOSE\020\007\022\032\n\026MSG_SERVER_"
    "NET_CONNECT\020\010\022\024\n\020MSG_COMMON_ERROR\020d\022\024\n\020M"
    "SG_COMMON_EVENT\020e\022\027\n\022MSG_GAMEOBJ_CREATE\020"
    "\310\001\022\027\n\022MSG_GAMEOBJ_REMOVE\020\311\001\022 \n\033MSG_GAMEO"
    "BJ_OBJFIELD_SETI32\020\312\001\022 \n\033MSG_GAMEOBJ_OBJ"
    "FIELD_SETI64\020\313\001\022 \n\033MSG_GAMEOBJ_OBJFIELD_"
    "SETSTR\020\314\001\022 \n\033MSG_GAMEOBJ_OBJFIELD_SETALL"
    "\020\315\001\022\035\n\030MSG_GAMEOBJ_MAPFIELD_ADD\020\316\001\022\035\n\030MS"
    "G_GAMEOBJ_MAPFIELD_DEL\020\317\001\022 \n\033MSG_GAMEOBJ"
    "_MAPFIELD_SETALL\020\320\001\022 \n\033MSG_GAMEOBJ_MAPFI"
    "ELD_SETI32\020\321\001\022 \n\033MSG_GAMEOBJ_MAPFIELD_SE"
    "TI64\020\322\001\022 \n\033MSG_GAMEOBJ_MAPFIELD_SETSTR\020\323"
    "\001\022\025\n\020MSG_GAMEOBJ_SYNC\020\324\001\022\036\n\031MSG_GAMEOBJ_"
    "SYNC_OBJFIELD\020\325\001\022\036\n\031MSG_GAMEOBJ_SYNC_MAP"
    "FIELD\020\326\001\022\034\n\027MSG_GAMEOBJ_SYNC_FINISH\020\327\001\022\035"
    "\n\030MSG_GAMEOBJ_LOAD_REQUEST\020\330\001\022\036\n\031MSG_GAM"
    "EOBJ_LOGIN_REQUEST\020\331\001\022\033\n\026MSG_USER_lOGIN_"
    "REQUEST\020\255\002\022\026\n\021MSG_USER_DISPLACE\020\256\002\022\031\n\024MS"
    "G_USER_GET_GATESVR\020\257\002\022\034\n\027MSG_USER_HEART_"
    "RESPONSE\020\260\002\022\035\n\030MSG_PLAYER_LOGIN_REQUEST\020"
    "\220\003\022\036\n\031MSG_PLAYER_LOGOUT_REQEUST\020\221\003\022!\n\034MS"
    "G_PLAYER_CHECKNAME_REQUEST\020\222\003\022\"\n\035MSG_PLA"
    "YER_CHECKNAME_RESPONSE\020\223\003\022\032\n\025MSG_PLAYER_"
    "LOAD_COUNT\020\224\003\022\031\n\024MSG_PLAYER_LOAD_DATA\020\225\003"
    "\022\031\n\024MSG_PLAYER_LOAD_OVER\020\226\003\022\034\n\027MSG_PLAYE"
    "R_SYNC_ATTRINT\020\227\003\022\034\n\027MSG_PLAYER_SYNC_ATT"
    "RI64\020\230\003\022\027\n\022MSG_ITEM_DATA_SYNC\020\364\003\022\031\n\024MSG_"
    "ITEM_DELETE_SYNC\020\365\003\022\032\n\025MSG_ITEM_ATTRINT_"
    "SYNC\020\366\003\022\032\n\025MSG_ITEM_ATTRI64_SYNC\020\367\003\022\024\n\016M"
    "SG_SERVER_END\020\257\352\001\022\026\n\020MSG_CLIENT_BEGIN\020\260\352"
    "\001\022\034\n\026MSG_REQUEST_USER_CHECK\020\261\352\001\022\035\n\027MSG_R"
    "EQUEST_GUEST_CHECK\020\262\352\001\022\034\n\026MSG_REQUEST_US"
    "ER_LOGIN\020\263\352\001\022\035\n\027MSG_REQUEST_USER_LOGOUT\020"
    "\264\352\001\022\034\n\026MSG_REQUEST_USER_HEART\020\265\352\001\022\037\n\031MSG"
    "_REQUEST_PLAYER_CREATE\020\266\352\001\022\037\n\031MSG_REQUES"
    "T_PLAYER_DELETE\020\267\352\001\022 \n\032MSG_REQUEST_PLAYE"
    "R_OBSERVE\020\270\352\001\022\032\n\024MSG_REQUEST_ITEM_USE\020\224\353"
    "\001\022\035\n\027MSG_REQUEST_ITEM_DELETE\020\225\353\001\022\033\n\025MSG_"
    "REQUEST_ITEM_SELL\020\226\353\001\022\034\n\026MSG_REQUEST_ITE"
    "M_EQUIP\020\227\353\001\022\036\n\030MSG_REQUEST_ITEM_UNEQUIP\020"
    "\230\353\001\022\027\n\021MSG_REQUEST_DEBUG\020\340\324\003\022\032\n\024MSG_REQU"
    "EST_NET_TEST\020\341\324\003\022\024\n\016MSG_CLIENT_END\020\377\377\003", 1918);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageTypeDefine.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageTypeDefine_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageTypeDefine_2eproto {
  StaticDescriptorInitializer_MessageTypeDefine_2eproto() {
    protobuf_AddDesc_MessageTypeDefine_2eproto();
  }
} static_descriptor_initializer_MessageTypeDefine_2eproto_;
const ::google::protobuf::EnumDescriptor* MsgDefine_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgDefine_descriptor_;
}
bool MsgDefine_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 100:
    case 101:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 301:
    case 302:
    case 303:
    case 304:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 500:
    case 501:
    case 502:
    case 503:
    case 29999:
    case 30000:
    case 30001:
    case 30002:
    case 30003:
    case 30004:
    case 30005:
    case 30006:
    case 30007:
    case 30008:
    case 30100:
    case 30101:
    case 30102:
    case 30103:
    case 30104:
    case 60000:
    case 60001:
    case 65535:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
