// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageTaskFinishResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageTaskFinishResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* TaskFinishResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskFinishResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageTaskFinishResponse_2eproto() {
  protobuf_AddDesc_MessageTaskFinishResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageTaskFinishResponse.proto");
  GOOGLE_CHECK(file != NULL);
  TaskFinishResponse_descriptor_ = file->message_type(0);
  static const int TaskFinishResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskFinishResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskFinishResponse, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskFinishResponse, addtasks_),
  };
  TaskFinishResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskFinishResponse_descriptor_,
      TaskFinishResponse::default_instance_,
      TaskFinishResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskFinishResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskFinishResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskFinishResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageTaskFinishResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskFinishResponse_descriptor_, &TaskFinishResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageTaskFinishResponse_2eproto() {
  delete TaskFinishResponse::default_instance_;
  delete TaskFinishResponse_reflection_;
}

void protobuf_AddDesc_MessageTaskFinishResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Message::protobuf_AddDesc_MessageTaskSync_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037MessageTaskFinishResponse.proto\022\007Messa"
    "ge\032\025MessageTaskSync.proto\"U\n\022TaskFinishR"
    "esponse\022\016\n\006result\030\001 \001(\005\022\016\n\006taskId\030\002 \001(\005\022"
    "\037\n\010addTasks\030\003 \003(\0132\r.Message.Task", 152);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageTaskFinishResponse.proto", &protobuf_RegisterTypes);
  TaskFinishResponse::default_instance_ = new TaskFinishResponse();
  TaskFinishResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageTaskFinishResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageTaskFinishResponse_2eproto {
  StaticDescriptorInitializer_MessageTaskFinishResponse_2eproto() {
    protobuf_AddDesc_MessageTaskFinishResponse_2eproto();
  }
} static_descriptor_initializer_MessageTaskFinishResponse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TaskFinishResponse::kResultFieldNumber;
const int TaskFinishResponse::kTaskIdFieldNumber;
const int TaskFinishResponse::kAddTasksFieldNumber;
#endif  // !_MSC_VER

TaskFinishResponse::TaskFinishResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TaskFinishResponse::InitAsDefaultInstance() {
}

TaskFinishResponse::TaskFinishResponse(const TaskFinishResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TaskFinishResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  taskid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskFinishResponse::~TaskFinishResponse() {
  SharedDtor();
}

void TaskFinishResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskFinishResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskFinishResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskFinishResponse_descriptor_;
}

const TaskFinishResponse& TaskFinishResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageTaskFinishResponse_2eproto();
  return *default_instance_;
}

TaskFinishResponse* TaskFinishResponse::default_instance_ = NULL;

TaskFinishResponse* TaskFinishResponse::New() const {
  return new TaskFinishResponse;
}

void TaskFinishResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    taskid_ = 0;
  }
  addtasks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskFinishResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_taskId;
        break;
      }

      // optional int32 taskId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_taskId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taskid_)));
          set_has_taskid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_addTasks;
        break;
      }

      // repeated .Message.Task addTasks = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_addTasks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_addtasks()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_addTasks;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TaskFinishResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->taskid(), output);
  }

  // repeated .Message.Task addTasks = 3;
  for (int i = 0; i < this->addtasks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->addtasks(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TaskFinishResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 taskId = 2;
  if (has_taskid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->taskid(), target);
  }

  // repeated .Message.Task addTasks = 3;
  for (int i = 0; i < this->addtasks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->addtasks(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TaskFinishResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 taskId = 2;
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->taskid());
    }

  }
  // repeated .Message.Task addTasks = 3;
  total_size += 1 * this->addtasks_size();
  for (int i = 0; i < this->addtasks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->addtasks(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskFinishResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskFinishResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskFinishResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskFinishResponse::MergeFrom(const TaskFinishResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  addtasks_.MergeFrom(from.addtasks_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_taskid()) {
      set_taskid(from.taskid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskFinishResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskFinishResponse::CopyFrom(const TaskFinishResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskFinishResponse::IsInitialized() const {

  for (int i = 0; i < addtasks_size(); i++) {
    if (!this->addtasks(i).IsInitialized()) return false;
  }
  return true;
}

void TaskFinishResponse::Swap(TaskFinishResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(taskid_, other->taskid_);
    addtasks_.Swap(&other->addtasks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskFinishResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskFinishResponse_descriptor_;
  metadata.reflection = TaskFinishResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
