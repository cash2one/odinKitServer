// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageExpeditionAward.proto

#ifndef PROTOBUF_MessageExpeditionAward_2eproto__INCLUDED
#define PROTOBUF_MessageExpeditionAward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageExpeditionAward_2eproto();
void protobuf_AssignDesc_MessageExpeditionAward_2eproto();
void protobuf_ShutdownFile_MessageExpeditionAward_2eproto();

class ExpeditionAward;

// ===================================================================

class ExpeditionAward : public ::google::protobuf::Message {
 public:
  ExpeditionAward();
  virtual ~ExpeditionAward();

  ExpeditionAward(const ExpeditionAward& from);

  inline ExpeditionAward& operator=(const ExpeditionAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpeditionAward& default_instance();

  void Swap(ExpeditionAward* other);

  // implements Message ----------------------------------------------

  ExpeditionAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExpeditionAward& from);
  void MergeFrom(const ExpeditionAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gainexp = 1;
  inline bool has_gainexp() const;
  inline void clear_gainexp();
  static const int kGainexpFieldNumber = 1;
  inline ::google::protobuf::int32 gainexp() const;
  inline void set_gainexp(::google::protobuf::int32 value);

  // optional int32 gaingold = 2;
  inline bool has_gaingold() const;
  inline void clear_gaingold();
  static const int kGaingoldFieldNumber = 2;
  inline ::google::protobuf::int32 gaingold() const;
  inline void set_gaingold(::google::protobuf::int32 value);

  // optional int32 gainsilver = 3;
  inline bool has_gainsilver() const;
  inline void clear_gainsilver();
  static const int kGainsilverFieldNumber = 3;
  inline ::google::protobuf::int32 gainsilver() const;
  inline void set_gainsilver(::google::protobuf::int32 value);

  // repeated int32 itemid = 4;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 4;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // repeated int32 itemstack = 5;
  inline int itemstack_size() const;
  inline void clear_itemstack();
  static const int kItemstackFieldNumber = 5;
  inline ::google::protobuf::int32 itemstack(int index) const;
  inline void set_itemstack(int index, ::google::protobuf::int32 value);
  inline void add_itemstack(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemstack() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemstack();

  // @@protoc_insertion_point(class_scope:Message.ExpeditionAward)
 private:
  inline void set_has_gainexp();
  inline void clear_has_gainexp();
  inline void set_has_gaingold();
  inline void clear_has_gaingold();
  inline void set_has_gainsilver();
  inline void clear_has_gainsilver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gainexp_;
  ::google::protobuf::int32 gaingold_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemstack_;
  ::google::protobuf::int32 gainsilver_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_MessageExpeditionAward_2eproto();
  friend void protobuf_AssignDesc_MessageExpeditionAward_2eproto();
  friend void protobuf_ShutdownFile_MessageExpeditionAward_2eproto();

  void InitAsDefaultInstance();
  static ExpeditionAward* default_instance_;
};
// ===================================================================


// ===================================================================

// ExpeditionAward

// optional int32 gainexp = 1;
inline bool ExpeditionAward::has_gainexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpeditionAward::set_has_gainexp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExpeditionAward::clear_has_gainexp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExpeditionAward::clear_gainexp() {
  gainexp_ = 0;
  clear_has_gainexp();
}
inline ::google::protobuf::int32 ExpeditionAward::gainexp() const {
  return gainexp_;
}
inline void ExpeditionAward::set_gainexp(::google::protobuf::int32 value) {
  set_has_gainexp();
  gainexp_ = value;
}

// optional int32 gaingold = 2;
inline bool ExpeditionAward::has_gaingold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpeditionAward::set_has_gaingold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExpeditionAward::clear_has_gaingold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExpeditionAward::clear_gaingold() {
  gaingold_ = 0;
  clear_has_gaingold();
}
inline ::google::protobuf::int32 ExpeditionAward::gaingold() const {
  return gaingold_;
}
inline void ExpeditionAward::set_gaingold(::google::protobuf::int32 value) {
  set_has_gaingold();
  gaingold_ = value;
}

// optional int32 gainsilver = 3;
inline bool ExpeditionAward::has_gainsilver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExpeditionAward::set_has_gainsilver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExpeditionAward::clear_has_gainsilver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExpeditionAward::clear_gainsilver() {
  gainsilver_ = 0;
  clear_has_gainsilver();
}
inline ::google::protobuf::int32 ExpeditionAward::gainsilver() const {
  return gainsilver_;
}
inline void ExpeditionAward::set_gainsilver(::google::protobuf::int32 value) {
  set_has_gainsilver();
  gainsilver_ = value;
}

// repeated int32 itemid = 4;
inline int ExpeditionAward::itemid_size() const {
  return itemid_.size();
}
inline void ExpeditionAward::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 ExpeditionAward::itemid(int index) const {
  return itemid_.Get(index);
}
inline void ExpeditionAward::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void ExpeditionAward::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ExpeditionAward::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ExpeditionAward::mutable_itemid() {
  return &itemid_;
}

// repeated int32 itemstack = 5;
inline int ExpeditionAward::itemstack_size() const {
  return itemstack_.size();
}
inline void ExpeditionAward::clear_itemstack() {
  itemstack_.Clear();
}
inline ::google::protobuf::int32 ExpeditionAward::itemstack(int index) const {
  return itemstack_.Get(index);
}
inline void ExpeditionAward::set_itemstack(int index, ::google::protobuf::int32 value) {
  itemstack_.Set(index, value);
}
inline void ExpeditionAward::add_itemstack(::google::protobuf::int32 value) {
  itemstack_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ExpeditionAward::itemstack() const {
  return itemstack_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ExpeditionAward::mutable_itemstack() {
  return &itemstack_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageExpeditionAward_2eproto__INCLUDED
