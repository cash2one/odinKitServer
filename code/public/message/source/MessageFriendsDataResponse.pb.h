// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageFriendsDataResponse.proto

#ifndef PROTOBUF_MessageFriendsDataResponse_2eproto__INCLUDED
#define PROTOBUF_MessageFriendsDataResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MessageFriend.pb.h"
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageFriendsDataResponse_2eproto();
void protobuf_AssignDesc_MessageFriendsDataResponse_2eproto();
void protobuf_ShutdownFile_MessageFriendsDataResponse_2eproto();

class FriendsDataResponse;

// ===================================================================

class FriendsDataResponse : public ::google::protobuf::Message {
 public:
  FriendsDataResponse();
  virtual ~FriendsDataResponse();

  FriendsDataResponse(const FriendsDataResponse& from);

  inline FriendsDataResponse& operator=(const FriendsDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsDataResponse& default_instance();

  void Swap(FriendsDataResponse* other);

  // implements Message ----------------------------------------------

  FriendsDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsDataResponse& from);
  void MergeFrom(const FriendsDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 src_pid = 1;
  inline bool has_src_pid() const;
  inline void clear_src_pid();
  static const int kSrcPidFieldNumber = 1;
  inline ::google::protobuf::int64 src_pid() const;
  inline void set_src_pid(::google::protobuf::int64 value);

  // required .Message.Friend friend = 2;
  inline bool has_friend_() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 2;
  inline const ::Message::Friend& friend_() const;
  inline ::Message::Friend* mutable_friend_();
  inline ::Message::Friend* release_friend_();
  inline void set_allocated_friend_(::Message::Friend* friend_);

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.FriendsDataResponse)
 private:
  inline void set_has_src_pid();
  inline void clear_has_src_pid();
  inline void set_has_friend_();
  inline void clear_has_friend_();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_pid_;
  ::Message::Friend* friend__;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriendsDataResponse_2eproto();
  friend void protobuf_AssignDesc_MessageFriendsDataResponse_2eproto();
  friend void protobuf_ShutdownFile_MessageFriendsDataResponse_2eproto();

  void InitAsDefaultInstance();
  static FriendsDataResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// FriendsDataResponse

// optional int64 src_pid = 1;
inline bool FriendsDataResponse::has_src_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsDataResponse::set_has_src_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsDataResponse::clear_has_src_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsDataResponse::clear_src_pid() {
  src_pid_ = GOOGLE_LONGLONG(0);
  clear_has_src_pid();
}
inline ::google::protobuf::int64 FriendsDataResponse::src_pid() const {
  return src_pid_;
}
inline void FriendsDataResponse::set_src_pid(::google::protobuf::int64 value) {
  set_has_src_pid();
  src_pid_ = value;
}

// required .Message.Friend friend = 2;
inline bool FriendsDataResponse::has_friend_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsDataResponse::set_has_friend_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsDataResponse::clear_has_friend_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsDataResponse::clear_friend_() {
  if (friend__ != NULL) friend__->::Message::Friend::Clear();
  clear_has_friend_();
}
inline const ::Message::Friend& FriendsDataResponse::friend_() const {
  return friend__ != NULL ? *friend__ : *default_instance_->friend__;
}
inline ::Message::Friend* FriendsDataResponse::mutable_friend_() {
  set_has_friend_();
  if (friend__ == NULL) friend__ = new ::Message::Friend;
  return friend__;
}
inline ::Message::Friend* FriendsDataResponse::release_friend_() {
  clear_has_friend_();
  ::Message::Friend* temp = friend__;
  friend__ = NULL;
  return temp;
}
inline void FriendsDataResponse::set_allocated_friend_(::Message::Friend* friend_) {
  delete friend__;
  friend__ = friend_;
  if (friend_) {
    set_has_friend_();
  } else {
    clear_has_friend_();
  }
}

// optional int32 result = 3;
inline bool FriendsDataResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendsDataResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendsDataResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendsDataResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 FriendsDataResponse::result() const {
  return result_;
}
inline void FriendsDataResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageFriendsDataResponse_2eproto__INCLUDED
