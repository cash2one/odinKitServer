// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageTaskSyncToData.proto

#ifndef PROTOBUF_MessageTaskSyncToData_2eproto__INCLUDED
#define PROTOBUF_MessageTaskSyncToData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

class DataTask;
class DataTaskSync;
class DataTaskUpdate;
class DataTaskAdd;
class DataTaskDel;
class DataUnreceiveAdd;
class DataUnreceiveDel;

// ===================================================================

class DataTask : public ::google::protobuf::Message {
 public:
  DataTask();
  virtual ~DataTask();

  DataTask(const DataTask& from);

  inline DataTask& operator=(const DataTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataTask& default_instance();

  void Swap(DataTask* other);

  // implements Message ----------------------------------------------

  DataTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataTask& from);
  void MergeFrom(const DataTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated int32 args = 2;
  inline int args_size() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 2;
  inline ::google::protobuf::int32 args(int index) const;
  inline void set_args(int index, ::google::protobuf::int32 value);
  inline void add_args(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      args() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_args();

  // @@protoc_insertion_point(class_scope:Message.DataTask)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > args_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataTask* default_instance_;
};
// -------------------------------------------------------------------

class DataTaskSync : public ::google::protobuf::Message {
 public:
  DataTaskSync();
  virtual ~DataTaskSync();

  DataTaskSync(const DataTaskSync& from);

  inline DataTaskSync& operator=(const DataTaskSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataTaskSync& default_instance();

  void Swap(DataTaskSync* other);

  // implements Message ----------------------------------------------

  DataTaskSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataTaskSync& from);
  void MergeFrom(const DataTaskSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message.DataTask task = 1;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::Message::DataTask& task(int index) const;
  inline ::Message::DataTask* mutable_task(int index);
  inline ::Message::DataTask* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::DataTask >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::DataTask >*
      mutable_task();

  // repeated int32 unreceive = 2;
  inline int unreceive_size() const;
  inline void clear_unreceive();
  static const int kUnreceiveFieldNumber = 2;
  inline ::google::protobuf::int32 unreceive(int index) const;
  inline void set_unreceive(int index, ::google::protobuf::int32 value);
  inline void add_unreceive(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unreceive() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unreceive();

  // required int64 pid = 3;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 3;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.DataTaskSync)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Message::DataTask > task_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unreceive_;
  ::google::protobuf::int64 pid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataTaskSync* default_instance_;
};
// -------------------------------------------------------------------

class DataTaskUpdate : public ::google::protobuf::Message {
 public:
  DataTaskUpdate();
  virtual ~DataTaskUpdate();

  DataTaskUpdate(const DataTaskUpdate& from);

  inline DataTaskUpdate& operator=(const DataTaskUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataTaskUpdate& default_instance();

  void Swap(DataTaskUpdate* other);

  // implements Message ----------------------------------------------

  DataTaskUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataTaskUpdate& from);
  void MergeFrom(const DataTaskUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Message.DataTask task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::Message::DataTask& task() const;
  inline ::Message::DataTask* mutable_task();
  inline ::Message::DataTask* release_task();
  inline void set_allocated_task(::Message::DataTask* task);

  // @@protoc_insertion_point(class_scope:Message.DataTaskUpdate)
 private:
  inline void set_has_task();
  inline void clear_has_task();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Message::DataTask* task_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataTaskUpdate* default_instance_;
};
// -------------------------------------------------------------------

class DataTaskAdd : public ::google::protobuf::Message {
 public:
  DataTaskAdd();
  virtual ~DataTaskAdd();

  DataTaskAdd(const DataTaskAdd& from);

  inline DataTaskAdd& operator=(const DataTaskAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataTaskAdd& default_instance();

  void Swap(DataTaskAdd* other);

  // implements Message ----------------------------------------------

  DataTaskAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataTaskAdd& from);
  void MergeFrom(const DataTaskAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Message.DataTask task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::Message::DataTask& task() const;
  inline ::Message::DataTask* mutable_task();
  inline ::Message::DataTask* release_task();
  inline void set_allocated_task(::Message::DataTask* task);

  // @@protoc_insertion_point(class_scope:Message.DataTaskAdd)
 private:
  inline void set_has_task();
  inline void clear_has_task();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Message::DataTask* task_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataTaskAdd* default_instance_;
};
// -------------------------------------------------------------------

class DataTaskDel : public ::google::protobuf::Message {
 public:
  DataTaskDel();
  virtual ~DataTaskDel();

  DataTaskDel(const DataTaskDel& from);

  inline DataTaskDel& operator=(const DataTaskDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataTaskDel& default_instance();

  void Swap(DataTaskDel* other);

  // implements Message ----------------------------------------------

  DataTaskDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataTaskDel& from);
  void MergeFrom(const DataTaskDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline ::google::protobuf::int32 task() const;
  inline void set_task(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.DataTaskDel)
 private:
  inline void set_has_task();
  inline void clear_has_task();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 task_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataTaskDel* default_instance_;
};
// -------------------------------------------------------------------

class DataUnreceiveAdd : public ::google::protobuf::Message {
 public:
  DataUnreceiveAdd();
  virtual ~DataUnreceiveAdd();

  DataUnreceiveAdd(const DataUnreceiveAdd& from);

  inline DataUnreceiveAdd& operator=(const DataUnreceiveAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataUnreceiveAdd& default_instance();

  void Swap(DataUnreceiveAdd* other);

  // implements Message ----------------------------------------------

  DataUnreceiveAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataUnreceiveAdd& from);
  void MergeFrom(const DataUnreceiveAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 unreceive = 1;
  inline bool has_unreceive() const;
  inline void clear_unreceive();
  static const int kUnreceiveFieldNumber = 1;
  inline ::google::protobuf::int32 unreceive() const;
  inline void set_unreceive(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.DataUnreceiveAdd)
 private:
  inline void set_has_unreceive();
  inline void clear_has_unreceive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 unreceive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataUnreceiveAdd* default_instance_;
};
// -------------------------------------------------------------------

class DataUnreceiveDel : public ::google::protobuf::Message {
 public:
  DataUnreceiveDel();
  virtual ~DataUnreceiveDel();

  DataUnreceiveDel(const DataUnreceiveDel& from);

  inline DataUnreceiveDel& operator=(const DataUnreceiveDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataUnreceiveDel& default_instance();

  void Swap(DataUnreceiveDel* other);

  // implements Message ----------------------------------------------

  DataUnreceiveDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataUnreceiveDel& from);
  void MergeFrom(const DataUnreceiveDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 unreceive = 1;
  inline bool has_unreceive() const;
  inline void clear_unreceive();
  static const int kUnreceiveFieldNumber = 1;
  inline ::google::protobuf::int32 unreceive() const;
  inline void set_unreceive(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.DataUnreceiveDel)
 private:
  inline void set_has_unreceive();
  inline void clear_has_unreceive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 unreceive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_AssignDesc_MessageTaskSyncToData_2eproto();
  friend void protobuf_ShutdownFile_MessageTaskSyncToData_2eproto();

  void InitAsDefaultInstance();
  static DataUnreceiveDel* default_instance_;
};
// ===================================================================


// ===================================================================

// DataTask

// required int32 id = 1;
inline bool DataTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataTask::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DataTask::id() const {
  return id_;
}
inline void DataTask::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated int32 args = 2;
inline int DataTask::args_size() const {
  return args_.size();
}
inline void DataTask::clear_args() {
  args_.Clear();
}
inline ::google::protobuf::int32 DataTask::args(int index) const {
  return args_.Get(index);
}
inline void DataTask::set_args(int index, ::google::protobuf::int32 value) {
  args_.Set(index, value);
}
inline void DataTask::add_args(::google::protobuf::int32 value) {
  args_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DataTask::args() const {
  return args_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DataTask::mutable_args() {
  return &args_;
}

// -------------------------------------------------------------------

// DataTaskSync

// repeated .Message.DataTask task = 1;
inline int DataTaskSync::task_size() const {
  return task_.size();
}
inline void DataTaskSync::clear_task() {
  task_.Clear();
}
inline const ::Message::DataTask& DataTaskSync::task(int index) const {
  return task_.Get(index);
}
inline ::Message::DataTask* DataTaskSync::mutable_task(int index) {
  return task_.Mutable(index);
}
inline ::Message::DataTask* DataTaskSync::add_task() {
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::DataTask >&
DataTaskSync::task() const {
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::DataTask >*
DataTaskSync::mutable_task() {
  return &task_;
}

// repeated int32 unreceive = 2;
inline int DataTaskSync::unreceive_size() const {
  return unreceive_.size();
}
inline void DataTaskSync::clear_unreceive() {
  unreceive_.Clear();
}
inline ::google::protobuf::int32 DataTaskSync::unreceive(int index) const {
  return unreceive_.Get(index);
}
inline void DataTaskSync::set_unreceive(int index, ::google::protobuf::int32 value) {
  unreceive_.Set(index, value);
}
inline void DataTaskSync::add_unreceive(::google::protobuf::int32 value) {
  unreceive_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DataTaskSync::unreceive() const {
  return unreceive_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DataTaskSync::mutable_unreceive() {
  return &unreceive_;
}

// required int64 pid = 3;
inline bool DataTaskSync::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataTaskSync::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataTaskSync::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataTaskSync::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 DataTaskSync::pid() const {
  return pid_;
}
inline void DataTaskSync::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// -------------------------------------------------------------------

// DataTaskUpdate

// optional .Message.DataTask task = 1;
inline bool DataTaskUpdate::has_task() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataTaskUpdate::set_has_task() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataTaskUpdate::clear_has_task() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataTaskUpdate::clear_task() {
  if (task_ != NULL) task_->::Message::DataTask::Clear();
  clear_has_task();
}
inline const ::Message::DataTask& DataTaskUpdate::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::Message::DataTask* DataTaskUpdate::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::Message::DataTask;
  return task_;
}
inline ::Message::DataTask* DataTaskUpdate::release_task() {
  clear_has_task();
  ::Message::DataTask* temp = task_;
  task_ = NULL;
  return temp;
}
inline void DataTaskUpdate::set_allocated_task(::Message::DataTask* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
}

// -------------------------------------------------------------------

// DataTaskAdd

// optional .Message.DataTask task = 1;
inline bool DataTaskAdd::has_task() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataTaskAdd::set_has_task() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataTaskAdd::clear_has_task() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataTaskAdd::clear_task() {
  if (task_ != NULL) task_->::Message::DataTask::Clear();
  clear_has_task();
}
inline const ::Message::DataTask& DataTaskAdd::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::Message::DataTask* DataTaskAdd::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::Message::DataTask;
  return task_;
}
inline ::Message::DataTask* DataTaskAdd::release_task() {
  clear_has_task();
  ::Message::DataTask* temp = task_;
  task_ = NULL;
  return temp;
}
inline void DataTaskAdd::set_allocated_task(::Message::DataTask* task) {
  delete task_;
  task_ = task;
  if (task) {
    set_has_task();
  } else {
    clear_has_task();
  }
}

// -------------------------------------------------------------------

// DataTaskDel

// optional int32 task = 1;
inline bool DataTaskDel::has_task() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataTaskDel::set_has_task() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataTaskDel::clear_has_task() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataTaskDel::clear_task() {
  task_ = 0;
  clear_has_task();
}
inline ::google::protobuf::int32 DataTaskDel::task() const {
  return task_;
}
inline void DataTaskDel::set_task(::google::protobuf::int32 value) {
  set_has_task();
  task_ = value;
}

// -------------------------------------------------------------------

// DataUnreceiveAdd

// optional int32 unreceive = 1;
inline bool DataUnreceiveAdd::has_unreceive() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataUnreceiveAdd::set_has_unreceive() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataUnreceiveAdd::clear_has_unreceive() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataUnreceiveAdd::clear_unreceive() {
  unreceive_ = 0;
  clear_has_unreceive();
}
inline ::google::protobuf::int32 DataUnreceiveAdd::unreceive() const {
  return unreceive_;
}
inline void DataUnreceiveAdd::set_unreceive(::google::protobuf::int32 value) {
  set_has_unreceive();
  unreceive_ = value;
}

// -------------------------------------------------------------------

// DataUnreceiveDel

// optional int32 unreceive = 1;
inline bool DataUnreceiveDel::has_unreceive() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataUnreceiveDel::set_has_unreceive() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataUnreceiveDel::clear_has_unreceive() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataUnreceiveDel::clear_unreceive() {
  unreceive_ = 0;
  clear_has_unreceive();
}
inline ::google::protobuf::int32 DataUnreceiveDel::unreceive() const {
  return unreceive_;
}
inline void DataUnreceiveDel::set_unreceive(::google::protobuf::int32 value) {
  set_has_unreceive();
  unreceive_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageTaskSyncToData_2eproto__INCLUDED
