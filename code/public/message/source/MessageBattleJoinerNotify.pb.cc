// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageBattleJoinerNotify.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageBattleJoinerNotify.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* BattleJoinerNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleJoinerNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageBattleJoinerNotify_2eproto() {
  protobuf_AddDesc_MessageBattleJoinerNotify_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageBattleJoinerNotify.proto");
  GOOGLE_CHECK(file != NULL);
  BattleJoinerNotify_descriptor_ = file->message_type(0);
  static const int BattleJoinerNotify_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jwpid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jcamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jmerit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jranking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jaction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jbuyact_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jacttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jactcdtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jrewarddialy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jdoublewin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jcurrentwin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jownwps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, jownspecialwps_),
  };
  BattleJoinerNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleJoinerNotify_descriptor_,
      BattleJoinerNotify::default_instance_,
      BattleJoinerNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleJoinerNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleJoinerNotify));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageBattleJoinerNotify_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleJoinerNotify_descriptor_, &BattleJoinerNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageBattleJoinerNotify_2eproto() {
  delete BattleJoinerNotify::default_instance_;
  delete BattleJoinerNotify_reflection_;
}

void protobuf_AddDesc_MessageBattleJoinerNotify_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037MessageBattleJoinerNotify.proto\022\007Messa"
    "ge\"\240\002\n\022BattleJoinerNotify\022\013\n\003jid\030\001 \001(\003\022\r"
    "\n\005jname\030\002 \001(\t\022\r\n\005jwpid\030\003 \001(\005\022\r\n\005jcamp\030\004 "
    "\001(\005\022\016\n\006jmerit\030\005 \001(\005\022\020\n\010jranking\030\006 \001(\005\022\017\n"
    "\007jaction\030\007 \001(\005\022\017\n\007jbuyact\030\010 \001(\005\022\020\n\010jactt"
    "ime\030\t \001(\003\022\022\n\njactcdtime\030\n \001(\003\022\024\n\014jreward"
    "dialy\030\013 \001(\005\022\022\n\njdoublewin\030\014 \001(\005\022\023\n\013jcurr"
    "entwin\030\r \001(\005\022\017\n\007jOwnwps\030\016 \001(\005\022\026\n\016jOwnSpe"
    "cialwps\030\017 \001(\005", 333);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageBattleJoinerNotify.proto", &protobuf_RegisterTypes);
  BattleJoinerNotify::default_instance_ = new BattleJoinerNotify();
  BattleJoinerNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageBattleJoinerNotify_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageBattleJoinerNotify_2eproto {
  StaticDescriptorInitializer_MessageBattleJoinerNotify_2eproto() {
    protobuf_AddDesc_MessageBattleJoinerNotify_2eproto();
  }
} static_descriptor_initializer_MessageBattleJoinerNotify_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BattleJoinerNotify::kJidFieldNumber;
const int BattleJoinerNotify::kJnameFieldNumber;
const int BattleJoinerNotify::kJwpidFieldNumber;
const int BattleJoinerNotify::kJcampFieldNumber;
const int BattleJoinerNotify::kJmeritFieldNumber;
const int BattleJoinerNotify::kJrankingFieldNumber;
const int BattleJoinerNotify::kJactionFieldNumber;
const int BattleJoinerNotify::kJbuyactFieldNumber;
const int BattleJoinerNotify::kJacttimeFieldNumber;
const int BattleJoinerNotify::kJactcdtimeFieldNumber;
const int BattleJoinerNotify::kJrewarddialyFieldNumber;
const int BattleJoinerNotify::kJdoublewinFieldNumber;
const int BattleJoinerNotify::kJcurrentwinFieldNumber;
const int BattleJoinerNotify::kJOwnwpsFieldNumber;
const int BattleJoinerNotify::kJOwnSpecialwpsFieldNumber;
#endif  // !_MSC_VER

BattleJoinerNotify::BattleJoinerNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BattleJoinerNotify::InitAsDefaultInstance() {
}

BattleJoinerNotify::BattleJoinerNotify(const BattleJoinerNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BattleJoinerNotify::SharedCtor() {
  _cached_size_ = 0;
  jid_ = GOOGLE_LONGLONG(0);
  jname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  jwpid_ = 0;
  jcamp_ = 0;
  jmerit_ = 0;
  jranking_ = 0;
  jaction_ = 0;
  jbuyact_ = 0;
  jacttime_ = GOOGLE_LONGLONG(0);
  jactcdtime_ = GOOGLE_LONGLONG(0);
  jrewarddialy_ = 0;
  jdoublewin_ = 0;
  jcurrentwin_ = 0;
  jownwps_ = 0;
  jownspecialwps_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleJoinerNotify::~BattleJoinerNotify() {
  SharedDtor();
}

void BattleJoinerNotify::SharedDtor() {
  if (jname_ != &::google::protobuf::internal::kEmptyString) {
    delete jname_;
  }
  if (this != default_instance_) {
  }
}

void BattleJoinerNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleJoinerNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleJoinerNotify_descriptor_;
}

const BattleJoinerNotify& BattleJoinerNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageBattleJoinerNotify_2eproto();
  return *default_instance_;
}

BattleJoinerNotify* BattleJoinerNotify::default_instance_ = NULL;

BattleJoinerNotify* BattleJoinerNotify::New() const {
  return new BattleJoinerNotify;
}

void BattleJoinerNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    jid_ = GOOGLE_LONGLONG(0);
    if (has_jname()) {
      if (jname_ != &::google::protobuf::internal::kEmptyString) {
        jname_->clear();
      }
    }
    jwpid_ = 0;
    jcamp_ = 0;
    jmerit_ = 0;
    jranking_ = 0;
    jaction_ = 0;
    jbuyact_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    jacttime_ = GOOGLE_LONGLONG(0);
    jactcdtime_ = GOOGLE_LONGLONG(0);
    jrewarddialy_ = 0;
    jdoublewin_ = 0;
    jcurrentwin_ = 0;
    jownwps_ = 0;
    jownspecialwps_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleJoinerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 jid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jid_)));
          set_has_jid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_jname;
        break;
      }

      // optional string jname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_jname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jname().data(), this->jname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_jwpid;
        break;
      }

      // optional int32 jwpid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jwpid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jwpid_)));
          set_has_jwpid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_jcamp;
        break;
      }

      // optional int32 jcamp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jcamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jcamp_)));
          set_has_jcamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_jmerit;
        break;
      }

      // optional int32 jmerit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jmerit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jmerit_)));
          set_has_jmerit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_jranking;
        break;
      }

      // optional int32 jranking = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jranking:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jranking_)));
          set_has_jranking();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_jaction;
        break;
      }

      // optional int32 jaction = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jaction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jaction_)));
          set_has_jaction();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_jbuyact;
        break;
      }

      // optional int32 jbuyact = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jbuyact:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jbuyact_)));
          set_has_jbuyact();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_jacttime;
        break;
      }

      // optional int64 jacttime = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jacttime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jacttime_)));
          set_has_jacttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_jactcdtime;
        break;
      }

      // optional int64 jactcdtime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jactcdtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &jactcdtime_)));
          set_has_jactcdtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_jrewarddialy;
        break;
      }

      // optional int32 jrewarddialy = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jrewarddialy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jrewarddialy_)));
          set_has_jrewarddialy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_jdoublewin;
        break;
      }

      // optional int32 jdoublewin = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jdoublewin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jdoublewin_)));
          set_has_jdoublewin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_jcurrentwin;
        break;
      }

      // optional int32 jcurrentwin = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jcurrentwin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jcurrentwin_)));
          set_has_jcurrentwin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_jOwnwps;
        break;
      }

      // optional int32 jOwnwps = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jOwnwps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jownwps_)));
          set_has_jownwps();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_jOwnSpecialwps;
        break;
      }

      // optional int32 jOwnSpecialwps = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jOwnSpecialwps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jownspecialwps_)));
          set_has_jownspecialwps();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BattleJoinerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 jid = 1;
  if (has_jid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->jid(), output);
  }

  // optional string jname = 2;
  if (has_jname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jname().data(), this->jname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->jname(), output);
  }

  // optional int32 jwpid = 3;
  if (has_jwpid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->jwpid(), output);
  }

  // optional int32 jcamp = 4;
  if (has_jcamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->jcamp(), output);
  }

  // optional int32 jmerit = 5;
  if (has_jmerit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->jmerit(), output);
  }

  // optional int32 jranking = 6;
  if (has_jranking()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->jranking(), output);
  }

  // optional int32 jaction = 7;
  if (has_jaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->jaction(), output);
  }

  // optional int32 jbuyact = 8;
  if (has_jbuyact()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->jbuyact(), output);
  }

  // optional int64 jacttime = 9;
  if (has_jacttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->jacttime(), output);
  }

  // optional int64 jactcdtime = 10;
  if (has_jactcdtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->jactcdtime(), output);
  }

  // optional int32 jrewarddialy = 11;
  if (has_jrewarddialy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->jrewarddialy(), output);
  }

  // optional int32 jdoublewin = 12;
  if (has_jdoublewin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->jdoublewin(), output);
  }

  // optional int32 jcurrentwin = 13;
  if (has_jcurrentwin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->jcurrentwin(), output);
  }

  // optional int32 jOwnwps = 14;
  if (has_jownwps()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->jownwps(), output);
  }

  // optional int32 jOwnSpecialwps = 15;
  if (has_jownspecialwps()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->jownspecialwps(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BattleJoinerNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 jid = 1;
  if (has_jid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->jid(), target);
  }

  // optional string jname = 2;
  if (has_jname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jname().data(), this->jname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->jname(), target);
  }

  // optional int32 jwpid = 3;
  if (has_jwpid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->jwpid(), target);
  }

  // optional int32 jcamp = 4;
  if (has_jcamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->jcamp(), target);
  }

  // optional int32 jmerit = 5;
  if (has_jmerit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->jmerit(), target);
  }

  // optional int32 jranking = 6;
  if (has_jranking()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->jranking(), target);
  }

  // optional int32 jaction = 7;
  if (has_jaction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->jaction(), target);
  }

  // optional int32 jbuyact = 8;
  if (has_jbuyact()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->jbuyact(), target);
  }

  // optional int64 jacttime = 9;
  if (has_jacttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->jacttime(), target);
  }

  // optional int64 jactcdtime = 10;
  if (has_jactcdtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->jactcdtime(), target);
  }

  // optional int32 jrewarddialy = 11;
  if (has_jrewarddialy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->jrewarddialy(), target);
  }

  // optional int32 jdoublewin = 12;
  if (has_jdoublewin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->jdoublewin(), target);
  }

  // optional int32 jcurrentwin = 13;
  if (has_jcurrentwin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->jcurrentwin(), target);
  }

  // optional int32 jOwnwps = 14;
  if (has_jownwps()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->jownwps(), target);
  }

  // optional int32 jOwnSpecialwps = 15;
  if (has_jownspecialwps()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->jownspecialwps(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BattleJoinerNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 jid = 1;
    if (has_jid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jid());
    }

    // optional string jname = 2;
    if (has_jname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jname());
    }

    // optional int32 jwpid = 3;
    if (has_jwpid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jwpid());
    }

    // optional int32 jcamp = 4;
    if (has_jcamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jcamp());
    }

    // optional int32 jmerit = 5;
    if (has_jmerit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jmerit());
    }

    // optional int32 jranking = 6;
    if (has_jranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jranking());
    }

    // optional int32 jaction = 7;
    if (has_jaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jaction());
    }

    // optional int32 jbuyact = 8;
    if (has_jbuyact()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jbuyact());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 jacttime = 9;
    if (has_jacttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jacttime());
    }

    // optional int64 jactcdtime = 10;
    if (has_jactcdtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->jactcdtime());
    }

    // optional int32 jrewarddialy = 11;
    if (has_jrewarddialy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jrewarddialy());
    }

    // optional int32 jdoublewin = 12;
    if (has_jdoublewin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jdoublewin());
    }

    // optional int32 jcurrentwin = 13;
    if (has_jcurrentwin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jcurrentwin());
    }

    // optional int32 jOwnwps = 14;
    if (has_jownwps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jownwps());
    }

    // optional int32 jOwnSpecialwps = 15;
    if (has_jownspecialwps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jownspecialwps());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleJoinerNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleJoinerNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleJoinerNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleJoinerNotify::MergeFrom(const BattleJoinerNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jid()) {
      set_jid(from.jid());
    }
    if (from.has_jname()) {
      set_jname(from.jname());
    }
    if (from.has_jwpid()) {
      set_jwpid(from.jwpid());
    }
    if (from.has_jcamp()) {
      set_jcamp(from.jcamp());
    }
    if (from.has_jmerit()) {
      set_jmerit(from.jmerit());
    }
    if (from.has_jranking()) {
      set_jranking(from.jranking());
    }
    if (from.has_jaction()) {
      set_jaction(from.jaction());
    }
    if (from.has_jbuyact()) {
      set_jbuyact(from.jbuyact());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_jacttime()) {
      set_jacttime(from.jacttime());
    }
    if (from.has_jactcdtime()) {
      set_jactcdtime(from.jactcdtime());
    }
    if (from.has_jrewarddialy()) {
      set_jrewarddialy(from.jrewarddialy());
    }
    if (from.has_jdoublewin()) {
      set_jdoublewin(from.jdoublewin());
    }
    if (from.has_jcurrentwin()) {
      set_jcurrentwin(from.jcurrentwin());
    }
    if (from.has_jownwps()) {
      set_jownwps(from.jownwps());
    }
    if (from.has_jownspecialwps()) {
      set_jownspecialwps(from.jownspecialwps());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleJoinerNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleJoinerNotify::CopyFrom(const BattleJoinerNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleJoinerNotify::IsInitialized() const {

  return true;
}

void BattleJoinerNotify::Swap(BattleJoinerNotify* other) {
  if (other != this) {
    std::swap(jid_, other->jid_);
    std::swap(jname_, other->jname_);
    std::swap(jwpid_, other->jwpid_);
    std::swap(jcamp_, other->jcamp_);
    std::swap(jmerit_, other->jmerit_);
    std::swap(jranking_, other->jranking_);
    std::swap(jaction_, other->jaction_);
    std::swap(jbuyact_, other->jbuyact_);
    std::swap(jacttime_, other->jacttime_);
    std::swap(jactcdtime_, other->jactcdtime_);
    std::swap(jrewarddialy_, other->jrewarddialy_);
    std::swap(jdoublewin_, other->jdoublewin_);
    std::swap(jcurrentwin_, other->jcurrentwin_);
    std::swap(jownwps_, other->jownwps_);
    std::swap(jownspecialwps_, other->jownspecialwps_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleJoinerNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleJoinerNotify_descriptor_;
  metadata.reflection = BattleJoinerNotify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
