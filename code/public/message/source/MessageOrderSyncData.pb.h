// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageOrderSyncData.proto

#ifndef PROTOBUF_MessageOrderSyncData_2eproto__INCLUDED
#define PROTOBUF_MessageOrderSyncData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MessageArenaPlayerData.pb.h"
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageOrderSyncData_2eproto();
void protobuf_AssignDesc_MessageOrderSyncData_2eproto();
void protobuf_ShutdownFile_MessageOrderSyncData_2eproto();

class OrderDataUpdatePlayer;
class OrderDataInsertPlayer;
class OrderDataDeletePlayer;
class OrderDataMoveFront;
class OrderDataMoveBack;
class OrderArenaPlayerData;

// ===================================================================

class OrderDataUpdatePlayer : public ::google::protobuf::Message {
 public:
  OrderDataUpdatePlayer();
  virtual ~OrderDataUpdatePlayer();

  OrderDataUpdatePlayer(const OrderDataUpdatePlayer& from);

  inline OrderDataUpdatePlayer& operator=(const OrderDataUpdatePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDataUpdatePlayer& default_instance();

  void Swap(OrderDataUpdatePlayer* other);

  // implements Message ----------------------------------------------

  OrderDataUpdatePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderDataUpdatePlayer& from);
  void MergeFrom(const OrderDataUpdatePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional int64 pid = 3;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 3;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 order = 4;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 4;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.OrderDataUpdatePlayer)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageOrderSyncData_2eproto();

  void InitAsDefaultInstance();
  static OrderDataUpdatePlayer* default_instance_;
};
// -------------------------------------------------------------------

class OrderDataInsertPlayer : public ::google::protobuf::Message {
 public:
  OrderDataInsertPlayer();
  virtual ~OrderDataInsertPlayer();

  OrderDataInsertPlayer(const OrderDataInsertPlayer& from);

  inline OrderDataInsertPlayer& operator=(const OrderDataInsertPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDataInsertPlayer& default_instance();

  void Swap(OrderDataInsertPlayer* other);

  // implements Message ----------------------------------------------

  OrderDataInsertPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderDataInsertPlayer& from);
  void MergeFrom(const OrderDataInsertPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Message.ArenaPlayer player = 1;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline const ::Message::ArenaPlayer& player() const;
  inline ::Message::ArenaPlayer* mutable_player();
  inline ::Message::ArenaPlayer* release_player();
  inline void set_allocated_player(::Message::ArenaPlayer* player);

  // optional int32 before = 2;
  inline bool has_before() const;
  inline void clear_before();
  static const int kBeforeFieldNumber = 2;
  inline ::google::protobuf::int32 before() const;
  inline void set_before(::google::protobuf::int32 value);

  // optional int32 order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.OrderDataInsertPlayer)
 private:
  inline void set_has_player();
  inline void clear_has_player();
  inline void set_has_before();
  inline void clear_has_before();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Message::ArenaPlayer* player_;
  ::google::protobuf::int32 before_;
  ::google::protobuf::int32 order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageOrderSyncData_2eproto();

  void InitAsDefaultInstance();
  static OrderDataInsertPlayer* default_instance_;
};
// -------------------------------------------------------------------

class OrderDataDeletePlayer : public ::google::protobuf::Message {
 public:
  OrderDataDeletePlayer();
  virtual ~OrderDataDeletePlayer();

  OrderDataDeletePlayer(const OrderDataDeletePlayer& from);

  inline OrderDataDeletePlayer& operator=(const OrderDataDeletePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDataDeletePlayer& default_instance();

  void Swap(OrderDataDeletePlayer* other);

  // implements Message ----------------------------------------------

  OrderDataDeletePlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderDataDeletePlayer& from);
  void MergeFrom(const OrderDataDeletePlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 order = 2;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 2;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.OrderDataDeletePlayer)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageOrderSyncData_2eproto();

  void InitAsDefaultInstance();
  static OrderDataDeletePlayer* default_instance_;
};
// -------------------------------------------------------------------

class OrderDataMoveFront : public ::google::protobuf::Message {
 public:
  OrderDataMoveFront();
  virtual ~OrderDataMoveFront();

  OrderDataMoveFront(const OrderDataMoveFront& from);

  inline OrderDataMoveFront& operator=(const OrderDataMoveFront& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDataMoveFront& default_instance();

  void Swap(OrderDataMoveFront* other);

  // implements Message ----------------------------------------------

  OrderDataMoveFront* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderDataMoveFront& from);
  void MergeFrom(const OrderDataMoveFront& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline ::google::protobuf::int32 src() const;
  inline void set_src(::google::protobuf::int32 value);

  // optional int32 dst = 2;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 2;
  inline ::google::protobuf::int32 dst() const;
  inline void set_dst(::google::protobuf::int32 value);

  // optional int32 order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.OrderDataMoveFront)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 src_;
  ::google::protobuf::int32 dst_;
  ::google::protobuf::int32 order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageOrderSyncData_2eproto();

  void InitAsDefaultInstance();
  static OrderDataMoveFront* default_instance_;
};
// -------------------------------------------------------------------

class OrderDataMoveBack : public ::google::protobuf::Message {
 public:
  OrderDataMoveBack();
  virtual ~OrderDataMoveBack();

  OrderDataMoveBack(const OrderDataMoveBack& from);

  inline OrderDataMoveBack& operator=(const OrderDataMoveBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDataMoveBack& default_instance();

  void Swap(OrderDataMoveBack* other);

  // implements Message ----------------------------------------------

  OrderDataMoveBack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderDataMoveBack& from);
  void MergeFrom(const OrderDataMoveBack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 src = 1;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 1;
  inline ::google::protobuf::int32 src() const;
  inline void set_src(::google::protobuf::int32 value);

  // optional int32 dst = 2;
  inline bool has_dst() const;
  inline void clear_dst();
  static const int kDstFieldNumber = 2;
  inline ::google::protobuf::int32 dst() const;
  inline void set_dst(::google::protobuf::int32 value);

  // optional int32 order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.OrderDataMoveBack)
 private:
  inline void set_has_src();
  inline void clear_has_src();
  inline void set_has_dst();
  inline void clear_has_dst();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 src_;
  ::google::protobuf::int32 dst_;
  ::google::protobuf::int32 order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageOrderSyncData_2eproto();

  void InitAsDefaultInstance();
  static OrderDataMoveBack* default_instance_;
};
// -------------------------------------------------------------------

class OrderArenaPlayerData : public ::google::protobuf::Message {
 public:
  OrderArenaPlayerData();
  virtual ~OrderArenaPlayerData();

  OrderArenaPlayerData(const OrderArenaPlayerData& from);

  inline OrderArenaPlayerData& operator=(const OrderArenaPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderArenaPlayerData& default_instance();

  void Swap(OrderArenaPlayerData* other);

  // implements Message ----------------------------------------------

  OrderArenaPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderArenaPlayerData& from);
  void MergeFrom(const OrderArenaPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .Message.ArenaPlayer player = 2;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline const ::Message::ArenaPlayer& player() const;
  inline ::Message::ArenaPlayer* mutable_player();
  inline ::Message::ArenaPlayer* release_player();
  inline void set_allocated_player(::Message::ArenaPlayer* player);

  // @@protoc_insertion_point(class_scope:Message.OrderArenaPlayerData)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_player();
  inline void clear_has_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Message::ArenaPlayer* player_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageOrderSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageOrderSyncData_2eproto();

  void InitAsDefaultInstance();
  static OrderArenaPlayerData* default_instance_;
};
// ===================================================================


// ===================================================================

// OrderDataUpdatePlayer

// optional int32 type = 1;
inline bool OrderDataUpdatePlayer::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDataUpdatePlayer::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDataUpdatePlayer::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDataUpdatePlayer::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 OrderDataUpdatePlayer::type() const {
  return type_;
}
inline void OrderDataUpdatePlayer::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool OrderDataUpdatePlayer::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDataUpdatePlayer::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDataUpdatePlayer::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDataUpdatePlayer::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 OrderDataUpdatePlayer::value() const {
  return value_;
}
inline void OrderDataUpdatePlayer::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// optional int64 pid = 3;
inline bool OrderDataUpdatePlayer::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderDataUpdatePlayer::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderDataUpdatePlayer::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderDataUpdatePlayer::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 OrderDataUpdatePlayer::pid() const {
  return pid_;
}
inline void OrderDataUpdatePlayer::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional int32 order = 4;
inline bool OrderDataUpdatePlayer::has_order() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderDataUpdatePlayer::set_has_order() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderDataUpdatePlayer::clear_has_order() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderDataUpdatePlayer::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 OrderDataUpdatePlayer::order() const {
  return order_;
}
inline void OrderDataUpdatePlayer::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// OrderDataInsertPlayer

// optional .Message.ArenaPlayer player = 1;
inline bool OrderDataInsertPlayer::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDataInsertPlayer::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDataInsertPlayer::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDataInsertPlayer::clear_player() {
  if (player_ != NULL) player_->::Message::ArenaPlayer::Clear();
  clear_has_player();
}
inline const ::Message::ArenaPlayer& OrderDataInsertPlayer::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::Message::ArenaPlayer* OrderDataInsertPlayer::mutable_player() {
  set_has_player();
  if (player_ == NULL) player_ = new ::Message::ArenaPlayer;
  return player_;
}
inline ::Message::ArenaPlayer* OrderDataInsertPlayer::release_player() {
  clear_has_player();
  ::Message::ArenaPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline void OrderDataInsertPlayer::set_allocated_player(::Message::ArenaPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
}

// optional int32 before = 2;
inline bool OrderDataInsertPlayer::has_before() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDataInsertPlayer::set_has_before() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDataInsertPlayer::clear_has_before() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDataInsertPlayer::clear_before() {
  before_ = 0;
  clear_has_before();
}
inline ::google::protobuf::int32 OrderDataInsertPlayer::before() const {
  return before_;
}
inline void OrderDataInsertPlayer::set_before(::google::protobuf::int32 value) {
  set_has_before();
  before_ = value;
}

// optional int32 order = 3;
inline bool OrderDataInsertPlayer::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderDataInsertPlayer::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderDataInsertPlayer::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderDataInsertPlayer::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 OrderDataInsertPlayer::order() const {
  return order_;
}
inline void OrderDataInsertPlayer::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// OrderDataDeletePlayer

// optional int64 pid = 1;
inline bool OrderDataDeletePlayer::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDataDeletePlayer::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDataDeletePlayer::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDataDeletePlayer::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 OrderDataDeletePlayer::pid() const {
  return pid_;
}
inline void OrderDataDeletePlayer::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional int32 order = 2;
inline bool OrderDataDeletePlayer::has_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDataDeletePlayer::set_has_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDataDeletePlayer::clear_has_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDataDeletePlayer::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 OrderDataDeletePlayer::order() const {
  return order_;
}
inline void OrderDataDeletePlayer::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// OrderDataMoveFront

// optional int32 src = 1;
inline bool OrderDataMoveFront::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDataMoveFront::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDataMoveFront::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDataMoveFront::clear_src() {
  src_ = 0;
  clear_has_src();
}
inline ::google::protobuf::int32 OrderDataMoveFront::src() const {
  return src_;
}
inline void OrderDataMoveFront::set_src(::google::protobuf::int32 value) {
  set_has_src();
  src_ = value;
}

// optional int32 dst = 2;
inline bool OrderDataMoveFront::has_dst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDataMoveFront::set_has_dst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDataMoveFront::clear_has_dst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDataMoveFront::clear_dst() {
  dst_ = 0;
  clear_has_dst();
}
inline ::google::protobuf::int32 OrderDataMoveFront::dst() const {
  return dst_;
}
inline void OrderDataMoveFront::set_dst(::google::protobuf::int32 value) {
  set_has_dst();
  dst_ = value;
}

// optional int32 order = 3;
inline bool OrderDataMoveFront::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderDataMoveFront::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderDataMoveFront::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderDataMoveFront::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 OrderDataMoveFront::order() const {
  return order_;
}
inline void OrderDataMoveFront::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// OrderDataMoveBack

// optional int32 src = 1;
inline bool OrderDataMoveBack::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDataMoveBack::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDataMoveBack::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDataMoveBack::clear_src() {
  src_ = 0;
  clear_has_src();
}
inline ::google::protobuf::int32 OrderDataMoveBack::src() const {
  return src_;
}
inline void OrderDataMoveBack::set_src(::google::protobuf::int32 value) {
  set_has_src();
  src_ = value;
}

// optional int32 dst = 2;
inline bool OrderDataMoveBack::has_dst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDataMoveBack::set_has_dst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDataMoveBack::clear_has_dst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDataMoveBack::clear_dst() {
  dst_ = 0;
  clear_has_dst();
}
inline ::google::protobuf::int32 OrderDataMoveBack::dst() const {
  return dst_;
}
inline void OrderDataMoveBack::set_dst(::google::protobuf::int32 value) {
  set_has_dst();
  dst_ = value;
}

// optional int32 order = 3;
inline bool OrderDataMoveBack::has_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderDataMoveBack::set_has_order() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderDataMoveBack::clear_has_order() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderDataMoveBack::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 OrderDataMoveBack::order() const {
  return order_;
}
inline void OrderDataMoveBack::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// OrderArenaPlayerData

// optional int32 type = 1;
inline bool OrderArenaPlayerData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderArenaPlayerData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderArenaPlayerData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderArenaPlayerData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 OrderArenaPlayerData::type() const {
  return type_;
}
inline void OrderArenaPlayerData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional .Message.ArenaPlayer player = 2;
inline bool OrderArenaPlayerData::has_player() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderArenaPlayerData::set_has_player() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderArenaPlayerData::clear_has_player() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderArenaPlayerData::clear_player() {
  if (player_ != NULL) player_->::Message::ArenaPlayer::Clear();
  clear_has_player();
}
inline const ::Message::ArenaPlayer& OrderArenaPlayerData::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::Message::ArenaPlayer* OrderArenaPlayerData::mutable_player() {
  set_has_player();
  if (player_ == NULL) player_ = new ::Message::ArenaPlayer;
  return player_;
}
inline ::Message::ArenaPlayer* OrderArenaPlayerData::release_player() {
  clear_has_player();
  ::Message::ArenaPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline void OrderArenaPlayerData::set_allocated_player(::Message::ArenaPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageOrderSyncData_2eproto__INCLUDED
