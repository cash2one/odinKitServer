// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageArenaSyncData.proto

#ifndef PROTOBUF_MessageArenaSyncData_2eproto__INCLUDED
#define PROTOBUF_MessageArenaSyncData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MessageArenaPlayerData.pb.h"
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

class ArenaValue;
class ArenaSaveData;
class ArenaSyncData;
class ArenaWaitingAdd;
class ArenaWaitingDel;
class ArenaWaitingDelAll;
class ArenaCurrentAdd;
class ArenaCurrentDel;
class ArenaCurrentUpdate;
class ArenaCurrentDelAll;
class ArenaModuleRefresh;
class ArenaModuleSyncData;

// ===================================================================

class ArenaValue : public ::google::protobuf::Message {
 public:
  ArenaValue();
  virtual ~ArenaValue();

  ArenaValue(const ArenaValue& from);

  inline ArenaValue& operator=(const ArenaValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaValue& default_instance();

  void Swap(ArenaValue* other);

  // implements Message ----------------------------------------------

  ArenaValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaValue& from);
  void MergeFrom(const ArenaValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.ArenaValue)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaValue* default_instance_;
};
// -------------------------------------------------------------------

class ArenaSaveData : public ::google::protobuf::Message {
 public:
  ArenaSaveData();
  virtual ~ArenaSaveData();

  ArenaSaveData(const ArenaSaveData& from);

  inline ArenaSaveData& operator=(const ArenaSaveData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaSaveData& default_instance();

  void Swap(ArenaSaveData* other);

  // implements Message ----------------------------------------------

  ArenaSaveData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaSaveData& from);
  void MergeFrom(const ArenaSaveData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.ArenaSaveData)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 value_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaSaveData* default_instance_;
};
// -------------------------------------------------------------------

class ArenaSyncData : public ::google::protobuf::Message {
 public:
  ArenaSyncData();
  virtual ~ArenaSyncData();

  ArenaSyncData(const ArenaSyncData& from);

  inline ArenaSyncData& operator=(const ArenaSyncData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaSyncData& default_instance();

  void Swap(ArenaSyncData* other);

  // implements Message ----------------------------------------------

  ArenaSyncData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaSyncData& from);
  void MergeFrom(const ArenaSyncData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message.ArenaValue values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::Message::ArenaValue& values(int index) const;
  inline ::Message::ArenaValue* mutable_values(int index);
  inline ::Message::ArenaValue* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaValue >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaValue >*
      mutable_values();

  // repeated .Message.ArenaPlayer waiting = 2;
  inline int waiting_size() const;
  inline void clear_waiting();
  static const int kWaitingFieldNumber = 2;
  inline const ::Message::ArenaPlayer& waiting(int index) const;
  inline ::Message::ArenaPlayer* mutable_waiting(int index);
  inline ::Message::ArenaPlayer* add_waiting();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
      waiting() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
      mutable_waiting();

  // repeated .Message.ArenaPlayer current = 3;
  inline int current_size() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 3;
  inline const ::Message::ArenaPlayer& current(int index) const;
  inline ::Message::ArenaPlayer* mutable_current(int index);
  inline ::Message::ArenaPlayer* add_current();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
      current() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
      mutable_current();

  // @@protoc_insertion_point(class_scope:Message.ArenaSyncData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Message::ArenaValue > values_;
  ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer > waiting_;
  ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer > current_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaSyncData* default_instance_;
};
// -------------------------------------------------------------------

class ArenaWaitingAdd : public ::google::protobuf::Message {
 public:
  ArenaWaitingAdd();
  virtual ~ArenaWaitingAdd();

  ArenaWaitingAdd(const ArenaWaitingAdd& from);

  inline ArenaWaitingAdd& operator=(const ArenaWaitingAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaWaitingAdd& default_instance();

  void Swap(ArenaWaitingAdd* other);

  // implements Message ----------------------------------------------

  ArenaWaitingAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaWaitingAdd& from);
  void MergeFrom(const ArenaWaitingAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message.ArenaPlayer players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::Message::ArenaPlayer& players(int index) const;
  inline ::Message::ArenaPlayer* mutable_players(int index);
  inline ::Message::ArenaPlayer* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
      mutable_players();

  // optional int32 stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.ArenaWaitingAdd)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer > players_;
  ::google::protobuf::int32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaWaitingAdd* default_instance_;
};
// -------------------------------------------------------------------

class ArenaWaitingDel : public ::google::protobuf::Message {
 public:
  ArenaWaitingDel();
  virtual ~ArenaWaitingDel();

  ArenaWaitingDel(const ArenaWaitingDel& from);

  inline ArenaWaitingDel& operator=(const ArenaWaitingDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaWaitingDel& default_instance();

  void Swap(ArenaWaitingDel* other);

  // implements Message ----------------------------------------------

  ArenaWaitingDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaWaitingDel& from);
  void MergeFrom(const ArenaWaitingDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.ArenaWaitingDel)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaWaitingDel* default_instance_;
};
// -------------------------------------------------------------------

class ArenaWaitingDelAll : public ::google::protobuf::Message {
 public:
  ArenaWaitingDelAll();
  virtual ~ArenaWaitingDelAll();

  ArenaWaitingDelAll(const ArenaWaitingDelAll& from);

  inline ArenaWaitingDelAll& operator=(const ArenaWaitingDelAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaWaitingDelAll& default_instance();

  void Swap(ArenaWaitingDelAll* other);

  // implements Message ----------------------------------------------

  ArenaWaitingDelAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaWaitingDelAll& from);
  void MergeFrom(const ArenaWaitingDelAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Message.ArenaWaitingDelAll)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaWaitingDelAll* default_instance_;
};
// -------------------------------------------------------------------

class ArenaCurrentAdd : public ::google::protobuf::Message {
 public:
  ArenaCurrentAdd();
  virtual ~ArenaCurrentAdd();

  ArenaCurrentAdd(const ArenaCurrentAdd& from);

  inline ArenaCurrentAdd& operator=(const ArenaCurrentAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaCurrentAdd& default_instance();

  void Swap(ArenaCurrentAdd* other);

  // implements Message ----------------------------------------------

  ArenaCurrentAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaCurrentAdd& from);
  void MergeFrom(const ArenaCurrentAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Message.ArenaPlayer players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::Message::ArenaPlayer& players(int index) const;
  inline ::Message::ArenaPlayer* mutable_players(int index);
  inline ::Message::ArenaPlayer* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
      mutable_players();

  // optional int32 stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.ArenaCurrentAdd)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer > players_;
  ::google::protobuf::int32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaCurrentAdd* default_instance_;
};
// -------------------------------------------------------------------

class ArenaCurrentDel : public ::google::protobuf::Message {
 public:
  ArenaCurrentDel();
  virtual ~ArenaCurrentDel();

  ArenaCurrentDel(const ArenaCurrentDel& from);

  inline ArenaCurrentDel& operator=(const ArenaCurrentDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaCurrentDel& default_instance();

  void Swap(ArenaCurrentDel* other);

  // implements Message ----------------------------------------------

  ArenaCurrentDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaCurrentDel& from);
  void MergeFrom(const ArenaCurrentDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.ArenaCurrentDel)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_stage();
  inline void clear_has_stage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaCurrentDel* default_instance_;
};
// -------------------------------------------------------------------

class ArenaCurrentUpdate : public ::google::protobuf::Message {
 public:
  ArenaCurrentUpdate();
  virtual ~ArenaCurrentUpdate();

  ArenaCurrentUpdate(const ArenaCurrentUpdate& from);

  inline ArenaCurrentUpdate& operator=(const ArenaCurrentUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaCurrentUpdate& default_instance();

  void Swap(ArenaCurrentUpdate* other);

  // implements Message ----------------------------------------------

  ArenaCurrentUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaCurrentUpdate& from);
  void MergeFrom(const ArenaCurrentUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stage = 1;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::int32 stage() const;
  inline void set_stage(::google::protobuf::int32 value);

  // optional int64 pid = 2;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 2;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional .Message.ArenaPlayer player = 3;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 3;
  inline const ::Message::ArenaPlayer& player() const;
  inline ::Message::ArenaPlayer* mutable_player();
  inline ::Message::ArenaPlayer* release_player();
  inline void set_allocated_player(::Message::ArenaPlayer* player);

  // @@protoc_insertion_point(class_scope:Message.ArenaCurrentUpdate)
 private:
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_player();
  inline void clear_has_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  ::Message::ArenaPlayer* player_;
  ::google::protobuf::int32 stage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaCurrentUpdate* default_instance_;
};
// -------------------------------------------------------------------

class ArenaCurrentDelAll : public ::google::protobuf::Message {
 public:
  ArenaCurrentDelAll();
  virtual ~ArenaCurrentDelAll();

  ArenaCurrentDelAll(const ArenaCurrentDelAll& from);

  inline ArenaCurrentDelAll& operator=(const ArenaCurrentDelAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaCurrentDelAll& default_instance();

  void Swap(ArenaCurrentDelAll* other);

  // implements Message ----------------------------------------------

  ArenaCurrentDelAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaCurrentDelAll& from);
  void MergeFrom(const ArenaCurrentDelAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Message.ArenaCurrentDelAll)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaCurrentDelAll* default_instance_;
};
// -------------------------------------------------------------------

class ArenaModuleRefresh : public ::google::protobuf::Message {
 public:
  ArenaModuleRefresh();
  virtual ~ArenaModuleRefresh();

  ArenaModuleRefresh(const ArenaModuleRefresh& from);

  inline ArenaModuleRefresh& operator=(const ArenaModuleRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaModuleRefresh& default_instance();

  void Swap(ArenaModuleRefresh* other);

  // implements Message ----------------------------------------------

  ArenaModuleRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaModuleRefresh& from);
  void MergeFrom(const ArenaModuleRefresh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.ArenaModuleRefresh)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaModuleRefresh* default_instance_;
};
// -------------------------------------------------------------------

class ArenaModuleSyncData : public ::google::protobuf::Message {
 public:
  ArenaModuleSyncData();
  virtual ~ArenaModuleSyncData();

  ArenaModuleSyncData(const ArenaModuleSyncData& from);

  inline ArenaModuleSyncData& operator=(const ArenaModuleSyncData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaModuleSyncData& default_instance();

  void Swap(ArenaModuleSyncData* other);

  // implements Message ----------------------------------------------

  ArenaModuleSyncData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaModuleSyncData& from);
  void MergeFrom(const ArenaModuleSyncData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Message.ArenaPlayer player = 1;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline const ::Message::ArenaPlayer& player() const;
  inline ::Message::ArenaPlayer* mutable_player();
  inline ::Message::ArenaPlayer* release_player();
  inline void set_allocated_player(::Message::ArenaPlayer* player);

  // @@protoc_insertion_point(class_scope:Message.ArenaModuleSyncData)
 private:
  inline void set_has_player();
  inline void clear_has_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Message::ArenaPlayer* player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_AssignDesc_MessageArenaSyncData_2eproto();
  friend void protobuf_ShutdownFile_MessageArenaSyncData_2eproto();

  void InitAsDefaultInstance();
  static ArenaModuleSyncData* default_instance_;
};
// ===================================================================


// ===================================================================

// ArenaValue

// optional int32 index = 1;
inline bool ArenaValue::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaValue::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaValue::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaValue::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ArenaValue::index() const {
  return index_;
}
inline void ArenaValue::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int64 value = 2;
inline bool ArenaValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaValue::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 ArenaValue::value() const {
  return value_;
}
inline void ArenaValue::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ArenaSaveData

// optional int32 index = 1;
inline bool ArenaSaveData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaSaveData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaSaveData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaSaveData::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 ArenaSaveData::index() const {
  return index_;
}
inline void ArenaSaveData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int64 value = 2;
inline bool ArenaSaveData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaSaveData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaSaveData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaSaveData::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 ArenaSaveData::value() const {
  return value_;
}
inline void ArenaSaveData::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ArenaSyncData

// repeated .Message.ArenaValue values = 1;
inline int ArenaSyncData::values_size() const {
  return values_.size();
}
inline void ArenaSyncData::clear_values() {
  values_.Clear();
}
inline const ::Message::ArenaValue& ArenaSyncData::values(int index) const {
  return values_.Get(index);
}
inline ::Message::ArenaValue* ArenaSyncData::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::Message::ArenaValue* ArenaSyncData::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaValue >&
ArenaSyncData::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaValue >*
ArenaSyncData::mutable_values() {
  return &values_;
}

// repeated .Message.ArenaPlayer waiting = 2;
inline int ArenaSyncData::waiting_size() const {
  return waiting_.size();
}
inline void ArenaSyncData::clear_waiting() {
  waiting_.Clear();
}
inline const ::Message::ArenaPlayer& ArenaSyncData::waiting(int index) const {
  return waiting_.Get(index);
}
inline ::Message::ArenaPlayer* ArenaSyncData::mutable_waiting(int index) {
  return waiting_.Mutable(index);
}
inline ::Message::ArenaPlayer* ArenaSyncData::add_waiting() {
  return waiting_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
ArenaSyncData::waiting() const {
  return waiting_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
ArenaSyncData::mutable_waiting() {
  return &waiting_;
}

// repeated .Message.ArenaPlayer current = 3;
inline int ArenaSyncData::current_size() const {
  return current_.size();
}
inline void ArenaSyncData::clear_current() {
  current_.Clear();
}
inline const ::Message::ArenaPlayer& ArenaSyncData::current(int index) const {
  return current_.Get(index);
}
inline ::Message::ArenaPlayer* ArenaSyncData::mutable_current(int index) {
  return current_.Mutable(index);
}
inline ::Message::ArenaPlayer* ArenaSyncData::add_current() {
  return current_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
ArenaSyncData::current() const {
  return current_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
ArenaSyncData::mutable_current() {
  return &current_;
}

// -------------------------------------------------------------------

// ArenaWaitingAdd

// repeated .Message.ArenaPlayer players = 1;
inline int ArenaWaitingAdd::players_size() const {
  return players_.size();
}
inline void ArenaWaitingAdd::clear_players() {
  players_.Clear();
}
inline const ::Message::ArenaPlayer& ArenaWaitingAdd::players(int index) const {
  return players_.Get(index);
}
inline ::Message::ArenaPlayer* ArenaWaitingAdd::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::Message::ArenaPlayer* ArenaWaitingAdd::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
ArenaWaitingAdd::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
ArenaWaitingAdd::mutable_players() {
  return &players_;
}

// optional int32 stage = 2;
inline bool ArenaWaitingAdd::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaWaitingAdd::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaWaitingAdd::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaWaitingAdd::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 ArenaWaitingAdd::stage() const {
  return stage_;
}
inline void ArenaWaitingAdd::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// -------------------------------------------------------------------

// ArenaWaitingDel

// optional int64 pid = 1;
inline bool ArenaWaitingDel::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaWaitingDel::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaWaitingDel::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaWaitingDel::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 ArenaWaitingDel::pid() const {
  return pid_;
}
inline void ArenaWaitingDel::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional int32 stage = 2;
inline bool ArenaWaitingDel::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaWaitingDel::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaWaitingDel::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaWaitingDel::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 ArenaWaitingDel::stage() const {
  return stage_;
}
inline void ArenaWaitingDel::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// -------------------------------------------------------------------

// ArenaWaitingDelAll

// -------------------------------------------------------------------

// ArenaCurrentAdd

// repeated .Message.ArenaPlayer players = 1;
inline int ArenaCurrentAdd::players_size() const {
  return players_.size();
}
inline void ArenaCurrentAdd::clear_players() {
  players_.Clear();
}
inline const ::Message::ArenaPlayer& ArenaCurrentAdd::players(int index) const {
  return players_.Get(index);
}
inline ::Message::ArenaPlayer* ArenaCurrentAdd::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::Message::ArenaPlayer* ArenaCurrentAdd::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >&
ArenaCurrentAdd::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::ArenaPlayer >*
ArenaCurrentAdd::mutable_players() {
  return &players_;
}

// optional int32 stage = 2;
inline bool ArenaCurrentAdd::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaCurrentAdd::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaCurrentAdd::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaCurrentAdd::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 ArenaCurrentAdd::stage() const {
  return stage_;
}
inline void ArenaCurrentAdd::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// -------------------------------------------------------------------

// ArenaCurrentDel

// optional int64 pid = 1;
inline bool ArenaCurrentDel::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaCurrentDel::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaCurrentDel::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaCurrentDel::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 ArenaCurrentDel::pid() const {
  return pid_;
}
inline void ArenaCurrentDel::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional int32 stage = 2;
inline bool ArenaCurrentDel::has_stage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaCurrentDel::set_has_stage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaCurrentDel::clear_has_stage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaCurrentDel::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 ArenaCurrentDel::stage() const {
  return stage_;
}
inline void ArenaCurrentDel::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// -------------------------------------------------------------------

// ArenaCurrentUpdate

// optional int32 stage = 1;
inline bool ArenaCurrentUpdate::has_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaCurrentUpdate::set_has_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaCurrentUpdate::clear_has_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaCurrentUpdate::clear_stage() {
  stage_ = 0;
  clear_has_stage();
}
inline ::google::protobuf::int32 ArenaCurrentUpdate::stage() const {
  return stage_;
}
inline void ArenaCurrentUpdate::set_stage(::google::protobuf::int32 value) {
  set_has_stage();
  stage_ = value;
}

// optional int64 pid = 2;
inline bool ArenaCurrentUpdate::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaCurrentUpdate::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaCurrentUpdate::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaCurrentUpdate::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 ArenaCurrentUpdate::pid() const {
  return pid_;
}
inline void ArenaCurrentUpdate::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional .Message.ArenaPlayer player = 3;
inline bool ArenaCurrentUpdate::has_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaCurrentUpdate::set_has_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaCurrentUpdate::clear_has_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaCurrentUpdate::clear_player() {
  if (player_ != NULL) player_->::Message::ArenaPlayer::Clear();
  clear_has_player();
}
inline const ::Message::ArenaPlayer& ArenaCurrentUpdate::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::Message::ArenaPlayer* ArenaCurrentUpdate::mutable_player() {
  set_has_player();
  if (player_ == NULL) player_ = new ::Message::ArenaPlayer;
  return player_;
}
inline ::Message::ArenaPlayer* ArenaCurrentUpdate::release_player() {
  clear_has_player();
  ::Message::ArenaPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline void ArenaCurrentUpdate::set_allocated_player(::Message::ArenaPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
}

// -------------------------------------------------------------------

// ArenaCurrentDelAll

// -------------------------------------------------------------------

// ArenaModuleRefresh

// optional int32 type = 1;
inline bool ArenaModuleRefresh::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaModuleRefresh::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaModuleRefresh::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaModuleRefresh::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ArenaModuleRefresh::type() const {
  return type_;
}
inline void ArenaModuleRefresh::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ArenaModuleSyncData

// optional .Message.ArenaPlayer player = 1;
inline bool ArenaModuleSyncData::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaModuleSyncData::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaModuleSyncData::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaModuleSyncData::clear_player() {
  if (player_ != NULL) player_->::Message::ArenaPlayer::Clear();
  clear_has_player();
}
inline const ::Message::ArenaPlayer& ArenaModuleSyncData::player() const {
  return player_ != NULL ? *player_ : *default_instance_->player_;
}
inline ::Message::ArenaPlayer* ArenaModuleSyncData::mutable_player() {
  set_has_player();
  if (player_ == NULL) player_ = new ::Message::ArenaPlayer;
  return player_;
}
inline ::Message::ArenaPlayer* ArenaModuleSyncData::release_player() {
  clear_has_player();
  ::Message::ArenaPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline void ArenaModuleSyncData::set_allocated_player(::Message::ArenaPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageArenaSyncData_2eproto__INCLUDED
