// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageSwitchPosRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageSwitchPosRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* SwitchPosRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchPosRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageSwitchPosRequest_2eproto() {
  protobuf_AddDesc_MessageSwitchPosRequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageSwitchPosRequest.proto");
  GOOGLE_CHECK(file != NULL);
  SwitchPosRequest_descriptor_ = file->message_type(0);
  static const int SwitchPosRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPosRequest, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPosRequest, curpos_),
  };
  SwitchPosRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SwitchPosRequest_descriptor_,
      SwitchPosRequest::default_instance_,
      SwitchPosRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPosRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPosRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SwitchPosRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageSwitchPosRequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SwitchPosRequest_descriptor_, &SwitchPosRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageSwitchPosRequest_2eproto() {
  delete SwitchPosRequest::default_instance_;
  delete SwitchPosRequest_reflection_;
}

void protobuf_AddDesc_MessageSwitchPosRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035MessageSwitchPosRequest.proto\022\007Message"
    "\"2\n\020SwitchPosRequest\022\016\n\006heroid\030\001 \003(\003\022\016\n\006"
    "curpos\030\002 \003(\005", 92);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageSwitchPosRequest.proto", &protobuf_RegisterTypes);
  SwitchPosRequest::default_instance_ = new SwitchPosRequest();
  SwitchPosRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageSwitchPosRequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageSwitchPosRequest_2eproto {
  StaticDescriptorInitializer_MessageSwitchPosRequest_2eproto() {
    protobuf_AddDesc_MessageSwitchPosRequest_2eproto();
  }
} static_descriptor_initializer_MessageSwitchPosRequest_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SwitchPosRequest::kHeroidFieldNumber;
const int SwitchPosRequest::kCurposFieldNumber;
#endif  // !_MSC_VER

SwitchPosRequest::SwitchPosRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SwitchPosRequest::InitAsDefaultInstance() {
}

SwitchPosRequest::SwitchPosRequest(const SwitchPosRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SwitchPosRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SwitchPosRequest::~SwitchPosRequest() {
  SharedDtor();
}

void SwitchPosRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SwitchPosRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchPosRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchPosRequest_descriptor_;
}

const SwitchPosRequest& SwitchPosRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageSwitchPosRequest_2eproto();
  return *default_instance_;
}

SwitchPosRequest* SwitchPosRequest::default_instance_ = NULL;

SwitchPosRequest* SwitchPosRequest::New() const {
  return new SwitchPosRequest;
}

void SwitchPosRequest::Clear() {
  heroid_.Clear();
  curpos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SwitchPosRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 heroid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_heroid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_heroid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_heroid;
        if (input->ExpectTag(16)) goto parse_curpos;
        break;
      }

      // repeated int32 curpos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curpos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_curpos())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_curpos())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_curpos;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SwitchPosRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 heroid = 1;
  for (int i = 0; i < this->heroid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->heroid(i), output);
  }

  // repeated int32 curpos = 2;
  for (int i = 0; i < this->curpos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->curpos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SwitchPosRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 heroid = 1;
  for (int i = 0; i < this->heroid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->heroid(i), target);
  }

  // repeated int32 curpos = 2;
  for (int i = 0; i < this->curpos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->curpos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SwitchPosRequest::ByteSize() const {
  int total_size = 0;

  // repeated int64 heroid = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->heroid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->heroid(i));
    }
    total_size += 1 * this->heroid_size() + data_size;
  }

  // repeated int32 curpos = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->curpos_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->curpos(i));
    }
    total_size += 1 * this->curpos_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchPosRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SwitchPosRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SwitchPosRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SwitchPosRequest::MergeFrom(const SwitchPosRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroid_.MergeFrom(from.heroid_);
  curpos_.MergeFrom(from.curpos_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SwitchPosRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchPosRequest::CopyFrom(const SwitchPosRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchPosRequest::IsInitialized() const {

  return true;
}

void SwitchPosRequest::Swap(SwitchPosRequest* other) {
  if (other != this) {
    heroid_.Swap(&other->heroid_);
    curpos_.Swap(&other->curpos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SwitchPosRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchPosRequest_descriptor_;
  metadata.reflection = SwitchPosRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
