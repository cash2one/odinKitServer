// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageRandHeroResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageRandHeroResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* RandHeroResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RandHeroResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RandHeroResponse_RandHero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RandHeroResponse_RandHero_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageRandHeroResponse_2eproto() {
  protobuf_AddDesc_MessageRandHeroResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageRandHeroResponse.proto");
  GOOGLE_CHECK(file != NULL);
  RandHeroResponse_descriptor_ = file->message_type(0);
  static const int RandHeroResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse, randheros_),
  };
  RandHeroResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RandHeroResponse_descriptor_,
      RandHeroResponse::default_instance_,
      RandHeroResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RandHeroResponse));
  RandHeroResponse_RandHero_descriptor_ = RandHeroResponse_descriptor_->nested_type(0);
  static const int RandHeroResponse_RandHero_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse_RandHero, herotempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse_RandHero, heroquality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse_RandHero, prestige_),
  };
  RandHeroResponse_RandHero_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RandHeroResponse_RandHero_descriptor_,
      RandHeroResponse_RandHero::default_instance_,
      RandHeroResponse_RandHero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse_RandHero, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RandHeroResponse_RandHero, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RandHeroResponse_RandHero));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageRandHeroResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RandHeroResponse_descriptor_, &RandHeroResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RandHeroResponse_RandHero_descriptor_, &RandHeroResponse_RandHero::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageRandHeroResponse_2eproto() {
  delete RandHeroResponse::default_instance_;
  delete RandHeroResponse_reflection_;
  delete RandHeroResponse_RandHero::default_instance_;
  delete RandHeroResponse_RandHero_reflection_;
}

void protobuf_AddDesc_MessageRandHeroResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035MessageRandHeroResponse.proto\022\007Message"
    "\"\220\001\n\020RandHeroResponse\0225\n\trandheros\030\002 \003(\013"
    "2\".Message.RandHeroResponse.RandHero\032E\n\010"
    "RandHero\022\022\n\nherotempid\030\001 \001(\005\022\023\n\013heroqual"
    "ity\030\002 \001(\005\022\020\n\010prestige\030\003 \001(\005", 187);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageRandHeroResponse.proto", &protobuf_RegisterTypes);
  RandHeroResponse::default_instance_ = new RandHeroResponse();
  RandHeroResponse_RandHero::default_instance_ = new RandHeroResponse_RandHero();
  RandHeroResponse::default_instance_->InitAsDefaultInstance();
  RandHeroResponse_RandHero::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageRandHeroResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageRandHeroResponse_2eproto {
  StaticDescriptorInitializer_MessageRandHeroResponse_2eproto() {
    protobuf_AddDesc_MessageRandHeroResponse_2eproto();
  }
} static_descriptor_initializer_MessageRandHeroResponse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RandHeroResponse_RandHero::kHerotempidFieldNumber;
const int RandHeroResponse_RandHero::kHeroqualityFieldNumber;
const int RandHeroResponse_RandHero::kPrestigeFieldNumber;
#endif  // !_MSC_VER

RandHeroResponse_RandHero::RandHeroResponse_RandHero()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RandHeroResponse_RandHero::InitAsDefaultInstance() {
}

RandHeroResponse_RandHero::RandHeroResponse_RandHero(const RandHeroResponse_RandHero& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RandHeroResponse_RandHero::SharedCtor() {
  _cached_size_ = 0;
  herotempid_ = 0;
  heroquality_ = 0;
  prestige_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RandHeroResponse_RandHero::~RandHeroResponse_RandHero() {
  SharedDtor();
}

void RandHeroResponse_RandHero::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RandHeroResponse_RandHero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RandHeroResponse_RandHero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RandHeroResponse_RandHero_descriptor_;
}

const RandHeroResponse_RandHero& RandHeroResponse_RandHero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageRandHeroResponse_2eproto();
  return *default_instance_;
}

RandHeroResponse_RandHero* RandHeroResponse_RandHero::default_instance_ = NULL;

RandHeroResponse_RandHero* RandHeroResponse_RandHero::New() const {
  return new RandHeroResponse_RandHero;
}

void RandHeroResponse_RandHero::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herotempid_ = 0;
    heroquality_ = 0;
    prestige_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RandHeroResponse_RandHero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 herotempid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &herotempid_)));
          set_has_herotempid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_heroquality;
        break;
      }

      // optional int32 heroquality = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroquality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroquality_)));
          set_has_heroquality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_prestige;
        break;
      }

      // optional int32 prestige = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prestige:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prestige_)));
          set_has_prestige();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RandHeroResponse_RandHero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 herotempid = 1;
  if (has_herotempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->herotempid(), output);
  }

  // optional int32 heroquality = 2;
  if (has_heroquality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->heroquality(), output);
  }

  // optional int32 prestige = 3;
  if (has_prestige()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->prestige(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RandHeroResponse_RandHero::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 herotempid = 1;
  if (has_herotempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->herotempid(), target);
  }

  // optional int32 heroquality = 2;
  if (has_heroquality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->heroquality(), target);
  }

  // optional int32 prestige = 3;
  if (has_prestige()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->prestige(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RandHeroResponse_RandHero::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 herotempid = 1;
    if (has_herotempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->herotempid());
    }

    // optional int32 heroquality = 2;
    if (has_heroquality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroquality());
    }

    // optional int32 prestige = 3;
    if (has_prestige()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prestige());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RandHeroResponse_RandHero::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RandHeroResponse_RandHero* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RandHeroResponse_RandHero*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RandHeroResponse_RandHero::MergeFrom(const RandHeroResponse_RandHero& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herotempid()) {
      set_herotempid(from.herotempid());
    }
    if (from.has_heroquality()) {
      set_heroquality(from.heroquality());
    }
    if (from.has_prestige()) {
      set_prestige(from.prestige());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RandHeroResponse_RandHero::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RandHeroResponse_RandHero::CopyFrom(const RandHeroResponse_RandHero& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RandHeroResponse_RandHero::IsInitialized() const {

  return true;
}

void RandHeroResponse_RandHero::Swap(RandHeroResponse_RandHero* other) {
  if (other != this) {
    std::swap(herotempid_, other->herotempid_);
    std::swap(heroquality_, other->heroquality_);
    std::swap(prestige_, other->prestige_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RandHeroResponse_RandHero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RandHeroResponse_RandHero_descriptor_;
  metadata.reflection = RandHeroResponse_RandHero_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int RandHeroResponse::kRandherosFieldNumber;
#endif  // !_MSC_VER

RandHeroResponse::RandHeroResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RandHeroResponse::InitAsDefaultInstance() {
}

RandHeroResponse::RandHeroResponse(const RandHeroResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RandHeroResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RandHeroResponse::~RandHeroResponse() {
  SharedDtor();
}

void RandHeroResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RandHeroResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RandHeroResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RandHeroResponse_descriptor_;
}

const RandHeroResponse& RandHeroResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageRandHeroResponse_2eproto();
  return *default_instance_;
}

RandHeroResponse* RandHeroResponse::default_instance_ = NULL;

RandHeroResponse* RandHeroResponse::New() const {
  return new RandHeroResponse;
}

void RandHeroResponse::Clear() {
  randheros_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RandHeroResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Message.RandHeroResponse.RandHero randheros = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_randheros:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_randheros()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_randheros;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RandHeroResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .Message.RandHeroResponse.RandHero randheros = 2;
  for (int i = 0; i < this->randheros_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->randheros(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RandHeroResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .Message.RandHeroResponse.RandHero randheros = 2;
  for (int i = 0; i < this->randheros_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->randheros(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RandHeroResponse::ByteSize() const {
  int total_size = 0;

  // repeated .Message.RandHeroResponse.RandHero randheros = 2;
  total_size += 1 * this->randheros_size();
  for (int i = 0; i < this->randheros_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->randheros(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RandHeroResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RandHeroResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RandHeroResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RandHeroResponse::MergeFrom(const RandHeroResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  randheros_.MergeFrom(from.randheros_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RandHeroResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RandHeroResponse::CopyFrom(const RandHeroResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RandHeroResponse::IsInitialized() const {

  return true;
}

void RandHeroResponse::Swap(RandHeroResponse* other) {
  if (other != this) {
    randheros_.Swap(&other->randheros_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RandHeroResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RandHeroResponse_descriptor_;
  metadata.reflection = RandHeroResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
