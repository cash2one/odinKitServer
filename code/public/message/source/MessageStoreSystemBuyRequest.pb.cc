// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageStoreSystemBuyRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageStoreSystemBuyRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* StoreSystemBuyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreSystemBuyRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageStoreSystemBuyRequest_2eproto() {
  protobuf_AddDesc_MessageStoreSystemBuyRequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageStoreSystemBuyRequest.proto");
  GOOGLE_CHECK(file != NULL);
  StoreSystemBuyRequest_descriptor_ = file->message_type(0);
  static const int StoreSystemBuyRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemBuyRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemBuyRequest, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemBuyRequest, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemBuyRequest, nums_),
  };
  StoreSystemBuyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StoreSystemBuyRequest_descriptor_,
      StoreSystemBuyRequest::default_instance_,
      StoreSystemBuyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemBuyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreSystemBuyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StoreSystemBuyRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageStoreSystemBuyRequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StoreSystemBuyRequest_descriptor_, &StoreSystemBuyRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageStoreSystemBuyRequest_2eproto() {
  delete StoreSystemBuyRequest::default_instance_;
  delete StoreSystemBuyRequest_reflection_;
}

void protobuf_AddDesc_MessageStoreSystemBuyRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"MessageStoreSystemBuyRequest.proto\022\007Me"
    "ssage\"Q\n\025StoreSystemBuyRequest\022\014\n\004type\030\001"
    " \001(\005\022\r\n\005group\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\022\014\n\004nu"
    "ms\030\004 \001(\005", 128);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageStoreSystemBuyRequest.proto", &protobuf_RegisterTypes);
  StoreSystemBuyRequest::default_instance_ = new StoreSystemBuyRequest();
  StoreSystemBuyRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageStoreSystemBuyRequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageStoreSystemBuyRequest_2eproto {
  StaticDescriptorInitializer_MessageStoreSystemBuyRequest_2eproto() {
    protobuf_AddDesc_MessageStoreSystemBuyRequest_2eproto();
  }
} static_descriptor_initializer_MessageStoreSystemBuyRequest_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int StoreSystemBuyRequest::kTypeFieldNumber;
const int StoreSystemBuyRequest::kGroupFieldNumber;
const int StoreSystemBuyRequest::kIndexFieldNumber;
const int StoreSystemBuyRequest::kNumsFieldNumber;
#endif  // !_MSC_VER

StoreSystemBuyRequest::StoreSystemBuyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StoreSystemBuyRequest::InitAsDefaultInstance() {
}

StoreSystemBuyRequest::StoreSystemBuyRequest(const StoreSystemBuyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StoreSystemBuyRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  group_ = 0;
  index_ = 0;
  nums_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StoreSystemBuyRequest::~StoreSystemBuyRequest() {
  SharedDtor();
}

void StoreSystemBuyRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreSystemBuyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreSystemBuyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreSystemBuyRequest_descriptor_;
}

const StoreSystemBuyRequest& StoreSystemBuyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageStoreSystemBuyRequest_2eproto();
  return *default_instance_;
}

StoreSystemBuyRequest* StoreSystemBuyRequest::default_instance_ = NULL;

StoreSystemBuyRequest* StoreSystemBuyRequest::New() const {
  return new StoreSystemBuyRequest;
}

void StoreSystemBuyRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    group_ = 0;
    index_ = 0;
    nums_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StoreSystemBuyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_group;
        break;
      }

      // optional int32 group = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &group_)));
          set_has_group();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional int32 index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_nums;
        break;
      }

      // optional int32 nums = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nums:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nums_)));
          set_has_nums();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StoreSystemBuyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 group = 2;
  if (has_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->group(), output);
  }

  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  // optional int32 nums = 4;
  if (has_nums()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nums(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StoreSystemBuyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 group = 2;
  if (has_group()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->group(), target);
  }

  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  // optional int32 nums = 4;
  if (has_nums()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nums(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StoreSystemBuyRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 group = 2;
    if (has_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->group());
    }

    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 nums = 4;
    if (has_nums()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nums());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreSystemBuyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StoreSystemBuyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StoreSystemBuyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StoreSystemBuyRequest::MergeFrom(const StoreSystemBuyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_group()) {
      set_group(from.group());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_nums()) {
      set_nums(from.nums());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StoreSystemBuyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreSystemBuyRequest::CopyFrom(const StoreSystemBuyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreSystemBuyRequest::IsInitialized() const {

  return true;
}

void StoreSystemBuyRequest::Swap(StoreSystemBuyRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(group_, other->group_);
    std::swap(index_, other->index_);
    std::swap(nums_, other->nums_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StoreSystemBuyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreSystemBuyRequest_descriptor_;
  metadata.reflection = StoreSystemBuyRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
