// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessagePlayerCount.proto

#ifndef PROTOBUF_MessagePlayerCount_2eproto__INCLUDED
#define PROTOBUF_MessagePlayerCount_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessagePlayerCount_2eproto();
void protobuf_AssignDesc_MessagePlayerCount_2eproto();
void protobuf_ShutdownFile_MessagePlayerCount_2eproto();

class PlayerCount;

// ===================================================================

class PlayerCount : public ::google::protobuf::Message {
 public:
  PlayerCount();
  virtual ~PlayerCount();

  PlayerCount(const PlayerCount& from);

  inline PlayerCount& operator=(const PlayerCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCount& default_instance();

  void Swap(PlayerCount* other);

  // implements Message ----------------------------------------------

  PlayerCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerCount& from);
  void MergeFrom(const PlayerCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int64 uid() const;
  inline void set_uid(::google::protobuf::int64 value);

  // repeated int64 player = 2;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline ::google::protobuf::int64 player(int index) const;
  inline void set_player(int index, ::google::protobuf::int64 value);
  inline void add_player(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      player() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_player();

  // @@protoc_insertion_point(class_scope:Message.PlayerCount)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 uid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessagePlayerCount_2eproto();
  friend void protobuf_AssignDesc_MessagePlayerCount_2eproto();
  friend void protobuf_ShutdownFile_MessagePlayerCount_2eproto();

  void InitAsDefaultInstance();
  static PlayerCount* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerCount

// optional int64 uid = 1;
inline bool PlayerCount::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCount::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerCount::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerCount::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 PlayerCount::uid() const {
  return uid_;
}
inline void PlayerCount::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
}

// repeated int64 player = 2;
inline int PlayerCount::player_size() const {
  return player_.size();
}
inline void PlayerCount::clear_player() {
  player_.Clear();
}
inline ::google::protobuf::int64 PlayerCount::player(int index) const {
  return player_.Get(index);
}
inline void PlayerCount::set_player(int index, ::google::protobuf::int64 value) {
  player_.Set(index, value);
}
inline void PlayerCount::add_player(::google::protobuf::int64 value) {
  player_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PlayerCount::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PlayerCount::mutable_player() {
  return &player_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessagePlayerCount_2eproto__INCLUDED
