// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageCityParamsSync.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageCityParamsSync.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* CityParamsSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CityParamsSync_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageCityParamsSync_2eproto() {
  protobuf_AddDesc_MessageCityParamsSync_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageCityParamsSync.proto");
  GOOGLE_CHECK(file != NULL);
  CityParamsSync_descriptor_ = file->message_type(0);
  static const int CityParamsSync_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, maxchgcnt1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, maxchgcnt2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, maxchgcnt3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, maxsetcnt1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, maxsetcnt2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, maxsetcnt3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, resetcost1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, resetcost2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, resetcost3_),
  };
  CityParamsSync_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CityParamsSync_descriptor_,
      CityParamsSync::default_instance_,
      CityParamsSync_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityParamsSync, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CityParamsSync));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageCityParamsSync_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CityParamsSync_descriptor_, &CityParamsSync::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageCityParamsSync_2eproto() {
  delete CityParamsSync::default_instance_;
  delete CityParamsSync_reflection_;
}

void protobuf_AddDesc_MessageCityParamsSync_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033MessageCityParamsSync.proto\022\007Message\"\321"
    "\001\n\016CityParamsSync\022\013\n\003pid\030\001 \001(\003\022\022\n\nmaxchg"
    "cnt1\030\002 \001(\005\022\022\n\nmaxchgcnt2\030\003 \001(\005\022\022\n\nmaxchg"
    "cnt3\030\004 \001(\005\022\022\n\nmaxsetcnt1\030\005 \001(\005\022\022\n\nmaxset"
    "cnt2\030\006 \001(\005\022\022\n\nmaxsetcnt3\030\007 \001(\005\022\022\n\nresetc"
    "ost1\030\010 \001(\005\022\022\n\nresetcost2\030\t \001(\005\022\022\n\nresetc"
    "ost3\030\n \001(\005", 250);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageCityParamsSync.proto", &protobuf_RegisterTypes);
  CityParamsSync::default_instance_ = new CityParamsSync();
  CityParamsSync::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageCityParamsSync_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageCityParamsSync_2eproto {
  StaticDescriptorInitializer_MessageCityParamsSync_2eproto() {
    protobuf_AddDesc_MessageCityParamsSync_2eproto();
  }
} static_descriptor_initializer_MessageCityParamsSync_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CityParamsSync::kPidFieldNumber;
const int CityParamsSync::kMaxchgcnt1FieldNumber;
const int CityParamsSync::kMaxchgcnt2FieldNumber;
const int CityParamsSync::kMaxchgcnt3FieldNumber;
const int CityParamsSync::kMaxsetcnt1FieldNumber;
const int CityParamsSync::kMaxsetcnt2FieldNumber;
const int CityParamsSync::kMaxsetcnt3FieldNumber;
const int CityParamsSync::kResetcost1FieldNumber;
const int CityParamsSync::kResetcost2FieldNumber;
const int CityParamsSync::kResetcost3FieldNumber;
#endif  // !_MSC_VER

CityParamsSync::CityParamsSync()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CityParamsSync::InitAsDefaultInstance() {
}

CityParamsSync::CityParamsSync(const CityParamsSync& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CityParamsSync::SharedCtor() {
  _cached_size_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  maxchgcnt1_ = 0;
  maxchgcnt2_ = 0;
  maxchgcnt3_ = 0;
  maxsetcnt1_ = 0;
  maxsetcnt2_ = 0;
  maxsetcnt3_ = 0;
  resetcost1_ = 0;
  resetcost2_ = 0;
  resetcost3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CityParamsSync::~CityParamsSync() {
  SharedDtor();
}

void CityParamsSync::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CityParamsSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CityParamsSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CityParamsSync_descriptor_;
}

const CityParamsSync& CityParamsSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageCityParamsSync_2eproto();
  return *default_instance_;
}

CityParamsSync* CityParamsSync::default_instance_ = NULL;

CityParamsSync* CityParamsSync::New() const {
  return new CityParamsSync;
}

void CityParamsSync::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = GOOGLE_LONGLONG(0);
    maxchgcnt1_ = 0;
    maxchgcnt2_ = 0;
    maxchgcnt3_ = 0;
    maxsetcnt1_ = 0;
    maxsetcnt2_ = 0;
    maxsetcnt3_ = 0;
    resetcost1_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    resetcost2_ = 0;
    resetcost3_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CityParamsSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_maxchgcnt1;
        break;
      }

      // optional int32 maxchgcnt1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxchgcnt1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxchgcnt1_)));
          set_has_maxchgcnt1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_maxchgcnt2;
        break;
      }

      // optional int32 maxchgcnt2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxchgcnt2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxchgcnt2_)));
          set_has_maxchgcnt2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_maxchgcnt3;
        break;
      }

      // optional int32 maxchgcnt3 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxchgcnt3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxchgcnt3_)));
          set_has_maxchgcnt3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_maxsetcnt1;
        break;
      }

      // optional int32 maxsetcnt1 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxsetcnt1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxsetcnt1_)));
          set_has_maxsetcnt1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_maxsetcnt2;
        break;
      }

      // optional int32 maxsetcnt2 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxsetcnt2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxsetcnt2_)));
          set_has_maxsetcnt2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_maxsetcnt3;
        break;
      }

      // optional int32 maxsetcnt3 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxsetcnt3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxsetcnt3_)));
          set_has_maxsetcnt3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_resetcost1;
        break;
      }

      // optional int32 resetcost1 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_resetcost1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resetcost1_)));
          set_has_resetcost1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_resetcost2;
        break;
      }

      // optional int32 resetcost2 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_resetcost2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resetcost2_)));
          set_has_resetcost2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_resetcost3;
        break;
      }

      // optional int32 resetcost3 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_resetcost3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resetcost3_)));
          set_has_resetcost3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CityParamsSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  // optional int32 maxchgcnt1 = 2;
  if (has_maxchgcnt1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxchgcnt1(), output);
  }

  // optional int32 maxchgcnt2 = 3;
  if (has_maxchgcnt2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxchgcnt2(), output);
  }

  // optional int32 maxchgcnt3 = 4;
  if (has_maxchgcnt3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxchgcnt3(), output);
  }

  // optional int32 maxsetcnt1 = 5;
  if (has_maxsetcnt1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxsetcnt1(), output);
  }

  // optional int32 maxsetcnt2 = 6;
  if (has_maxsetcnt2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->maxsetcnt2(), output);
  }

  // optional int32 maxsetcnt3 = 7;
  if (has_maxsetcnt3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->maxsetcnt3(), output);
  }

  // optional int32 resetcost1 = 8;
  if (has_resetcost1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->resetcost1(), output);
  }

  // optional int32 resetcost2 = 9;
  if (has_resetcost2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->resetcost2(), output);
  }

  // optional int32 resetcost3 = 10;
  if (has_resetcost3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->resetcost3(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CityParamsSync::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  // optional int32 maxchgcnt1 = 2;
  if (has_maxchgcnt1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxchgcnt1(), target);
  }

  // optional int32 maxchgcnt2 = 3;
  if (has_maxchgcnt2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxchgcnt2(), target);
  }

  // optional int32 maxchgcnt3 = 4;
  if (has_maxchgcnt3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxchgcnt3(), target);
  }

  // optional int32 maxsetcnt1 = 5;
  if (has_maxsetcnt1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxsetcnt1(), target);
  }

  // optional int32 maxsetcnt2 = 6;
  if (has_maxsetcnt2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->maxsetcnt2(), target);
  }

  // optional int32 maxsetcnt3 = 7;
  if (has_maxsetcnt3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->maxsetcnt3(), target);
  }

  // optional int32 resetcost1 = 8;
  if (has_resetcost1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->resetcost1(), target);
  }

  // optional int32 resetcost2 = 9;
  if (has_resetcost2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->resetcost2(), target);
  }

  // optional int32 resetcost3 = 10;
  if (has_resetcost3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->resetcost3(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CityParamsSync::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }

    // optional int32 maxchgcnt1 = 2;
    if (has_maxchgcnt1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxchgcnt1());
    }

    // optional int32 maxchgcnt2 = 3;
    if (has_maxchgcnt2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxchgcnt2());
    }

    // optional int32 maxchgcnt3 = 4;
    if (has_maxchgcnt3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxchgcnt3());
    }

    // optional int32 maxsetcnt1 = 5;
    if (has_maxsetcnt1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxsetcnt1());
    }

    // optional int32 maxsetcnt2 = 6;
    if (has_maxsetcnt2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxsetcnt2());
    }

    // optional int32 maxsetcnt3 = 7;
    if (has_maxsetcnt3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxsetcnt3());
    }

    // optional int32 resetcost1 = 8;
    if (has_resetcost1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resetcost1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 resetcost2 = 9;
    if (has_resetcost2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resetcost2());
    }

    // optional int32 resetcost3 = 10;
    if (has_resetcost3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->resetcost3());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CityParamsSync::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CityParamsSync* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CityParamsSync*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CityParamsSync::MergeFrom(const CityParamsSync& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_maxchgcnt1()) {
      set_maxchgcnt1(from.maxchgcnt1());
    }
    if (from.has_maxchgcnt2()) {
      set_maxchgcnt2(from.maxchgcnt2());
    }
    if (from.has_maxchgcnt3()) {
      set_maxchgcnt3(from.maxchgcnt3());
    }
    if (from.has_maxsetcnt1()) {
      set_maxsetcnt1(from.maxsetcnt1());
    }
    if (from.has_maxsetcnt2()) {
      set_maxsetcnt2(from.maxsetcnt2());
    }
    if (from.has_maxsetcnt3()) {
      set_maxsetcnt3(from.maxsetcnt3());
    }
    if (from.has_resetcost1()) {
      set_resetcost1(from.resetcost1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_resetcost2()) {
      set_resetcost2(from.resetcost2());
    }
    if (from.has_resetcost3()) {
      set_resetcost3(from.resetcost3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CityParamsSync::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CityParamsSync::CopyFrom(const CityParamsSync& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CityParamsSync::IsInitialized() const {

  return true;
}

void CityParamsSync::Swap(CityParamsSync* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    std::swap(maxchgcnt1_, other->maxchgcnt1_);
    std::swap(maxchgcnt2_, other->maxchgcnt2_);
    std::swap(maxchgcnt3_, other->maxchgcnt3_);
    std::swap(maxsetcnt1_, other->maxsetcnt1_);
    std::swap(maxsetcnt2_, other->maxsetcnt2_);
    std::swap(maxsetcnt3_, other->maxsetcnt3_);
    std::swap(resetcost1_, other->resetcost1_);
    std::swap(resetcost2_, other->resetcost2_);
    std::swap(resetcost3_, other->resetcost3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CityParamsSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CityParamsSync_descriptor_;
  metadata.reflection = CityParamsSync_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
