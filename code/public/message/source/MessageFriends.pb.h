// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageFriends.proto

#ifndef PROTOBUF_MessageFriends_2eproto__INCLUDED
#define PROTOBUF_MessageFriends_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "MessageFriend.pb.h"
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageFriends_2eproto();
void protobuf_AssignDesc_MessageFriends_2eproto();
void protobuf_ShutdownFile_MessageFriends_2eproto();

class FriendsAddRequest;
class FriendsAddResponse;
class FriendsDelRequest;
class FriendsDelResponse;
class FriendsAddNotify;
class FriendsStateNotify;
class FriendsRequestNotify;
class FriendsDelRequestRequest;

// ===================================================================

class FriendsAddRequest : public ::google::protobuf::Message {
 public:
  FriendsAddRequest();
  virtual ~FriendsAddRequest();

  FriendsAddRequest(const FriendsAddRequest& from);

  inline FriendsAddRequest& operator=(const FriendsAddRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsAddRequest& default_instance();

  void Swap(FriendsAddRequest* other);

  // implements Message ----------------------------------------------

  FriendsAddRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsAddRequest& from);
  void MergeFrom(const FriendsAddRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 src_pid = 1;
  inline bool has_src_pid() const;
  inline void clear_src_pid();
  static const int kSrcPidFieldNumber = 1;
  inline ::google::protobuf::int64 src_pid() const;
  inline void set_src_pid(::google::protobuf::int64 value);

  // optional int64 dst_pid = 2;
  inline bool has_dst_pid() const;
  inline void clear_dst_pid();
  static const int kDstPidFieldNumber = 2;
  inline ::google::protobuf::int64 dst_pid() const;
  inline void set_dst_pid(::google::protobuf::int64 value);

  // optional string dst_name = 3;
  inline bool has_dst_name() const;
  inline void clear_dst_name();
  static const int kDstNameFieldNumber = 3;
  inline const ::std::string& dst_name() const;
  inline void set_dst_name(const ::std::string& value);
  inline void set_dst_name(const char* value);
  inline void set_dst_name(const char* value, size_t size);
  inline ::std::string* mutable_dst_name();
  inline ::std::string* release_dst_name();
  inline void set_allocated_dst_name(::std::string* dst_name);

  // @@protoc_insertion_point(class_scope:Message.FriendsAddRequest)
 private:
  inline void set_has_src_pid();
  inline void clear_has_src_pid();
  inline void set_has_dst_pid();
  inline void clear_has_dst_pid();
  inline void set_has_dst_name();
  inline void clear_has_dst_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_pid_;
  ::google::protobuf::int64 dst_pid_;
  ::std::string* dst_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsAddRequest* default_instance_;
};
// -------------------------------------------------------------------

class FriendsAddResponse : public ::google::protobuf::Message {
 public:
  FriendsAddResponse();
  virtual ~FriendsAddResponse();

  FriendsAddResponse(const FriendsAddResponse& from);

  inline FriendsAddResponse& operator=(const FriendsAddResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsAddResponse& default_instance();

  void Swap(FriendsAddResponse* other);

  // implements Message ----------------------------------------------

  FriendsAddResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsAddResponse& from);
  void MergeFrom(const FriendsAddResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .Message.Friend friend = 2;
  inline bool has_friend_() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 2;
  inline const ::Message::Friend& friend_() const;
  inline ::Message::Friend* mutable_friend_();
  inline ::Message::Friend* release_friend_();
  inline void set_allocated_friend_(::Message::Friend* friend_);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.FriendsAddResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_friend_();
  inline void clear_has_friend_();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Message::Friend* friend__;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsAddResponse* default_instance_;
};
// -------------------------------------------------------------------

class FriendsDelRequest : public ::google::protobuf::Message {
 public:
  FriendsDelRequest();
  virtual ~FriendsDelRequest();

  FriendsDelRequest(const FriendsDelRequest& from);

  inline FriendsDelRequest& operator=(const FriendsDelRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsDelRequest& default_instance();

  void Swap(FriendsDelRequest* other);

  // implements Message ----------------------------------------------

  FriendsDelRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsDelRequest& from);
  void MergeFrom(const FriendsDelRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 src_pid = 1;
  inline bool has_src_pid() const;
  inline void clear_src_pid();
  static const int kSrcPidFieldNumber = 1;
  inline ::google::protobuf::int64 src_pid() const;
  inline void set_src_pid(::google::protobuf::int64 value);

  // optional int64 dst_pid = 2;
  inline bool has_dst_pid() const;
  inline void clear_dst_pid();
  static const int kDstPidFieldNumber = 2;
  inline ::google::protobuf::int64 dst_pid() const;
  inline void set_dst_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.FriendsDelRequest)
 private:
  inline void set_has_src_pid();
  inline void clear_has_src_pid();
  inline void set_has_dst_pid();
  inline void clear_has_dst_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 src_pid_;
  ::google::protobuf::int64 dst_pid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsDelRequest* default_instance_;
};
// -------------------------------------------------------------------

class FriendsDelResponse : public ::google::protobuf::Message {
 public:
  FriendsDelResponse();
  virtual ~FriendsDelResponse();

  FriendsDelResponse(const FriendsDelResponse& from);

  inline FriendsDelResponse& operator=(const FriendsDelResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsDelResponse& default_instance();

  void Swap(FriendsDelResponse* other);

  // implements Message ----------------------------------------------

  FriendsDelResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsDelResponse& from);
  void MergeFrom(const FriendsDelResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int64 dst_pid = 2;
  inline bool has_dst_pid() const;
  inline void clear_dst_pid();
  static const int kDstPidFieldNumber = 2;
  inline ::google::protobuf::int64 dst_pid() const;
  inline void set_dst_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.FriendsDelResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_dst_pid();
  inline void clear_has_dst_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 dst_pid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsDelResponse* default_instance_;
};
// -------------------------------------------------------------------

class FriendsAddNotify : public ::google::protobuf::Message {
 public:
  FriendsAddNotify();
  virtual ~FriendsAddNotify();

  FriendsAddNotify(const FriendsAddNotify& from);

  inline FriendsAddNotify& operator=(const FriendsAddNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsAddNotify& default_instance();

  void Swap(FriendsAddNotify* other);

  // implements Message ----------------------------------------------

  FriendsAddNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsAddNotify& from);
  void MergeFrom(const FriendsAddNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Message.Friend friend = 1;
  inline bool has_friend_() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 1;
  inline const ::Message::Friend& friend_() const;
  inline ::Message::Friend* mutable_friend_();
  inline ::Message::Friend* release_friend_();
  inline void set_allocated_friend_(::Message::Friend* friend_);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.FriendsAddNotify)
 private:
  inline void set_has_friend_();
  inline void clear_has_friend_();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Message::Friend* friend__;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsAddNotify* default_instance_;
};
// -------------------------------------------------------------------

class FriendsStateNotify : public ::google::protobuf::Message {
 public:
  FriendsStateNotify();
  virtual ~FriendsStateNotify();

  FriendsStateNotify(const FriendsStateNotify& from);

  inline FriendsStateNotify& operator=(const FriendsStateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsStateNotify& default_instance();

  void Swap(FriendsStateNotify* other);

  // implements Message ----------------------------------------------

  FriendsStateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsStateNotify& from);
  void MergeFrom(const FriendsStateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.FriendsStateNotify)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsStateNotify* default_instance_;
};
// -------------------------------------------------------------------

class FriendsRequestNotify : public ::google::protobuf::Message {
 public:
  FriendsRequestNotify();
  virtual ~FriendsRequestNotify();

  FriendsRequestNotify(const FriendsRequestNotify& from);

  inline FriendsRequestNotify& operator=(const FriendsRequestNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsRequestNotify& default_instance();

  void Swap(FriendsRequestNotify* other);

  // implements Message ----------------------------------------------

  FriendsRequestNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsRequestNotify& from);
  void MergeFrom(const FriendsRequestNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 fighter = 3;
  inline bool has_fighter() const;
  inline void clear_fighter();
  static const int kFighterFieldNumber = 3;
  inline ::google::protobuf::int32 fighter() const;
  inline void set_fighter(::google::protobuf::int32 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Message.FriendsRequestNotify)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fighter();
  inline void clear_has_fighter();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 fighter_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsRequestNotify* default_instance_;
};
// -------------------------------------------------------------------

class FriendsDelRequestRequest : public ::google::protobuf::Message {
 public:
  FriendsDelRequestRequest();
  virtual ~FriendsDelRequestRequest();

  FriendsDelRequestRequest(const FriendsDelRequestRequest& from);

  inline FriendsDelRequestRequest& operator=(const FriendsDelRequestRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsDelRequestRequest& default_instance();

  void Swap(FriendsDelRequestRequest* other);

  // implements Message ----------------------------------------------

  FriendsDelRequestRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsDelRequestRequest& from);
  void MergeFrom(const FriendsDelRequestRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Message.FriendsDelRequestRequest)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 pid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageFriends_2eproto();
  friend void protobuf_AssignDesc_MessageFriends_2eproto();
  friend void protobuf_ShutdownFile_MessageFriends_2eproto();

  void InitAsDefaultInstance();
  static FriendsDelRequestRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// FriendsAddRequest

// optional int64 src_pid = 1;
inline bool FriendsAddRequest::has_src_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsAddRequest::set_has_src_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsAddRequest::clear_has_src_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsAddRequest::clear_src_pid() {
  src_pid_ = GOOGLE_LONGLONG(0);
  clear_has_src_pid();
}
inline ::google::protobuf::int64 FriendsAddRequest::src_pid() const {
  return src_pid_;
}
inline void FriendsAddRequest::set_src_pid(::google::protobuf::int64 value) {
  set_has_src_pid();
  src_pid_ = value;
}

// optional int64 dst_pid = 2;
inline bool FriendsAddRequest::has_dst_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsAddRequest::set_has_dst_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsAddRequest::clear_has_dst_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsAddRequest::clear_dst_pid() {
  dst_pid_ = GOOGLE_LONGLONG(0);
  clear_has_dst_pid();
}
inline ::google::protobuf::int64 FriendsAddRequest::dst_pid() const {
  return dst_pid_;
}
inline void FriendsAddRequest::set_dst_pid(::google::protobuf::int64 value) {
  set_has_dst_pid();
  dst_pid_ = value;
}

// optional string dst_name = 3;
inline bool FriendsAddRequest::has_dst_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendsAddRequest::set_has_dst_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendsAddRequest::clear_has_dst_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendsAddRequest::clear_dst_name() {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    dst_name_->clear();
  }
  clear_has_dst_name();
}
inline const ::std::string& FriendsAddRequest::dst_name() const {
  return *dst_name_;
}
inline void FriendsAddRequest::set_dst_name(const ::std::string& value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void FriendsAddRequest::set_dst_name(const char* value) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(value);
}
inline void FriendsAddRequest::set_dst_name(const char* value, size_t size) {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  dst_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendsAddRequest::mutable_dst_name() {
  set_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    dst_name_ = new ::std::string;
  }
  return dst_name_;
}
inline ::std::string* FriendsAddRequest::release_dst_name() {
  clear_has_dst_name();
  if (dst_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dst_name_;
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendsAddRequest::set_allocated_dst_name(::std::string* dst_name) {
  if (dst_name_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_name_;
  }
  if (dst_name) {
    set_has_dst_name();
    dst_name_ = dst_name;
  } else {
    clear_has_dst_name();
    dst_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FriendsAddResponse

// optional int32 result = 1;
inline bool FriendsAddResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsAddResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsAddResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsAddResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 FriendsAddResponse::result() const {
  return result_;
}
inline void FriendsAddResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .Message.Friend friend = 2;
inline bool FriendsAddResponse::has_friend_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsAddResponse::set_has_friend_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsAddResponse::clear_has_friend_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsAddResponse::clear_friend_() {
  if (friend__ != NULL) friend__->::Message::Friend::Clear();
  clear_has_friend_();
}
inline const ::Message::Friend& FriendsAddResponse::friend_() const {
  return friend__ != NULL ? *friend__ : *default_instance_->friend__;
}
inline ::Message::Friend* FriendsAddResponse::mutable_friend_() {
  set_has_friend_();
  if (friend__ == NULL) friend__ = new ::Message::Friend;
  return friend__;
}
inline ::Message::Friend* FriendsAddResponse::release_friend_() {
  clear_has_friend_();
  ::Message::Friend* temp = friend__;
  friend__ = NULL;
  return temp;
}
inline void FriendsAddResponse::set_allocated_friend_(::Message::Friend* friend_) {
  delete friend__;
  friend__ = friend_;
  if (friend_) {
    set_has_friend_();
  } else {
    clear_has_friend_();
  }
}

// optional int32 state = 3;
inline bool FriendsAddResponse::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendsAddResponse::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendsAddResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendsAddResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 FriendsAddResponse::state() const {
  return state_;
}
inline void FriendsAddResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// FriendsDelRequest

// optional int64 src_pid = 1;
inline bool FriendsDelRequest::has_src_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsDelRequest::set_has_src_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsDelRequest::clear_has_src_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsDelRequest::clear_src_pid() {
  src_pid_ = GOOGLE_LONGLONG(0);
  clear_has_src_pid();
}
inline ::google::protobuf::int64 FriendsDelRequest::src_pid() const {
  return src_pid_;
}
inline void FriendsDelRequest::set_src_pid(::google::protobuf::int64 value) {
  set_has_src_pid();
  src_pid_ = value;
}

// optional int64 dst_pid = 2;
inline bool FriendsDelRequest::has_dst_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsDelRequest::set_has_dst_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsDelRequest::clear_has_dst_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsDelRequest::clear_dst_pid() {
  dst_pid_ = GOOGLE_LONGLONG(0);
  clear_has_dst_pid();
}
inline ::google::protobuf::int64 FriendsDelRequest::dst_pid() const {
  return dst_pid_;
}
inline void FriendsDelRequest::set_dst_pid(::google::protobuf::int64 value) {
  set_has_dst_pid();
  dst_pid_ = value;
}

// -------------------------------------------------------------------

// FriendsDelResponse

// optional int32 result = 1;
inline bool FriendsDelResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsDelResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsDelResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsDelResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 FriendsDelResponse::result() const {
  return result_;
}
inline void FriendsDelResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int64 dst_pid = 2;
inline bool FriendsDelResponse::has_dst_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsDelResponse::set_has_dst_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsDelResponse::clear_has_dst_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsDelResponse::clear_dst_pid() {
  dst_pid_ = GOOGLE_LONGLONG(0);
  clear_has_dst_pid();
}
inline ::google::protobuf::int64 FriendsDelResponse::dst_pid() const {
  return dst_pid_;
}
inline void FriendsDelResponse::set_dst_pid(::google::protobuf::int64 value) {
  set_has_dst_pid();
  dst_pid_ = value;
}

// -------------------------------------------------------------------

// FriendsAddNotify

// optional .Message.Friend friend = 1;
inline bool FriendsAddNotify::has_friend_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsAddNotify::set_has_friend_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsAddNotify::clear_has_friend_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsAddNotify::clear_friend_() {
  if (friend__ != NULL) friend__->::Message::Friend::Clear();
  clear_has_friend_();
}
inline const ::Message::Friend& FriendsAddNotify::friend_() const {
  return friend__ != NULL ? *friend__ : *default_instance_->friend__;
}
inline ::Message::Friend* FriendsAddNotify::mutable_friend_() {
  set_has_friend_();
  if (friend__ == NULL) friend__ = new ::Message::Friend;
  return friend__;
}
inline ::Message::Friend* FriendsAddNotify::release_friend_() {
  clear_has_friend_();
  ::Message::Friend* temp = friend__;
  friend__ = NULL;
  return temp;
}
inline void FriendsAddNotify::set_allocated_friend_(::Message::Friend* friend_) {
  delete friend__;
  friend__ = friend_;
  if (friend_) {
    set_has_friend_();
  } else {
    clear_has_friend_();
  }
}

// optional int32 state = 2;
inline bool FriendsAddNotify::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsAddNotify::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsAddNotify::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsAddNotify::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 FriendsAddNotify::state() const {
  return state_;
}
inline void FriendsAddNotify::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// FriendsStateNotify

// optional int64 pid = 1;
inline bool FriendsStateNotify::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsStateNotify::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsStateNotify::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsStateNotify::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 FriendsStateNotify::pid() const {
  return pid_;
}
inline void FriendsStateNotify::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional int32 state = 2;
inline bool FriendsStateNotify::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsStateNotify::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsStateNotify::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsStateNotify::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 FriendsStateNotify::state() const {
  return state_;
}
inline void FriendsStateNotify::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// FriendsRequestNotify

// optional int64 pid = 1;
inline bool FriendsRequestNotify::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsRequestNotify::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsRequestNotify::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsRequestNotify::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 FriendsRequestNotify::pid() const {
  return pid_;
}
inline void FriendsRequestNotify::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}

// optional int32 level = 2;
inline bool FriendsRequestNotify::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendsRequestNotify::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendsRequestNotify::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendsRequestNotify::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FriendsRequestNotify::level() const {
  return level_;
}
inline void FriendsRequestNotify::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 fighter = 3;
inline bool FriendsRequestNotify::has_fighter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendsRequestNotify::set_has_fighter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendsRequestNotify::clear_has_fighter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendsRequestNotify::clear_fighter() {
  fighter_ = 0;
  clear_has_fighter();
}
inline ::google::protobuf::int32 FriendsRequestNotify::fighter() const {
  return fighter_;
}
inline void FriendsRequestNotify::set_fighter(::google::protobuf::int32 value) {
  set_has_fighter();
  fighter_ = value;
}

// optional string name = 4;
inline bool FriendsRequestNotify::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendsRequestNotify::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendsRequestNotify::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendsRequestNotify::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FriendsRequestNotify::name() const {
  return *name_;
}
inline void FriendsRequestNotify::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendsRequestNotify::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendsRequestNotify::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendsRequestNotify::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* FriendsRequestNotify::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendsRequestNotify::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FriendsDelRequestRequest

// optional int64 pid = 1;
inline bool FriendsDelRequestRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendsDelRequestRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendsDelRequestRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendsDelRequestRequest::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 FriendsDelRequestRequest::pid() const {
  return pid_;
}
inline void FriendsDelRequestRequest::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageFriends_2eproto__INCLUDED
