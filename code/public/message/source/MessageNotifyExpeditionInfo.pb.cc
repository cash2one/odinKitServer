// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageNotifyExpeditionInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageNotifyExpeditionInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* NotifyExpeditionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyExpeditionInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageNotifyExpeditionInfo_2eproto() {
  protobuf_AddDesc_MessageNotifyExpeditionInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageNotifyExpeditionInfo.proto");
  GOOGLE_CHECK(file != NULL);
  NotifyExpeditionInfo_descriptor_ = file->message_type(0);
  static const int NotifyExpeditionInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionInfo, mode1curstage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionInfo, mode2curstage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionInfo, teamanger_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionInfo, mode2chlgcnt_),
  };
  NotifyExpeditionInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyExpeditionInfo_descriptor_,
      NotifyExpeditionInfo::default_instance_,
      NotifyExpeditionInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyExpeditionInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyExpeditionInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageNotifyExpeditionInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyExpeditionInfo_descriptor_, &NotifyExpeditionInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageNotifyExpeditionInfo_2eproto() {
  delete NotifyExpeditionInfo::default_instance_;
  delete NotifyExpeditionInfo_reflection_;
}

void protobuf_AddDesc_MessageNotifyExpeditionInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!MessageNotifyExpeditionInfo.proto\022\007Mes"
    "sage\"m\n\024NotifyExpeditionInfo\022\025\n\rmode1cur"
    "stage\030\001 \001(\005\022\025\n\rmode2curstage\030\002 \001(\005\022\021\n\tte"
    "amanger\030\003 \001(\005\022\024\n\014mode2chlgcnt\030\004 \001(\005", 155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageNotifyExpeditionInfo.proto", &protobuf_RegisterTypes);
  NotifyExpeditionInfo::default_instance_ = new NotifyExpeditionInfo();
  NotifyExpeditionInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageNotifyExpeditionInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageNotifyExpeditionInfo_2eproto {
  StaticDescriptorInitializer_MessageNotifyExpeditionInfo_2eproto() {
    protobuf_AddDesc_MessageNotifyExpeditionInfo_2eproto();
  }
} static_descriptor_initializer_MessageNotifyExpeditionInfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int NotifyExpeditionInfo::kMode1CurstageFieldNumber;
const int NotifyExpeditionInfo::kMode2CurstageFieldNumber;
const int NotifyExpeditionInfo::kTeamangerFieldNumber;
const int NotifyExpeditionInfo::kMode2ChlgcntFieldNumber;
#endif  // !_MSC_VER

NotifyExpeditionInfo::NotifyExpeditionInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NotifyExpeditionInfo::InitAsDefaultInstance() {
}

NotifyExpeditionInfo::NotifyExpeditionInfo(const NotifyExpeditionInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NotifyExpeditionInfo::SharedCtor() {
  _cached_size_ = 0;
  mode1curstage_ = 0;
  mode2curstage_ = 0;
  teamanger_ = 0;
  mode2chlgcnt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyExpeditionInfo::~NotifyExpeditionInfo() {
  SharedDtor();
}

void NotifyExpeditionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyExpeditionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyExpeditionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyExpeditionInfo_descriptor_;
}

const NotifyExpeditionInfo& NotifyExpeditionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageNotifyExpeditionInfo_2eproto();
  return *default_instance_;
}

NotifyExpeditionInfo* NotifyExpeditionInfo::default_instance_ = NULL;

NotifyExpeditionInfo* NotifyExpeditionInfo::New() const {
  return new NotifyExpeditionInfo;
}

void NotifyExpeditionInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mode1curstage_ = 0;
    mode2curstage_ = 0;
    teamanger_ = 0;
    mode2chlgcnt_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyExpeditionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mode1curstage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode1curstage_)));
          set_has_mode1curstage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mode2curstage;
        break;
      }

      // optional int32 mode2curstage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mode2curstage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode2curstage_)));
          set_has_mode2curstage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_teamanger;
        break;
      }

      // optional int32 teamanger = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_teamanger:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &teamanger_)));
          set_has_teamanger();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mode2chlgcnt;
        break;
      }

      // optional int32 mode2chlgcnt = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mode2chlgcnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode2chlgcnt_)));
          set_has_mode2chlgcnt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NotifyExpeditionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mode1curstage = 1;
  if (has_mode1curstage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode1curstage(), output);
  }

  // optional int32 mode2curstage = 2;
  if (has_mode2curstage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode2curstage(), output);
  }

  // optional int32 teamanger = 3;
  if (has_teamanger()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->teamanger(), output);
  }

  // optional int32 mode2chlgcnt = 4;
  if (has_mode2chlgcnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mode2chlgcnt(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NotifyExpeditionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mode1curstage = 1;
  if (has_mode1curstage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode1curstage(), target);
  }

  // optional int32 mode2curstage = 2;
  if (has_mode2curstage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode2curstage(), target);
  }

  // optional int32 teamanger = 3;
  if (has_teamanger()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->teamanger(), target);
  }

  // optional int32 mode2chlgcnt = 4;
  if (has_mode2chlgcnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mode2chlgcnt(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NotifyExpeditionInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mode1curstage = 1;
    if (has_mode1curstage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode1curstage());
    }

    // optional int32 mode2curstage = 2;
    if (has_mode2curstage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode2curstage());
    }

    // optional int32 teamanger = 3;
    if (has_teamanger()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->teamanger());
    }

    // optional int32 mode2chlgcnt = 4;
    if (has_mode2chlgcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode2chlgcnt());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyExpeditionInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyExpeditionInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyExpeditionInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyExpeditionInfo::MergeFrom(const NotifyExpeditionInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mode1curstage()) {
      set_mode1curstage(from.mode1curstage());
    }
    if (from.has_mode2curstage()) {
      set_mode2curstage(from.mode2curstage());
    }
    if (from.has_teamanger()) {
      set_teamanger(from.teamanger());
    }
    if (from.has_mode2chlgcnt()) {
      set_mode2chlgcnt(from.mode2chlgcnt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyExpeditionInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyExpeditionInfo::CopyFrom(const NotifyExpeditionInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyExpeditionInfo::IsInitialized() const {

  return true;
}

void NotifyExpeditionInfo::Swap(NotifyExpeditionInfo* other) {
  if (other != this) {
    std::swap(mode1curstage_, other->mode1curstage_);
    std::swap(mode2curstage_, other->mode2curstage_);
    std::swap(teamanger_, other->teamanger_);
    std::swap(mode2chlgcnt_, other->mode2chlgcnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyExpeditionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyExpeditionInfo_descriptor_;
  metadata.reflection = NotifyExpeditionInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
