// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageCombatReport.proto

#ifndef PROTOBUF_MessageCombatReport_2eproto__INCLUDED
#define PROTOBUF_MessageCombatReport_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageCombatReport_2eproto();
void protobuf_AssignDesc_MessageCombatReport_2eproto();
void protobuf_ShutdownFile_MessageCombatReport_2eproto();

class CombatReport;
class CombatReport_Action;
class CombatReport_Action_CheckAttr;

// ===================================================================

class CombatReport_Action_CheckAttr : public ::google::protobuf::Message {
 public:
  CombatReport_Action_CheckAttr();
  virtual ~CombatReport_Action_CheckAttr();

  CombatReport_Action_CheckAttr(const CombatReport_Action_CheckAttr& from);

  inline CombatReport_Action_CheckAttr& operator=(const CombatReport_Action_CheckAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatReport_Action_CheckAttr& default_instance();

  void Swap(CombatReport_Action_CheckAttr* other);

  // implements Message ----------------------------------------------

  CombatReport_Action_CheckAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatReport_Action_CheckAttr& from);
  void MergeFrom(const CombatReport_Action_CheckAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);

  // optional int32 attr = 2;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 2;
  inline ::google::protobuf::int32 attr() const;
  inline void set_attr(::google::protobuf::int32 value);

  // optional int32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.CombatReport.Action.CheckAttr)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_attr();
  inline void clear_has_attr();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 attr_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_MessageCombatReport_2eproto();
  friend void protobuf_AssignDesc_MessageCombatReport_2eproto();
  friend void protobuf_ShutdownFile_MessageCombatReport_2eproto();

  void InitAsDefaultInstance();
  static CombatReport_Action_CheckAttr* default_instance_;
};
// -------------------------------------------------------------------

class CombatReport_Action : public ::google::protobuf::Message {
 public:
  CombatReport_Action();
  virtual ~CombatReport_Action();

  CombatReport_Action(const CombatReport_Action& from);

  inline CombatReport_Action& operator=(const CombatReport_Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatReport_Action& default_instance();

  void Swap(CombatReport_Action* other);

  // implements Message ----------------------------------------------

  CombatReport_Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatReport_Action& from);
  void MergeFrom(const CombatReport_Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CombatReport_Action_CheckAttr CheckAttr;

  // accessors -------------------------------------------------------

  // optional int32 round = 1;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);

  // optional int32 attackerindex = 2;
  inline bool has_attackerindex() const;
  inline void clear_attackerindex();
  static const int kAttackerindexFieldNumber = 2;
  inline ::google::protobuf::int32 attackerindex() const;
  inline void set_attackerindex(::google::protobuf::int32 value);

  // optional int32 skill = 3;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline ::google::protobuf::int32 skill() const;
  inline void set_skill(::google::protobuf::int32 value);

  // repeated int32 defenderindex = 4;
  inline int defenderindex_size() const;
  inline void clear_defenderindex();
  static const int kDefenderindexFieldNumber = 4;
  inline ::google::protobuf::int32 defenderindex(int index) const;
  inline void set_defenderindex(int index, ::google::protobuf::int32 value);
  inline void add_defenderindex(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      defenderindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_defenderindex();

  // repeated int32 damage = 5;
  inline int damage_size() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 5;
  inline ::google::protobuf::int32 damage(int index) const;
  inline void set_damage(int index, ::google::protobuf::int32 value);
  inline void add_damage(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      damage() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_damage();

  // repeated int32 flag = 6;
  inline int flag_size() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 6;
  inline ::google::protobuf::int32 flag(int index) const;
  inline void set_flag(int index, ::google::protobuf::int32 value);
  inline void add_flag(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flag();

  // repeated int32 counter = 7;
  inline int counter_size() const;
  inline void clear_counter();
  static const int kCounterFieldNumber = 7;
  inline ::google::protobuf::int32 counter(int index) const;
  inline void set_counter(int index, ::google::protobuf::int32 value);
  inline void add_counter(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      counter() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_counter();

  // repeated int32 buff = 8;
  inline int buff_size() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 8;
  inline ::google::protobuf::int32 buff(int index) const;
  inline void set_buff(int index, ::google::protobuf::int32 value);
  inline void add_buff(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buff();

  // optional int32 combo = 9;
  inline bool has_combo() const;
  inline void clear_combo();
  static const int kComboFieldNumber = 9;
  inline ::google::protobuf::int32 combo() const;
  inline void set_combo(::google::protobuf::int32 value);

  // repeated .Message.CombatReport.Action.CheckAttr checkattr = 10;
  inline int checkattr_size() const;
  inline void clear_checkattr();
  static const int kCheckattrFieldNumber = 10;
  inline const ::Message::CombatReport_Action_CheckAttr& checkattr(int index) const;
  inline ::Message::CombatReport_Action_CheckAttr* mutable_checkattr(int index);
  inline ::Message::CombatReport_Action_CheckAttr* add_checkattr();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action_CheckAttr >&
      checkattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action_CheckAttr >*
      mutable_checkattr();

  // @@protoc_insertion_point(class_scope:Message.CombatReport.Action)
 private:
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_attackerindex();
  inline void clear_has_attackerindex();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_combo();
  inline void clear_has_combo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 round_;
  ::google::protobuf::int32 attackerindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > defenderindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > damage_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flag_;
  ::google::protobuf::int32 skill_;
  ::google::protobuf::int32 combo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > counter_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buff_;
  ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action_CheckAttr > checkattr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_MessageCombatReport_2eproto();
  friend void protobuf_AssignDesc_MessageCombatReport_2eproto();
  friend void protobuf_ShutdownFile_MessageCombatReport_2eproto();

  void InitAsDefaultInstance();
  static CombatReport_Action* default_instance_;
};
// -------------------------------------------------------------------

class CombatReport : public ::google::protobuf::Message {
 public:
  CombatReport();
  virtual ~CombatReport();

  CombatReport(const CombatReport& from);

  inline CombatReport& operator=(const CombatReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatReport& default_instance();

  void Swap(CombatReport* other);

  // implements Message ----------------------------------------------

  CombatReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CombatReport& from);
  void MergeFrom(const CombatReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CombatReport_Action Action;

  // accessors -------------------------------------------------------

  // repeated .Message.CombatReport.Action action = 1;
  inline int action_size() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline const ::Message::CombatReport_Action& action(int index) const;
  inline ::Message::CombatReport_Action* mutable_action(int index);
  inline ::Message::CombatReport_Action* add_action();
  inline const ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action >&
      action() const;
  inline ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action >*
      mutable_action();

  // @@protoc_insertion_point(class_scope:Message.CombatReport)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action > action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_MessageCombatReport_2eproto();
  friend void protobuf_AssignDesc_MessageCombatReport_2eproto();
  friend void protobuf_ShutdownFile_MessageCombatReport_2eproto();

  void InitAsDefaultInstance();
  static CombatReport* default_instance_;
};
// ===================================================================


// ===================================================================

// CombatReport_Action_CheckAttr

// optional int32 idx = 1;
inline bool CombatReport_Action_CheckAttr::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatReport_Action_CheckAttr::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatReport_Action_CheckAttr::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatReport_Action_CheckAttr::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 CombatReport_Action_CheckAttr::idx() const {
  return idx_;
}
inline void CombatReport_Action_CheckAttr::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
}

// optional int32 attr = 2;
inline bool CombatReport_Action_CheckAttr::has_attr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatReport_Action_CheckAttr::set_has_attr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatReport_Action_CheckAttr::clear_has_attr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatReport_Action_CheckAttr::clear_attr() {
  attr_ = 0;
  clear_has_attr();
}
inline ::google::protobuf::int32 CombatReport_Action_CheckAttr::attr() const {
  return attr_;
}
inline void CombatReport_Action_CheckAttr::set_attr(::google::protobuf::int32 value) {
  set_has_attr();
  attr_ = value;
}

// optional int32 value = 3;
inline bool CombatReport_Action_CheckAttr::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatReport_Action_CheckAttr::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatReport_Action_CheckAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatReport_Action_CheckAttr::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 CombatReport_Action_CheckAttr::value() const {
  return value_;
}
inline void CombatReport_Action_CheckAttr::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CombatReport_Action

// optional int32 round = 1;
inline bool CombatReport_Action::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatReport_Action::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatReport_Action::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatReport_Action::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 CombatReport_Action::round() const {
  return round_;
}
inline void CombatReport_Action::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
}

// optional int32 attackerindex = 2;
inline bool CombatReport_Action::has_attackerindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatReport_Action::set_has_attackerindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatReport_Action::clear_has_attackerindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatReport_Action::clear_attackerindex() {
  attackerindex_ = 0;
  clear_has_attackerindex();
}
inline ::google::protobuf::int32 CombatReport_Action::attackerindex() const {
  return attackerindex_;
}
inline void CombatReport_Action::set_attackerindex(::google::protobuf::int32 value) {
  set_has_attackerindex();
  attackerindex_ = value;
}

// optional int32 skill = 3;
inline bool CombatReport_Action::has_skill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatReport_Action::set_has_skill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatReport_Action::clear_has_skill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatReport_Action::clear_skill() {
  skill_ = 0;
  clear_has_skill();
}
inline ::google::protobuf::int32 CombatReport_Action::skill() const {
  return skill_;
}
inline void CombatReport_Action::set_skill(::google::protobuf::int32 value) {
  set_has_skill();
  skill_ = value;
}

// repeated int32 defenderindex = 4;
inline int CombatReport_Action::defenderindex_size() const {
  return defenderindex_.size();
}
inline void CombatReport_Action::clear_defenderindex() {
  defenderindex_.Clear();
}
inline ::google::protobuf::int32 CombatReport_Action::defenderindex(int index) const {
  return defenderindex_.Get(index);
}
inline void CombatReport_Action::set_defenderindex(int index, ::google::protobuf::int32 value) {
  defenderindex_.Set(index, value);
}
inline void CombatReport_Action::add_defenderindex(::google::protobuf::int32 value) {
  defenderindex_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CombatReport_Action::defenderindex() const {
  return defenderindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CombatReport_Action::mutable_defenderindex() {
  return &defenderindex_;
}

// repeated int32 damage = 5;
inline int CombatReport_Action::damage_size() const {
  return damage_.size();
}
inline void CombatReport_Action::clear_damage() {
  damage_.Clear();
}
inline ::google::protobuf::int32 CombatReport_Action::damage(int index) const {
  return damage_.Get(index);
}
inline void CombatReport_Action::set_damage(int index, ::google::protobuf::int32 value) {
  damage_.Set(index, value);
}
inline void CombatReport_Action::add_damage(::google::protobuf::int32 value) {
  damage_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CombatReport_Action::damage() const {
  return damage_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CombatReport_Action::mutable_damage() {
  return &damage_;
}

// repeated int32 flag = 6;
inline int CombatReport_Action::flag_size() const {
  return flag_.size();
}
inline void CombatReport_Action::clear_flag() {
  flag_.Clear();
}
inline ::google::protobuf::int32 CombatReport_Action::flag(int index) const {
  return flag_.Get(index);
}
inline void CombatReport_Action::set_flag(int index, ::google::protobuf::int32 value) {
  flag_.Set(index, value);
}
inline void CombatReport_Action::add_flag(::google::protobuf::int32 value) {
  flag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CombatReport_Action::flag() const {
  return flag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CombatReport_Action::mutable_flag() {
  return &flag_;
}

// repeated int32 counter = 7;
inline int CombatReport_Action::counter_size() const {
  return counter_.size();
}
inline void CombatReport_Action::clear_counter() {
  counter_.Clear();
}
inline ::google::protobuf::int32 CombatReport_Action::counter(int index) const {
  return counter_.Get(index);
}
inline void CombatReport_Action::set_counter(int index, ::google::protobuf::int32 value) {
  counter_.Set(index, value);
}
inline void CombatReport_Action::add_counter(::google::protobuf::int32 value) {
  counter_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CombatReport_Action::counter() const {
  return counter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CombatReport_Action::mutable_counter() {
  return &counter_;
}

// repeated int32 buff = 8;
inline int CombatReport_Action::buff_size() const {
  return buff_.size();
}
inline void CombatReport_Action::clear_buff() {
  buff_.Clear();
}
inline ::google::protobuf::int32 CombatReport_Action::buff(int index) const {
  return buff_.Get(index);
}
inline void CombatReport_Action::set_buff(int index, ::google::protobuf::int32 value) {
  buff_.Set(index, value);
}
inline void CombatReport_Action::add_buff(::google::protobuf::int32 value) {
  buff_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CombatReport_Action::buff() const {
  return buff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CombatReport_Action::mutable_buff() {
  return &buff_;
}

// optional int32 combo = 9;
inline bool CombatReport_Action::has_combo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CombatReport_Action::set_has_combo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CombatReport_Action::clear_has_combo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CombatReport_Action::clear_combo() {
  combo_ = 0;
  clear_has_combo();
}
inline ::google::protobuf::int32 CombatReport_Action::combo() const {
  return combo_;
}
inline void CombatReport_Action::set_combo(::google::protobuf::int32 value) {
  set_has_combo();
  combo_ = value;
}

// repeated .Message.CombatReport.Action.CheckAttr checkattr = 10;
inline int CombatReport_Action::checkattr_size() const {
  return checkattr_.size();
}
inline void CombatReport_Action::clear_checkattr() {
  checkattr_.Clear();
}
inline const ::Message::CombatReport_Action_CheckAttr& CombatReport_Action::checkattr(int index) const {
  return checkattr_.Get(index);
}
inline ::Message::CombatReport_Action_CheckAttr* CombatReport_Action::mutable_checkattr(int index) {
  return checkattr_.Mutable(index);
}
inline ::Message::CombatReport_Action_CheckAttr* CombatReport_Action::add_checkattr() {
  return checkattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action_CheckAttr >&
CombatReport_Action::checkattr() const {
  return checkattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action_CheckAttr >*
CombatReport_Action::mutable_checkattr() {
  return &checkattr_;
}

// -------------------------------------------------------------------

// CombatReport

// repeated .Message.CombatReport.Action action = 1;
inline int CombatReport::action_size() const {
  return action_.size();
}
inline void CombatReport::clear_action() {
  action_.Clear();
}
inline const ::Message::CombatReport_Action& CombatReport::action(int index) const {
  return action_.Get(index);
}
inline ::Message::CombatReport_Action* CombatReport::mutable_action(int index) {
  return action_.Mutable(index);
}
inline ::Message::CombatReport_Action* CombatReport::add_action() {
  return action_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action >&
CombatReport::action() const {
  return action_;
}
inline ::google::protobuf::RepeatedPtrField< ::Message::CombatReport_Action >*
CombatReport::mutable_action() {
  return &action_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageCombatReport_2eproto__INCLUDED
