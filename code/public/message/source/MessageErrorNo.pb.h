// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageErrorNo.proto

#ifndef PROTOBUF_MessageErrorNo_2eproto__INCLUDED
#define PROTOBUF_MessageErrorNo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageErrorNo_2eproto();
void protobuf_AssignDesc_MessageErrorNo_2eproto();
void protobuf_ShutdownFile_MessageErrorNo_2eproto();

class ErrorNo;

// ===================================================================

class ErrorNo : public ::google::protobuf::Message {
 public:
  ErrorNo();
  virtual ~ErrorNo();

  ErrorNo(const ErrorNo& from);

  inline ErrorNo& operator=(const ErrorNo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorNo& default_instance();

  void Swap(ErrorNo* other);

  // implements Message ----------------------------------------------

  ErrorNo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorNo& from);
  void MergeFrom(const ErrorNo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);

  // optional int64 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int64 userid() const;
  inline void set_userid(::google::protobuf::int64 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 paramint1 = 4;
  inline bool has_paramint1() const;
  inline void clear_paramint1();
  static const int kParamint1FieldNumber = 4;
  inline ::google::protobuf::int32 paramint1() const;
  inline void set_paramint1(::google::protobuf::int32 value);

  // optional int32 paramint2 = 5;
  inline bool has_paramint2() const;
  inline void clear_paramint2();
  static const int kParamint2FieldNumber = 5;
  inline ::google::protobuf::int32 paramint2() const;
  inline void set_paramint2(::google::protobuf::int32 value);

  // optional int32 paramint3 = 6;
  inline bool has_paramint3() const;
  inline void clear_paramint3();
  static const int kParamint3FieldNumber = 6;
  inline ::google::protobuf::int32 paramint3() const;
  inline void set_paramint3(::google::protobuf::int32 value);

  // optional int64 paramlong1 = 7;
  inline bool has_paramlong1() const;
  inline void clear_paramlong1();
  static const int kParamlong1FieldNumber = 7;
  inline ::google::protobuf::int64 paramlong1() const;
  inline void set_paramlong1(::google::protobuf::int64 value);

  // optional int64 paramlong2 = 8;
  inline bool has_paramlong2() const;
  inline void clear_paramlong2();
  static const int kParamlong2FieldNumber = 8;
  inline ::google::protobuf::int64 paramlong2() const;
  inline void set_paramlong2(::google::protobuf::int64 value);

  // optional int64 paramlong3 = 9;
  inline bool has_paramlong3() const;
  inline void clear_paramlong3();
  static const int kParamlong3FieldNumber = 9;
  inline ::google::protobuf::int64 paramlong3() const;
  inline void set_paramlong3(::google::protobuf::int64 value);

  // optional string paramstr1 = 10;
  inline bool has_paramstr1() const;
  inline void clear_paramstr1();
  static const int kParamstr1FieldNumber = 10;
  inline const ::std::string& paramstr1() const;
  inline void set_paramstr1(const ::std::string& value);
  inline void set_paramstr1(const char* value);
  inline void set_paramstr1(const char* value, size_t size);
  inline ::std::string* mutable_paramstr1();
  inline ::std::string* release_paramstr1();
  inline void set_allocated_paramstr1(::std::string* paramstr1);

  // optional string paramstr2 = 11;
  inline bool has_paramstr2() const;
  inline void clear_paramstr2();
  static const int kParamstr2FieldNumber = 11;
  inline const ::std::string& paramstr2() const;
  inline void set_paramstr2(const ::std::string& value);
  inline void set_paramstr2(const char* value);
  inline void set_paramstr2(const char* value, size_t size);
  inline ::std::string* mutable_paramstr2();
  inline ::std::string* release_paramstr2();
  inline void set_allocated_paramstr2(::std::string* paramstr2);

  // optional string paramstr3 = 12;
  inline bool has_paramstr3() const;
  inline void clear_paramstr3();
  static const int kParamstr3FieldNumber = 12;
  inline const ::std::string& paramstr3() const;
  inline void set_paramstr3(const ::std::string& value);
  inline void set_paramstr3(const char* value);
  inline void set_paramstr3(const char* value, size_t size);
  inline ::std::string* mutable_paramstr3();
  inline ::std::string* release_paramstr3();
  inline void set_allocated_paramstr3(::std::string* paramstr3);

  // @@protoc_insertion_point(class_scope:Message.ErrorNo)
 private:
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_paramint1();
  inline void clear_has_paramint1();
  inline void set_has_paramint2();
  inline void clear_has_paramint2();
  inline void set_has_paramint3();
  inline void clear_has_paramint3();
  inline void set_has_paramlong1();
  inline void clear_has_paramlong1();
  inline void set_has_paramlong2();
  inline void clear_has_paramlong2();
  inline void set_has_paramlong3();
  inline void clear_has_paramlong3();
  inline void set_has_paramstr1();
  inline void clear_has_paramstr1();
  inline void set_has_paramstr2();
  inline void clear_has_paramstr2();
  inline void set_has_paramstr3();
  inline void clear_has_paramstr3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 paramint1_;
  ::google::protobuf::int32 paramint2_;
  ::google::protobuf::int64 paramlong1_;
  ::google::protobuf::int64 paramlong2_;
  ::google::protobuf::int64 paramlong3_;
  ::std::string* paramstr1_;
  ::std::string* paramstr2_;
  ::std::string* paramstr3_;
  ::google::protobuf::int32 paramint3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_MessageErrorNo_2eproto();
  friend void protobuf_AssignDesc_MessageErrorNo_2eproto();
  friend void protobuf_ShutdownFile_MessageErrorNo_2eproto();

  void InitAsDefaultInstance();
  static ErrorNo* default_instance_;
};
// ===================================================================


// ===================================================================

// ErrorNo

// optional int32 error = 1;
inline bool ErrorNo::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorNo::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorNo::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorNo::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 ErrorNo::error() const {
  return error_;
}
inline void ErrorNo::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
}

// optional int64 userid = 2;
inline bool ErrorNo::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorNo::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorNo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorNo::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::int64 ErrorNo::userid() const {
  return userid_;
}
inline void ErrorNo::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
}

// optional int32 type = 3;
inline bool ErrorNo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ErrorNo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ErrorNo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ErrorNo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ErrorNo::type() const {
  return type_;
}
inline void ErrorNo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 paramint1 = 4;
inline bool ErrorNo::has_paramint1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ErrorNo::set_has_paramint1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ErrorNo::clear_has_paramint1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ErrorNo::clear_paramint1() {
  paramint1_ = 0;
  clear_has_paramint1();
}
inline ::google::protobuf::int32 ErrorNo::paramint1() const {
  return paramint1_;
}
inline void ErrorNo::set_paramint1(::google::protobuf::int32 value) {
  set_has_paramint1();
  paramint1_ = value;
}

// optional int32 paramint2 = 5;
inline bool ErrorNo::has_paramint2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ErrorNo::set_has_paramint2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ErrorNo::clear_has_paramint2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ErrorNo::clear_paramint2() {
  paramint2_ = 0;
  clear_has_paramint2();
}
inline ::google::protobuf::int32 ErrorNo::paramint2() const {
  return paramint2_;
}
inline void ErrorNo::set_paramint2(::google::protobuf::int32 value) {
  set_has_paramint2();
  paramint2_ = value;
}

// optional int32 paramint3 = 6;
inline bool ErrorNo::has_paramint3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ErrorNo::set_has_paramint3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ErrorNo::clear_has_paramint3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ErrorNo::clear_paramint3() {
  paramint3_ = 0;
  clear_has_paramint3();
}
inline ::google::protobuf::int32 ErrorNo::paramint3() const {
  return paramint3_;
}
inline void ErrorNo::set_paramint3(::google::protobuf::int32 value) {
  set_has_paramint3();
  paramint3_ = value;
}

// optional int64 paramlong1 = 7;
inline bool ErrorNo::has_paramlong1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ErrorNo::set_has_paramlong1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ErrorNo::clear_has_paramlong1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ErrorNo::clear_paramlong1() {
  paramlong1_ = GOOGLE_LONGLONG(0);
  clear_has_paramlong1();
}
inline ::google::protobuf::int64 ErrorNo::paramlong1() const {
  return paramlong1_;
}
inline void ErrorNo::set_paramlong1(::google::protobuf::int64 value) {
  set_has_paramlong1();
  paramlong1_ = value;
}

// optional int64 paramlong2 = 8;
inline bool ErrorNo::has_paramlong2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ErrorNo::set_has_paramlong2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ErrorNo::clear_has_paramlong2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ErrorNo::clear_paramlong2() {
  paramlong2_ = GOOGLE_LONGLONG(0);
  clear_has_paramlong2();
}
inline ::google::protobuf::int64 ErrorNo::paramlong2() const {
  return paramlong2_;
}
inline void ErrorNo::set_paramlong2(::google::protobuf::int64 value) {
  set_has_paramlong2();
  paramlong2_ = value;
}

// optional int64 paramlong3 = 9;
inline bool ErrorNo::has_paramlong3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ErrorNo::set_has_paramlong3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ErrorNo::clear_has_paramlong3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ErrorNo::clear_paramlong3() {
  paramlong3_ = GOOGLE_LONGLONG(0);
  clear_has_paramlong3();
}
inline ::google::protobuf::int64 ErrorNo::paramlong3() const {
  return paramlong3_;
}
inline void ErrorNo::set_paramlong3(::google::protobuf::int64 value) {
  set_has_paramlong3();
  paramlong3_ = value;
}

// optional string paramstr1 = 10;
inline bool ErrorNo::has_paramstr1() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ErrorNo::set_has_paramstr1() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ErrorNo::clear_has_paramstr1() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ErrorNo::clear_paramstr1() {
  if (paramstr1_ != &::google::protobuf::internal::kEmptyString) {
    paramstr1_->clear();
  }
  clear_has_paramstr1();
}
inline const ::std::string& ErrorNo::paramstr1() const {
  return *paramstr1_;
}
inline void ErrorNo::set_paramstr1(const ::std::string& value) {
  set_has_paramstr1();
  if (paramstr1_ == &::google::protobuf::internal::kEmptyString) {
    paramstr1_ = new ::std::string;
  }
  paramstr1_->assign(value);
}
inline void ErrorNo::set_paramstr1(const char* value) {
  set_has_paramstr1();
  if (paramstr1_ == &::google::protobuf::internal::kEmptyString) {
    paramstr1_ = new ::std::string;
  }
  paramstr1_->assign(value);
}
inline void ErrorNo::set_paramstr1(const char* value, size_t size) {
  set_has_paramstr1();
  if (paramstr1_ == &::google::protobuf::internal::kEmptyString) {
    paramstr1_ = new ::std::string;
  }
  paramstr1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ErrorNo::mutable_paramstr1() {
  set_has_paramstr1();
  if (paramstr1_ == &::google::protobuf::internal::kEmptyString) {
    paramstr1_ = new ::std::string;
  }
  return paramstr1_;
}
inline ::std::string* ErrorNo::release_paramstr1() {
  clear_has_paramstr1();
  if (paramstr1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = paramstr1_;
    paramstr1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ErrorNo::set_allocated_paramstr1(::std::string* paramstr1) {
  if (paramstr1_ != &::google::protobuf::internal::kEmptyString) {
    delete paramstr1_;
  }
  if (paramstr1) {
    set_has_paramstr1();
    paramstr1_ = paramstr1;
  } else {
    clear_has_paramstr1();
    paramstr1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string paramstr2 = 11;
inline bool ErrorNo::has_paramstr2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ErrorNo::set_has_paramstr2() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ErrorNo::clear_has_paramstr2() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ErrorNo::clear_paramstr2() {
  if (paramstr2_ != &::google::protobuf::internal::kEmptyString) {
    paramstr2_->clear();
  }
  clear_has_paramstr2();
}
inline const ::std::string& ErrorNo::paramstr2() const {
  return *paramstr2_;
}
inline void ErrorNo::set_paramstr2(const ::std::string& value) {
  set_has_paramstr2();
  if (paramstr2_ == &::google::protobuf::internal::kEmptyString) {
    paramstr2_ = new ::std::string;
  }
  paramstr2_->assign(value);
}
inline void ErrorNo::set_paramstr2(const char* value) {
  set_has_paramstr2();
  if (paramstr2_ == &::google::protobuf::internal::kEmptyString) {
    paramstr2_ = new ::std::string;
  }
  paramstr2_->assign(value);
}
inline void ErrorNo::set_paramstr2(const char* value, size_t size) {
  set_has_paramstr2();
  if (paramstr2_ == &::google::protobuf::internal::kEmptyString) {
    paramstr2_ = new ::std::string;
  }
  paramstr2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ErrorNo::mutable_paramstr2() {
  set_has_paramstr2();
  if (paramstr2_ == &::google::protobuf::internal::kEmptyString) {
    paramstr2_ = new ::std::string;
  }
  return paramstr2_;
}
inline ::std::string* ErrorNo::release_paramstr2() {
  clear_has_paramstr2();
  if (paramstr2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = paramstr2_;
    paramstr2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ErrorNo::set_allocated_paramstr2(::std::string* paramstr2) {
  if (paramstr2_ != &::google::protobuf::internal::kEmptyString) {
    delete paramstr2_;
  }
  if (paramstr2) {
    set_has_paramstr2();
    paramstr2_ = paramstr2;
  } else {
    clear_has_paramstr2();
    paramstr2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string paramstr3 = 12;
inline bool ErrorNo::has_paramstr3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ErrorNo::set_has_paramstr3() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ErrorNo::clear_has_paramstr3() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ErrorNo::clear_paramstr3() {
  if (paramstr3_ != &::google::protobuf::internal::kEmptyString) {
    paramstr3_->clear();
  }
  clear_has_paramstr3();
}
inline const ::std::string& ErrorNo::paramstr3() const {
  return *paramstr3_;
}
inline void ErrorNo::set_paramstr3(const ::std::string& value) {
  set_has_paramstr3();
  if (paramstr3_ == &::google::protobuf::internal::kEmptyString) {
    paramstr3_ = new ::std::string;
  }
  paramstr3_->assign(value);
}
inline void ErrorNo::set_paramstr3(const char* value) {
  set_has_paramstr3();
  if (paramstr3_ == &::google::protobuf::internal::kEmptyString) {
    paramstr3_ = new ::std::string;
  }
  paramstr3_->assign(value);
}
inline void ErrorNo::set_paramstr3(const char* value, size_t size) {
  set_has_paramstr3();
  if (paramstr3_ == &::google::protobuf::internal::kEmptyString) {
    paramstr3_ = new ::std::string;
  }
  paramstr3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ErrorNo::mutable_paramstr3() {
  set_has_paramstr3();
  if (paramstr3_ == &::google::protobuf::internal::kEmptyString) {
    paramstr3_ = new ::std::string;
  }
  return paramstr3_;
}
inline ::std::string* ErrorNo::release_paramstr3() {
  clear_has_paramstr3();
  if (paramstr3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = paramstr3_;
    paramstr3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ErrorNo::set_allocated_paramstr3(::std::string* paramstr3) {
  if (paramstr3_ != &::google::protobuf::internal::kEmptyString) {
    delete paramstr3_;
  }
  if (paramstr3) {
    set_has_paramstr3();
    paramstr3_ = paramstr3;
  } else {
    clear_has_paramstr3();
    paramstr3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageErrorNo_2eproto__INCLUDED
