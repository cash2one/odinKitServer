// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageItemGainResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageItemGainResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* ItemGainResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemGainResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemGainResponse_Soul_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemGainResponse_Soul_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageItemGainResponse_2eproto() {
  protobuf_AddDesc_MessageItemGainResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageItemGainResponse.proto");
  GOOGLE_CHECK(file != NULL);
  ItemGainResponse_descriptor_ = file->message_type(0);
  static const int ItemGainResponse_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, templateid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, stack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, parent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, equip_hero_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, seconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, current_intensify_level_),
  };
  ItemGainResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemGainResponse_descriptor_,
      ItemGainResponse::default_instance_,
      ItemGainResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemGainResponse));
  ItemGainResponse_Soul_descriptor_ = ItemGainResponse_descriptor_->nested_type(0);
  static const int ItemGainResponse_Soul_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse_Soul, template_id_),
  };
  ItemGainResponse_Soul_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemGainResponse_Soul_descriptor_,
      ItemGainResponse_Soul::default_instance_,
      ItemGainResponse_Soul_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse_Soul, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemGainResponse_Soul, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemGainResponse_Soul));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageItemGainResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemGainResponse_descriptor_, &ItemGainResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemGainResponse_Soul_descriptor_, &ItemGainResponse_Soul::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageItemGainResponse_2eproto() {
  delete ItemGainResponse::default_instance_;
  delete ItemGainResponse_reflection_;
  delete ItemGainResponse_Soul::default_instance_;
  delete ItemGainResponse_Soul_reflection_;
}

void protobuf_AddDesc_MessageItemGainResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035MessageItemGainResponse.proto\022\007Message"
    "\"\360\001\n\020ItemGainResponse\022\016\n\006itemid\030\001 \001(\003\022\022\n"
    "\ntemplateid\030\002 \001(\005\022\r\n\005stack\030\003 \001(\005\022\020\n\010posi"
    "tion\030\004 \001(\005\022\021\n\tparent_id\030\005 \001(\003\022\025\n\requip_h"
    "ero_id\030\006 \001(\003\022/\n\007seconds\030\007 \003(\0132\036.Message."
    "ItemGainResponse.Soul\022\037\n\027current_intensi"
    "fy_level\030\010 \001(\005\032\033\n\004Soul\022\023\n\013template_id\030\001 "
    "\001(\005", 283);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageItemGainResponse.proto", &protobuf_RegisterTypes);
  ItemGainResponse::default_instance_ = new ItemGainResponse();
  ItemGainResponse_Soul::default_instance_ = new ItemGainResponse_Soul();
  ItemGainResponse::default_instance_->InitAsDefaultInstance();
  ItemGainResponse_Soul::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageItemGainResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageItemGainResponse_2eproto {
  StaticDescriptorInitializer_MessageItemGainResponse_2eproto() {
    protobuf_AddDesc_MessageItemGainResponse_2eproto();
  }
} static_descriptor_initializer_MessageItemGainResponse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ItemGainResponse_Soul::kTemplateIdFieldNumber;
#endif  // !_MSC_VER

ItemGainResponse_Soul::ItemGainResponse_Soul()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemGainResponse_Soul::InitAsDefaultInstance() {
}

ItemGainResponse_Soul::ItemGainResponse_Soul(const ItemGainResponse_Soul& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemGainResponse_Soul::SharedCtor() {
  _cached_size_ = 0;
  template_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemGainResponse_Soul::~ItemGainResponse_Soul() {
  SharedDtor();
}

void ItemGainResponse_Soul::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemGainResponse_Soul::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemGainResponse_Soul::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemGainResponse_Soul_descriptor_;
}

const ItemGainResponse_Soul& ItemGainResponse_Soul::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItemGainResponse_2eproto();
  return *default_instance_;
}

ItemGainResponse_Soul* ItemGainResponse_Soul::default_instance_ = NULL;

ItemGainResponse_Soul* ItemGainResponse_Soul::New() const {
  return new ItemGainResponse_Soul;
}

void ItemGainResponse_Soul::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    template_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemGainResponse_Soul::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 template_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
          set_has_template_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemGainResponse_Soul::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 template_id = 1;
  if (has_template_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->template_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemGainResponse_Soul::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 template_id = 1;
  if (has_template_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->template_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemGainResponse_Soul::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 template_id = 1;
    if (has_template_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->template_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemGainResponse_Soul::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemGainResponse_Soul* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemGainResponse_Soul*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemGainResponse_Soul::MergeFrom(const ItemGainResponse_Soul& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_template_id()) {
      set_template_id(from.template_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemGainResponse_Soul::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemGainResponse_Soul::CopyFrom(const ItemGainResponse_Soul& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemGainResponse_Soul::IsInitialized() const {

  return true;
}

void ItemGainResponse_Soul::Swap(ItemGainResponse_Soul* other) {
  if (other != this) {
    std::swap(template_id_, other->template_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemGainResponse_Soul::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemGainResponse_Soul_descriptor_;
  metadata.reflection = ItemGainResponse_Soul_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ItemGainResponse::kItemidFieldNumber;
const int ItemGainResponse::kTemplateidFieldNumber;
const int ItemGainResponse::kStackFieldNumber;
const int ItemGainResponse::kPositionFieldNumber;
const int ItemGainResponse::kParentIdFieldNumber;
const int ItemGainResponse::kEquipHeroIdFieldNumber;
const int ItemGainResponse::kSecondsFieldNumber;
const int ItemGainResponse::kCurrentIntensifyLevelFieldNumber;
#endif  // !_MSC_VER

ItemGainResponse::ItemGainResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemGainResponse::InitAsDefaultInstance() {
}

ItemGainResponse::ItemGainResponse(const ItemGainResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemGainResponse::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(0);
  templateid_ = 0;
  stack_ = 0;
  position_ = 0;
  parent_id_ = GOOGLE_LONGLONG(0);
  equip_hero_id_ = GOOGLE_LONGLONG(0);
  current_intensify_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemGainResponse::~ItemGainResponse() {
  SharedDtor();
}

void ItemGainResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemGainResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemGainResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemGainResponse_descriptor_;
}

const ItemGainResponse& ItemGainResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageItemGainResponse_2eproto();
  return *default_instance_;
}

ItemGainResponse* ItemGainResponse::default_instance_ = NULL;

ItemGainResponse* ItemGainResponse::New() const {
  return new ItemGainResponse;
}

void ItemGainResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = GOOGLE_LONGLONG(0);
    templateid_ = 0;
    stack_ = 0;
    position_ = 0;
    parent_id_ = GOOGLE_LONGLONG(0);
    equip_hero_id_ = GOOGLE_LONGLONG(0);
    current_intensify_level_ = 0;
  }
  seconds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemGainResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_templateid;
        break;
      }

      // optional int32 templateid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_templateid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &templateid_)));
          set_has_templateid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stack;
        break;
      }

      // optional int32 stack = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stack_)));
          set_has_stack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_position;
        break;
      }

      // optional int32 position = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_position:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
          set_has_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_parent_id;
        break;
      }

      // optional int64 parent_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_parent_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parent_id_)));
          set_has_parent_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_equip_hero_id;
        break;
      }

      // optional int64 equip_hero_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equip_hero_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &equip_hero_id_)));
          set_has_equip_hero_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_seconds;
        break;
      }

      // repeated .Message.ItemGainResponse.Soul seconds = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_seconds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_seconds()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_seconds;
        if (input->ExpectTag(64)) goto parse_current_intensify_level;
        break;
      }

      // optional int32 current_intensify_level = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_current_intensify_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_intensify_level_)));
          set_has_current_intensify_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemGainResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->templateid(), output);
  }

  // optional int32 stack = 3;
  if (has_stack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stack(), output);
  }

  // optional int32 position = 4;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->position(), output);
  }

  // optional int64 parent_id = 5;
  if (has_parent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->parent_id(), output);
  }

  // optional int64 equip_hero_id = 6;
  if (has_equip_hero_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->equip_hero_id(), output);
  }

  // repeated .Message.ItemGainResponse.Soul seconds = 7;
  for (int i = 0; i < this->seconds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->seconds(i), output);
  }

  // optional int32 current_intensify_level = 8;
  if (has_current_intensify_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->current_intensify_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemGainResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional int32 templateid = 2;
  if (has_templateid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->templateid(), target);
  }

  // optional int32 stack = 3;
  if (has_stack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stack(), target);
  }

  // optional int32 position = 4;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->position(), target);
  }

  // optional int64 parent_id = 5;
  if (has_parent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->parent_id(), target);
  }

  // optional int64 equip_hero_id = 6;
  if (has_equip_hero_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->equip_hero_id(), target);
  }

  // repeated .Message.ItemGainResponse.Soul seconds = 7;
  for (int i = 0; i < this->seconds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->seconds(i), target);
  }

  // optional int32 current_intensify_level = 8;
  if (has_current_intensify_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->current_intensify_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemGainResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional int32 templateid = 2;
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->templateid());
    }

    // optional int32 stack = 3;
    if (has_stack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stack());
    }

    // optional int32 position = 4;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->position());
    }

    // optional int64 parent_id = 5;
    if (has_parent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->parent_id());
    }

    // optional int64 equip_hero_id = 6;
    if (has_equip_hero_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->equip_hero_id());
    }

    // optional int32 current_intensify_level = 8;
    if (has_current_intensify_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current_intensify_level());
    }

  }
  // repeated .Message.ItemGainResponse.Soul seconds = 7;
  total_size += 1 * this->seconds_size();
  for (int i = 0; i < this->seconds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->seconds(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemGainResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemGainResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemGainResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemGainResponse::MergeFrom(const ItemGainResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  seconds_.MergeFrom(from.seconds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_templateid()) {
      set_templateid(from.templateid());
    }
    if (from.has_stack()) {
      set_stack(from.stack());
    }
    if (from.has_position()) {
      set_position(from.position());
    }
    if (from.has_parent_id()) {
      set_parent_id(from.parent_id());
    }
    if (from.has_equip_hero_id()) {
      set_equip_hero_id(from.equip_hero_id());
    }
    if (from.has_current_intensify_level()) {
      set_current_intensify_level(from.current_intensify_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemGainResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemGainResponse::CopyFrom(const ItemGainResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemGainResponse::IsInitialized() const {

  return true;
}

void ItemGainResponse::Swap(ItemGainResponse* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(templateid_, other->templateid_);
    std::swap(stack_, other->stack_);
    std::swap(position_, other->position_);
    std::swap(parent_id_, other->parent_id_);
    std::swap(equip_hero_id_, other->equip_hero_id_);
    seconds_.Swap(&other->seconds_);
    std::swap(current_intensify_level_, other->current_intensify_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemGainResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemGainResponse_descriptor_;
  metadata.reflection = ItemGainResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
