// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageEventSync.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageEventSync.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* EventSync_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventSync_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageEventSync_2eproto() {
  protobuf_AddDesc_MessageEventSync_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageEventSync.proto");
  GOOGLE_CHECK(file != NULL);
  EventSync_descriptor_ = file->message_type(0);
  static const int EventSync_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, evid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, param3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, param4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, param5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, param6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, param7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, stime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, parent_),
  };
  EventSync_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EventSync_descriptor_,
      EventSync::default_instance_,
      EventSync_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventSync, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EventSync));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageEventSync_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EventSync_descriptor_, &EventSync::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageEventSync_2eproto() {
  delete EventSync::default_instance_;
  delete EventSync_reflection_;
}

void protobuf_AddDesc_MessageEventSync_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026MessageEventSync.proto\022\007Message\"\265\001\n\tEv"
    "entSync\022\014\n\004evid\030\001 \001(\005\022\013\n\003pid\030\002 \001(\003\022\016\n\006pa"
    "ram1\030\003 \001(\003\022\016\n\006param2\030\004 \001(\003\022\016\n\006param3\030\005 \001"
    "(\003\022\016\n\006param4\030\006 \001(\003\022\016\n\006param5\030\007 \001(\003\022\016\n\006pa"
    "ram6\030\010 \001(\003\022\016\n\006param7\030\t \001(\t\022\r\n\005stime\030\n \001("
    "\t\022\016\n\006parent\030\013 \001(\003", 217);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageEventSync.proto", &protobuf_RegisterTypes);
  EventSync::default_instance_ = new EventSync();
  EventSync::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageEventSync_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageEventSync_2eproto {
  StaticDescriptorInitializer_MessageEventSync_2eproto() {
    protobuf_AddDesc_MessageEventSync_2eproto();
  }
} static_descriptor_initializer_MessageEventSync_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EventSync::kEvidFieldNumber;
const int EventSync::kPidFieldNumber;
const int EventSync::kParam1FieldNumber;
const int EventSync::kParam2FieldNumber;
const int EventSync::kParam3FieldNumber;
const int EventSync::kParam4FieldNumber;
const int EventSync::kParam5FieldNumber;
const int EventSync::kParam6FieldNumber;
const int EventSync::kParam7FieldNumber;
const int EventSync::kStimeFieldNumber;
const int EventSync::kParentFieldNumber;
#endif  // !_MSC_VER

EventSync::EventSync()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EventSync::InitAsDefaultInstance() {
}

EventSync::EventSync(const EventSync& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EventSync::SharedCtor() {
  _cached_size_ = 0;
  evid_ = 0;
  pid_ = GOOGLE_LONGLONG(0);
  param1_ = GOOGLE_LONGLONG(0);
  param2_ = GOOGLE_LONGLONG(0);
  param3_ = GOOGLE_LONGLONG(0);
  param4_ = GOOGLE_LONGLONG(0);
  param5_ = GOOGLE_LONGLONG(0);
  param6_ = GOOGLE_LONGLONG(0);
  param7_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  parent_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventSync::~EventSync() {
  SharedDtor();
}

void EventSync::SharedDtor() {
  if (param7_ != &::google::protobuf::internal::kEmptyString) {
    delete param7_;
  }
  if (stime_ != &::google::protobuf::internal::kEmptyString) {
    delete stime_;
  }
  if (this != default_instance_) {
  }
}

void EventSync::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventSync::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventSync_descriptor_;
}

const EventSync& EventSync::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageEventSync_2eproto();
  return *default_instance_;
}

EventSync* EventSync::default_instance_ = NULL;

EventSync* EventSync::New() const {
  return new EventSync;
}

void EventSync::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    evid_ = 0;
    pid_ = GOOGLE_LONGLONG(0);
    param1_ = GOOGLE_LONGLONG(0);
    param2_ = GOOGLE_LONGLONG(0);
    param3_ = GOOGLE_LONGLONG(0);
    param4_ = GOOGLE_LONGLONG(0);
    param5_ = GOOGLE_LONGLONG(0);
    param6_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_param7()) {
      if (param7_ != &::google::protobuf::internal::kEmptyString) {
        param7_->clear();
      }
    }
    if (has_stime()) {
      if (stime_ != &::google::protobuf::internal::kEmptyString) {
        stime_->clear();
      }
    }
    parent_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EventSync::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 evid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evid_)));
          set_has_evid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pid;
        break;
      }

      // optional int64 pid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_param1;
        break;
      }

      // optional int64 param1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param1_)));
          set_has_param1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_param2;
        break;
      }

      // optional int64 param2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param2_)));
          set_has_param2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_param3;
        break;
      }

      // optional int64 param3 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param3_)));
          set_has_param3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_param4;
        break;
      }

      // optional int64 param4 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param4_)));
          set_has_param4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_param5;
        break;
      }

      // optional int64 param5 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param5_)));
          set_has_param5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_param6;
        break;
      }

      // optional int64 param6 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &param6_)));
          set_has_param6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_param7;
        break;
      }

      // optional string param7 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->param7().data(), this->param7().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_stime;
        break;
      }

      // optional string stime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stime().data(), this->stime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_parent;
        break;
      }

      // optional int64 parent = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_parent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parent_)));
          set_has_parent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EventSync::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 evid = 1;
  if (has_evid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->evid(), output);
  }

  // optional int64 pid = 2;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->pid(), output);
  }

  // optional int64 param1 = 3;
  if (has_param1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->param1(), output);
  }

  // optional int64 param2 = 4;
  if (has_param2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->param2(), output);
  }

  // optional int64 param3 = 5;
  if (has_param3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->param3(), output);
  }

  // optional int64 param4 = 6;
  if (has_param4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->param4(), output);
  }

  // optional int64 param5 = 7;
  if (has_param5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->param5(), output);
  }

  // optional int64 param6 = 8;
  if (has_param6()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->param6(), output);
  }

  // optional string param7 = 9;
  if (has_param7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->param7().data(), this->param7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->param7(), output);
  }

  // optional string stime = 10;
  if (has_stime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stime().data(), this->stime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->stime(), output);
  }

  // optional int64 parent = 11;
  if (has_parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->parent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EventSync::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 evid = 1;
  if (has_evid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->evid(), target);
  }

  // optional int64 pid = 2;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->pid(), target);
  }

  // optional int64 param1 = 3;
  if (has_param1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->param1(), target);
  }

  // optional int64 param2 = 4;
  if (has_param2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->param2(), target);
  }

  // optional int64 param3 = 5;
  if (has_param3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->param3(), target);
  }

  // optional int64 param4 = 6;
  if (has_param4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->param4(), target);
  }

  // optional int64 param5 = 7;
  if (has_param5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->param5(), target);
  }

  // optional int64 param6 = 8;
  if (has_param6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->param6(), target);
  }

  // optional string param7 = 9;
  if (has_param7()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->param7().data(), this->param7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->param7(), target);
  }

  // optional string stime = 10;
  if (has_stime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stime().data(), this->stime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->stime(), target);
  }

  // optional int64 parent = 11;
  if (has_parent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->parent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EventSync::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 evid = 1;
    if (has_evid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->evid());
    }

    // optional int64 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pid());
    }

    // optional int64 param1 = 3;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->param1());
    }

    // optional int64 param2 = 4;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->param2());
    }

    // optional int64 param3 = 5;
    if (has_param3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->param3());
    }

    // optional int64 param4 = 6;
    if (has_param4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->param4());
    }

    // optional int64 param5 = 7;
    if (has_param5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->param5());
    }

    // optional int64 param6 = 8;
    if (has_param6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->param6());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string param7 = 9;
    if (has_param7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param7());
    }

    // optional string stime = 10;
    if (has_stime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stime());
    }

    // optional int64 parent = 11;
    if (has_parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->parent());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventSync::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EventSync* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EventSync*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EventSync::MergeFrom(const EventSync& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_evid()) {
      set_evid(from.evid());
    }
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_param1()) {
      set_param1(from.param1());
    }
    if (from.has_param2()) {
      set_param2(from.param2());
    }
    if (from.has_param3()) {
      set_param3(from.param3());
    }
    if (from.has_param4()) {
      set_param4(from.param4());
    }
    if (from.has_param5()) {
      set_param5(from.param5());
    }
    if (from.has_param6()) {
      set_param6(from.param6());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_param7()) {
      set_param7(from.param7());
    }
    if (from.has_stime()) {
      set_stime(from.stime());
    }
    if (from.has_parent()) {
      set_parent(from.parent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EventSync::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventSync::CopyFrom(const EventSync& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventSync::IsInitialized() const {

  return true;
}

void EventSync::Swap(EventSync* other) {
  if (other != this) {
    std::swap(evid_, other->evid_);
    std::swap(pid_, other->pid_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    std::swap(param3_, other->param3_);
    std::swap(param4_, other->param4_);
    std::swap(param5_, other->param5_);
    std::swap(param6_, other->param6_);
    std::swap(param7_, other->param7_);
    std::swap(stime_, other->stime_);
    std::swap(parent_, other->parent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EventSync::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventSync_descriptor_;
  metadata.reflection = EventSync_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
