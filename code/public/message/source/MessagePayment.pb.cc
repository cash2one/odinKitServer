// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessagePayment.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessagePayment.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* PaymentVerifyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaymentVerifyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaymentVerifyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaymentVerifyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaymentSaveTransactionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaymentSaveTransactionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PaymentSaveTransactionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PaymentSaveTransactionResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessagePayment_2eproto() {
  protobuf_AddDesc_MessagePayment_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessagePayment.proto");
  GOOGLE_CHECK(file != NULL);
  PaymentVerifyRequest_descriptor_ = file->message_type(0);
  static const int PaymentVerifyRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyRequest, receiptdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyRequest, playerid_),
  };
  PaymentVerifyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PaymentVerifyRequest_descriptor_,
      PaymentVerifyRequest::default_instance_,
      PaymentVerifyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PaymentVerifyRequest));
  PaymentVerifyResponse_descriptor_ = file->message_type(1);
  static const int PaymentVerifyResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyResponse, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyResponse, product_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyResponse, transaction_id_),
  };
  PaymentVerifyResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PaymentVerifyResponse_descriptor_,
      PaymentVerifyResponse::default_instance_,
      PaymentVerifyResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentVerifyResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PaymentVerifyResponse));
  PaymentSaveTransactionRequest_descriptor_ = file->message_type(2);
  static const int PaymentSaveTransactionRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionRequest, transaction_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionRequest, product_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionRequest, player_id_),
  };
  PaymentSaveTransactionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PaymentSaveTransactionRequest_descriptor_,
      PaymentSaveTransactionRequest::default_instance_,
      PaymentSaveTransactionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PaymentSaveTransactionRequest));
  PaymentSaveTransactionResponse_descriptor_ = file->message_type(3);
  static const int PaymentSaveTransactionResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionResponse, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionResponse, product_id_),
  };
  PaymentSaveTransactionResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PaymentSaveTransactionResponse_descriptor_,
      PaymentSaveTransactionResponse::default_instance_,
      PaymentSaveTransactionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaymentSaveTransactionResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PaymentSaveTransactionResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessagePayment_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PaymentVerifyRequest_descriptor_, &PaymentVerifyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PaymentVerifyResponse_descriptor_, &PaymentVerifyResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PaymentSaveTransactionRequest_descriptor_, &PaymentSaveTransactionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PaymentSaveTransactionResponse_descriptor_, &PaymentSaveTransactionResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessagePayment_2eproto() {
  delete PaymentVerifyRequest::default_instance_;
  delete PaymentVerifyRequest_reflection_;
  delete PaymentVerifyResponse::default_instance_;
  delete PaymentVerifyResponse_reflection_;
  delete PaymentSaveTransactionRequest::default_instance_;
  delete PaymentSaveTransactionRequest_reflection_;
  delete PaymentSaveTransactionResponse::default_instance_;
  delete PaymentSaveTransactionResponse_reflection_;
}

void protobuf_AddDesc_MessagePayment_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024MessagePayment.proto\022\007Message\"=\n\024Payme"
    "ntVerifyRequest\022\023\n\013receiptData\030\001 \002(\t\022\020\n\010"
    "playerid\030\002 \002(\003\"f\n\025PaymentVerifyResponse\022"
    "\016\n\006result\030\001 \002(\005\022\021\n\tplayer_id\030\002 \001(\003\022\022\n\npr"
    "oduct_id\030\003 \001(\t\022\026\n\016transaction_id\030\004 \001(\t\"^"
    "\n\035PaymentSaveTransactionRequest\022\026\n\016trans"
    "action_id\030\001 \002(\t\022\022\n\nproduct_id\030\002 \002(\t\022\021\n\tp"
    "layer_id\030\003 \002(\003\"W\n\036PaymentSaveTransaction"
    "Response\022\016\n\006result\030\001 \002(\005\022\021\n\tplayer_id\030\002 "
    "\001(\003\022\022\n\nproduct_id\030\003 \001(\t", 383);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessagePayment.proto", &protobuf_RegisterTypes);
  PaymentVerifyRequest::default_instance_ = new PaymentVerifyRequest();
  PaymentVerifyResponse::default_instance_ = new PaymentVerifyResponse();
  PaymentSaveTransactionRequest::default_instance_ = new PaymentSaveTransactionRequest();
  PaymentSaveTransactionResponse::default_instance_ = new PaymentSaveTransactionResponse();
  PaymentVerifyRequest::default_instance_->InitAsDefaultInstance();
  PaymentVerifyResponse::default_instance_->InitAsDefaultInstance();
  PaymentSaveTransactionRequest::default_instance_->InitAsDefaultInstance();
  PaymentSaveTransactionResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessagePayment_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessagePayment_2eproto {
  StaticDescriptorInitializer_MessagePayment_2eproto() {
    protobuf_AddDesc_MessagePayment_2eproto();
  }
} static_descriptor_initializer_MessagePayment_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PaymentVerifyRequest::kReceiptDataFieldNumber;
const int PaymentVerifyRequest::kPlayeridFieldNumber;
#endif  // !_MSC_VER

PaymentVerifyRequest::PaymentVerifyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PaymentVerifyRequest::InitAsDefaultInstance() {
}

PaymentVerifyRequest::PaymentVerifyRequest(const PaymentVerifyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PaymentVerifyRequest::SharedCtor() {
  _cached_size_ = 0;
  receiptdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  playerid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaymentVerifyRequest::~PaymentVerifyRequest() {
  SharedDtor();
}

void PaymentVerifyRequest::SharedDtor() {
  if (receiptdata_ != &::google::protobuf::internal::kEmptyString) {
    delete receiptdata_;
  }
  if (this != default_instance_) {
  }
}

void PaymentVerifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentVerifyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaymentVerifyRequest_descriptor_;
}

const PaymentVerifyRequest& PaymentVerifyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessagePayment_2eproto();
  return *default_instance_;
}

PaymentVerifyRequest* PaymentVerifyRequest::default_instance_ = NULL;

PaymentVerifyRequest* PaymentVerifyRequest::New() const {
  return new PaymentVerifyRequest;
}

void PaymentVerifyRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_receiptdata()) {
      if (receiptdata_ != &::google::protobuf::internal::kEmptyString) {
        receiptdata_->clear();
      }
    }
    playerid_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PaymentVerifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string receiptData = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiptdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiptdata().data(), this->receiptdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_playerid;
        break;
      }

      // required int64 playerid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_playerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
          set_has_playerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PaymentVerifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string receiptData = 1;
  if (has_receiptdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiptdata().data(), this->receiptdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->receiptdata(), output);
  }

  // required int64 playerid = 2;
  if (has_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->playerid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PaymentVerifyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string receiptData = 1;
  if (has_receiptdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiptdata().data(), this->receiptdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->receiptdata(), target);
  }

  // required int64 playerid = 2;
  if (has_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->playerid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PaymentVerifyRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string receiptData = 1;
    if (has_receiptdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiptdata());
    }

    // required int64 playerid = 2;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->playerid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentVerifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PaymentVerifyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PaymentVerifyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PaymentVerifyRequest::MergeFrom(const PaymentVerifyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_receiptdata()) {
      set_receiptdata(from.receiptdata());
    }
    if (from.has_playerid()) {
      set_playerid(from.playerid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PaymentVerifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentVerifyRequest::CopyFrom(const PaymentVerifyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentVerifyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PaymentVerifyRequest::Swap(PaymentVerifyRequest* other) {
  if (other != this) {
    std::swap(receiptdata_, other->receiptdata_);
    std::swap(playerid_, other->playerid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PaymentVerifyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaymentVerifyRequest_descriptor_;
  metadata.reflection = PaymentVerifyRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PaymentVerifyResponse::kResultFieldNumber;
const int PaymentVerifyResponse::kPlayerIdFieldNumber;
const int PaymentVerifyResponse::kProductIdFieldNumber;
const int PaymentVerifyResponse::kTransactionIdFieldNumber;
#endif  // !_MSC_VER

PaymentVerifyResponse::PaymentVerifyResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PaymentVerifyResponse::InitAsDefaultInstance() {
}

PaymentVerifyResponse::PaymentVerifyResponse(const PaymentVerifyResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PaymentVerifyResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaymentVerifyResponse::~PaymentVerifyResponse() {
  SharedDtor();
}

void PaymentVerifyResponse::SharedDtor() {
  if (product_id_ != &::google::protobuf::internal::kEmptyString) {
    delete product_id_;
  }
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    delete transaction_id_;
  }
  if (this != default_instance_) {
  }
}

void PaymentVerifyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentVerifyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaymentVerifyResponse_descriptor_;
}

const PaymentVerifyResponse& PaymentVerifyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessagePayment_2eproto();
  return *default_instance_;
}

PaymentVerifyResponse* PaymentVerifyResponse::default_instance_ = NULL;

PaymentVerifyResponse* PaymentVerifyResponse::New() const {
  return new PaymentVerifyResponse;
}

void PaymentVerifyResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    player_id_ = GOOGLE_LONGLONG(0);
    if (has_product_id()) {
      if (product_id_ != &::google::protobuf::internal::kEmptyString) {
        product_id_->clear();
      }
    }
    if (has_transaction_id()) {
      if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
        transaction_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PaymentVerifyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_id;
        break;
      }

      // optional int64 player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_product_id;
        break;
      }

      // optional string product_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->product_id().data(), this->product_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_transaction_id;
        break;
      }

      // optional string transaction_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_transaction_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->transaction_id().data(), this->transaction_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PaymentVerifyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 player_id = 2;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player_id(), output);
  }

  // optional string product_id = 3;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->product_id(), output);
  }

  // optional string transaction_id = 4;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->transaction_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PaymentVerifyResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 player_id = 2;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player_id(), target);
  }

  // optional string product_id = 3;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  // optional string transaction_id = 4;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->transaction_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PaymentVerifyResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int64 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }

    // optional string product_id = 3;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

    // optional string transaction_id = 4;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transaction_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentVerifyResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PaymentVerifyResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PaymentVerifyResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PaymentVerifyResponse::MergeFrom(const PaymentVerifyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_product_id()) {
      set_product_id(from.product_id());
    }
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PaymentVerifyResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentVerifyResponse::CopyFrom(const PaymentVerifyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentVerifyResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PaymentVerifyResponse::Swap(PaymentVerifyResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(player_id_, other->player_id_);
    std::swap(product_id_, other->product_id_);
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PaymentVerifyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaymentVerifyResponse_descriptor_;
  metadata.reflection = PaymentVerifyResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PaymentSaveTransactionRequest::kTransactionIdFieldNumber;
const int PaymentSaveTransactionRequest::kProductIdFieldNumber;
const int PaymentSaveTransactionRequest::kPlayerIdFieldNumber;
#endif  // !_MSC_VER

PaymentSaveTransactionRequest::PaymentSaveTransactionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PaymentSaveTransactionRequest::InitAsDefaultInstance() {
}

PaymentSaveTransactionRequest::PaymentSaveTransactionRequest(const PaymentSaveTransactionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PaymentSaveTransactionRequest::SharedCtor() {
  _cached_size_ = 0;
  transaction_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  player_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaymentSaveTransactionRequest::~PaymentSaveTransactionRequest() {
  SharedDtor();
}

void PaymentSaveTransactionRequest::SharedDtor() {
  if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
    delete transaction_id_;
  }
  if (product_id_ != &::google::protobuf::internal::kEmptyString) {
    delete product_id_;
  }
  if (this != default_instance_) {
  }
}

void PaymentSaveTransactionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentSaveTransactionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaymentSaveTransactionRequest_descriptor_;
}

const PaymentSaveTransactionRequest& PaymentSaveTransactionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessagePayment_2eproto();
  return *default_instance_;
}

PaymentSaveTransactionRequest* PaymentSaveTransactionRequest::default_instance_ = NULL;

PaymentSaveTransactionRequest* PaymentSaveTransactionRequest::New() const {
  return new PaymentSaveTransactionRequest;
}

void PaymentSaveTransactionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_transaction_id()) {
      if (transaction_id_ != &::google::protobuf::internal::kEmptyString) {
        transaction_id_->clear();
      }
    }
    if (has_product_id()) {
      if (product_id_ != &::google::protobuf::internal::kEmptyString) {
        product_id_->clear();
      }
    }
    player_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PaymentSaveTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string transaction_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->transaction_id().data(), this->transaction_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_product_id;
        break;
      }

      // required string product_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->product_id().data(), this->product_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_player_id;
        break;
      }

      // required int64 player_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PaymentSaveTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->transaction_id(), output);
  }

  // required string product_id = 2;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->product_id(), output);
  }

  // required int64 player_id = 3;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PaymentSaveTransactionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transaction_id().data(), this->transaction_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transaction_id(), target);
  }

  // required string product_id = 2;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->product_id(), target);
  }

  // required int64 player_id = 3;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PaymentSaveTransactionRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string transaction_id = 1;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transaction_id());
    }

    // required string product_id = 2;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

    // required int64 player_id = 3;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentSaveTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PaymentSaveTransactionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PaymentSaveTransactionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PaymentSaveTransactionRequest::MergeFrom(const PaymentSaveTransactionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
    if (from.has_product_id()) {
      set_product_id(from.product_id());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PaymentSaveTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentSaveTransactionRequest::CopyFrom(const PaymentSaveTransactionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentSaveTransactionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void PaymentSaveTransactionRequest::Swap(PaymentSaveTransactionRequest* other) {
  if (other != this) {
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(product_id_, other->product_id_);
    std::swap(player_id_, other->player_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PaymentSaveTransactionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaymentSaveTransactionRequest_descriptor_;
  metadata.reflection = PaymentSaveTransactionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PaymentSaveTransactionResponse::kResultFieldNumber;
const int PaymentSaveTransactionResponse::kPlayerIdFieldNumber;
const int PaymentSaveTransactionResponse::kProductIdFieldNumber;
#endif  // !_MSC_VER

PaymentSaveTransactionResponse::PaymentSaveTransactionResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PaymentSaveTransactionResponse::InitAsDefaultInstance() {
}

PaymentSaveTransactionResponse::PaymentSaveTransactionResponse(const PaymentSaveTransactionResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PaymentSaveTransactionResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  product_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PaymentSaveTransactionResponse::~PaymentSaveTransactionResponse() {
  SharedDtor();
}

void PaymentSaveTransactionResponse::SharedDtor() {
  if (product_id_ != &::google::protobuf::internal::kEmptyString) {
    delete product_id_;
  }
  if (this != default_instance_) {
  }
}

void PaymentSaveTransactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentSaveTransactionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PaymentSaveTransactionResponse_descriptor_;
}

const PaymentSaveTransactionResponse& PaymentSaveTransactionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessagePayment_2eproto();
  return *default_instance_;
}

PaymentSaveTransactionResponse* PaymentSaveTransactionResponse::default_instance_ = NULL;

PaymentSaveTransactionResponse* PaymentSaveTransactionResponse::New() const {
  return new PaymentSaveTransactionResponse;
}

void PaymentSaveTransactionResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    player_id_ = GOOGLE_LONGLONG(0);
    if (has_product_id()) {
      if (product_id_ != &::google::protobuf::internal::kEmptyString) {
        product_id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PaymentSaveTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_id;
        break;
      }

      // optional int64 player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_product_id;
        break;
      }

      // optional string product_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_product_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->product_id().data(), this->product_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PaymentSaveTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 player_id = 2;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player_id(), output);
  }

  // optional string product_id = 3;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->product_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PaymentSaveTransactionResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 player_id = 2;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player_id(), target);
  }

  // optional string product_id = 3;
  if (has_product_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->product_id().data(), this->product_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PaymentSaveTransactionResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int64 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }

    // optional string product_id = 3;
    if (has_product_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentSaveTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PaymentSaveTransactionResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PaymentSaveTransactionResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PaymentSaveTransactionResponse::MergeFrom(const PaymentSaveTransactionResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_product_id()) {
      set_product_id(from.product_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PaymentSaveTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentSaveTransactionResponse::CopyFrom(const PaymentSaveTransactionResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentSaveTransactionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PaymentSaveTransactionResponse::Swap(PaymentSaveTransactionResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(player_id_, other->player_id_);
    std::swap(product_id_, other->product_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PaymentSaveTransactionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PaymentSaveTransactionResponse_descriptor_;
  metadata.reflection = PaymentSaveTransactionResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
