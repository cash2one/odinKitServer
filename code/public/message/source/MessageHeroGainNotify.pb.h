// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageHeroGainNotify.proto

#ifndef PROTOBUF_MessageHeroGainNotify_2eproto__INCLUDED
#define PROTOBUF_MessageHeroGainNotify_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageHeroGainNotify_2eproto();
void protobuf_AssignDesc_MessageHeroGainNotify_2eproto();
void protobuf_ShutdownFile_MessageHeroGainNotify_2eproto();

class HeroGainNotify;

// ===================================================================

class HeroGainNotify : public ::google::protobuf::Message {
 public:
  HeroGainNotify();
  virtual ~HeroGainNotify();

  HeroGainNotify(const HeroGainNotify& from);

  inline HeroGainNotify& operator=(const HeroGainNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroGainNotify& default_instance();

  void Swap(HeroGainNotify* other);

  // implements Message ----------------------------------------------

  HeroGainNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroGainNotify& from);
  void MergeFrom(const HeroGainNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 heroid = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroidFieldNumber = 1;
  inline ::google::protobuf::int64 heroid() const;
  inline void set_heroid(::google::protobuf::int64 value);

  // optional int32 templateid = 2;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateidFieldNumber = 2;
  inline ::google::protobuf::int32 templateid() const;
  inline void set_templateid(::google::protobuf::int32 value);

  // optional int64 parent = 3;
  inline bool has_parent() const;
  inline void clear_parent();
  static const int kParentFieldNumber = 3;
  inline ::google::protobuf::int64 parent() const;
  inline void set_parent(::google::protobuf::int64 value);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int64 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // optional int32 strength = 7;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 7;
  inline ::google::protobuf::int32 strength() const;
  inline void set_strength(::google::protobuf::int32 value);

  // optional int32 intellect = 8;
  inline bool has_intellect() const;
  inline void clear_intellect();
  static const int kIntellectFieldNumber = 8;
  inline ::google::protobuf::int32 intellect() const;
  inline void set_intellect(::google::protobuf::int32 value);

  // optional int32 technique = 9;
  inline bool has_technique() const;
  inline void clear_technique();
  static const int kTechniqueFieldNumber = 9;
  inline ::google::protobuf::int32 technique() const;
  inline void set_technique(::google::protobuf::int32 value);

  // optional int32 agility = 10;
  inline bool has_agility() const;
  inline void clear_agility();
  static const int kAgilityFieldNumber = 10;
  inline ::google::protobuf::int32 agility() const;
  inline void set_agility(::google::protobuf::int32 value);

  // optional int32 hit = 11;
  inline bool has_hit() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 11;
  inline ::google::protobuf::int32 hit() const;
  inline void set_hit(::google::protobuf::int32 value);

  // optional int32 jouk = 12;
  inline bool has_jouk() const;
  inline void clear_jouk();
  static const int kJoukFieldNumber = 12;
  inline ::google::protobuf::int32 jouk() const;
  inline void set_jouk(::google::protobuf::int32 value);

  // optional int32 crit = 13;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 13;
  inline ::google::protobuf::int32 crit() const;
  inline void set_crit(::google::protobuf::int32 value);

  // optional int32 tenacity = 14;
  inline bool has_tenacity() const;
  inline void clear_tenacity();
  static const int kTenacityFieldNumber = 14;
  inline ::google::protobuf::int32 tenacity() const;
  inline void set_tenacity(::google::protobuf::int32 value);

  // optional int32 parry = 15;
  inline bool has_parry() const;
  inline void clear_parry();
  static const int kParryFieldNumber = 15;
  inline ::google::protobuf::int32 parry() const;
  inline void set_parry(::google::protobuf::int32 value);

  // optional int32 treat = 16;
  inline bool has_treat() const;
  inline void clear_treat();
  static const int kTreatFieldNumber = 16;
  inline ::google::protobuf::int32 treat() const;
  inline void set_treat(::google::protobuf::int32 value);

  // optional int32 physidamage = 17;
  inline bool has_physidamage() const;
  inline void clear_physidamage();
  static const int kPhysidamageFieldNumber = 17;
  inline ::google::protobuf::int32 physidamage() const;
  inline void set_physidamage(::google::protobuf::int32 value);

  // optional int32 physidefense = 18;
  inline bool has_physidefense() const;
  inline void clear_physidefense();
  static const int kPhysidefenseFieldNumber = 18;
  inline ::google::protobuf::int32 physidefense() const;
  inline void set_physidefense(::google::protobuf::int32 value);

  // optional int32 magicdamage = 19;
  inline bool has_magicdamage() const;
  inline void clear_magicdamage();
  static const int kMagicdamageFieldNumber = 19;
  inline ::google::protobuf::int32 magicdamage() const;
  inline void set_magicdamage(::google::protobuf::int32 value);

  // optional int32 magicdefense = 20;
  inline bool has_magicdefense() const;
  inline void clear_magicdefense();
  static const int kMagicdefenseFieldNumber = 20;
  inline ::google::protobuf::int32 magicdefense() const;
  inline void set_magicdefense(::google::protobuf::int32 value);

  // optional int32 stuntdamage = 21;
  inline bool has_stuntdamage() const;
  inline void clear_stuntdamage();
  static const int kStuntdamageFieldNumber = 21;
  inline ::google::protobuf::int32 stuntdamage() const;
  inline void set_stuntdamage(::google::protobuf::int32 value);

  // optional int32 stuntdefense = 22;
  inline bool has_stuntdefense() const;
  inline void clear_stuntdefense();
  static const int kStuntdefenseFieldNumber = 22;
  inline ::google::protobuf::int32 stuntdefense() const;
  inline void set_stuntdefense(::google::protobuf::int32 value);

  // optional int32 hpmax = 23;
  inline bool has_hpmax() const;
  inline void clear_hpmax();
  static const int kHpmaxFieldNumber = 23;
  inline ::google::protobuf::int32 hpmax() const;
  inline void set_hpmax(::google::protobuf::int32 value);

  // optional int32 basestrength = 24;
  inline bool has_basestrength() const;
  inline void clear_basestrength();
  static const int kBasestrengthFieldNumber = 24;
  inline ::google::protobuf::int32 basestrength() const;
  inline void set_basestrength(::google::protobuf::int32 value);

  // optional int32 baseintellect = 25;
  inline bool has_baseintellect() const;
  inline void clear_baseintellect();
  static const int kBaseintellectFieldNumber = 25;
  inline ::google::protobuf::int32 baseintellect() const;
  inline void set_baseintellect(::google::protobuf::int32 value);

  // optional int32 basetechnique = 26;
  inline bool has_basetechnique() const;
  inline void clear_basetechnique();
  static const int kBasetechniqueFieldNumber = 26;
  inline ::google::protobuf::int32 basetechnique() const;
  inline void set_basetechnique(::google::protobuf::int32 value);

  // optional int32 baseagility = 27;
  inline bool has_baseagility() const;
  inline void clear_baseagility();
  static const int kBaseagilityFieldNumber = 27;
  inline ::google::protobuf::int32 baseagility() const;
  inline void set_baseagility(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.HeroGainNotify)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_templateid();
  inline void clear_has_templateid();
  inline void set_has_parent();
  inline void clear_has_parent();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_intellect();
  inline void clear_has_intellect();
  inline void set_has_technique();
  inline void clear_has_technique();
  inline void set_has_agility();
  inline void clear_has_agility();
  inline void set_has_hit();
  inline void clear_has_hit();
  inline void set_has_jouk();
  inline void clear_has_jouk();
  inline void set_has_crit();
  inline void clear_has_crit();
  inline void set_has_tenacity();
  inline void clear_has_tenacity();
  inline void set_has_parry();
  inline void clear_has_parry();
  inline void set_has_treat();
  inline void clear_has_treat();
  inline void set_has_physidamage();
  inline void clear_has_physidamage();
  inline void set_has_physidefense();
  inline void clear_has_physidefense();
  inline void set_has_magicdamage();
  inline void clear_has_magicdamage();
  inline void set_has_magicdefense();
  inline void clear_has_magicdefense();
  inline void set_has_stuntdamage();
  inline void clear_has_stuntdamage();
  inline void set_has_stuntdefense();
  inline void clear_has_stuntdefense();
  inline void set_has_hpmax();
  inline void clear_has_hpmax();
  inline void set_has_basestrength();
  inline void clear_has_basestrength();
  inline void set_has_baseintellect();
  inline void clear_has_baseintellect();
  inline void set_has_basetechnique();
  inline void clear_has_basetechnique();
  inline void set_has_baseagility();
  inline void clear_has_baseagility();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 heroid_;
  ::google::protobuf::int64 parent_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 strength_;
  ::google::protobuf::int32 intellect_;
  ::google::protobuf::int32 technique_;
  ::google::protobuf::int32 agility_;
  ::google::protobuf::int32 hit_;
  ::google::protobuf::int32 jouk_;
  ::google::protobuf::int32 crit_;
  ::google::protobuf::int32 tenacity_;
  ::google::protobuf::int32 parry_;
  ::google::protobuf::int32 treat_;
  ::google::protobuf::int32 physidamage_;
  ::google::protobuf::int32 physidefense_;
  ::google::protobuf::int32 magicdamage_;
  ::google::protobuf::int32 magicdefense_;
  ::google::protobuf::int32 stuntdamage_;
  ::google::protobuf::int32 stuntdefense_;
  ::google::protobuf::int32 hpmax_;
  ::google::protobuf::int32 basestrength_;
  ::google::protobuf::int32 baseintellect_;
  ::google::protobuf::int32 basetechnique_;
  ::google::protobuf::int32 baseagility_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(27 + 31) / 32];

  friend void  protobuf_AddDesc_MessageHeroGainNotify_2eproto();
  friend void protobuf_AssignDesc_MessageHeroGainNotify_2eproto();
  friend void protobuf_ShutdownFile_MessageHeroGainNotify_2eproto();

  void InitAsDefaultInstance();
  static HeroGainNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// HeroGainNotify

// optional int64 heroid = 1;
inline bool HeroGainNotify::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroGainNotify::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroGainNotify::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroGainNotify::clear_heroid() {
  heroid_ = GOOGLE_LONGLONG(0);
  clear_has_heroid();
}
inline ::google::protobuf::int64 HeroGainNotify::heroid() const {
  return heroid_;
}
inline void HeroGainNotify::set_heroid(::google::protobuf::int64 value) {
  set_has_heroid();
  heroid_ = value;
}

// optional int32 templateid = 2;
inline bool HeroGainNotify::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroGainNotify::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroGainNotify::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroGainNotify::clear_templateid() {
  templateid_ = 0;
  clear_has_templateid();
}
inline ::google::protobuf::int32 HeroGainNotify::templateid() const {
  return templateid_;
}
inline void HeroGainNotify::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
}

// optional int64 parent = 3;
inline bool HeroGainNotify::has_parent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroGainNotify::set_has_parent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroGainNotify::clear_has_parent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroGainNotify::clear_parent() {
  parent_ = GOOGLE_LONGLONG(0);
  clear_has_parent();
}
inline ::google::protobuf::int64 HeroGainNotify::parent() const {
  return parent_;
}
inline void HeroGainNotify::set_parent(::google::protobuf::int64 value) {
  set_has_parent();
  parent_ = value;
}

// optional int32 level = 4;
inline bool HeroGainNotify::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroGainNotify::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroGainNotify::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroGainNotify::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 HeroGainNotify::level() const {
  return level_;
}
inline void HeroGainNotify::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 quality = 5;
inline bool HeroGainNotify::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroGainNotify::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroGainNotify::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroGainNotify::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 HeroGainNotify::quality() const {
  return quality_;
}
inline void HeroGainNotify::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int64 exp = 6;
inline bool HeroGainNotify::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeroGainNotify::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeroGainNotify::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeroGainNotify::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 HeroGainNotify::exp() const {
  return exp_;
}
inline void HeroGainNotify::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 strength = 7;
inline bool HeroGainNotify::has_strength() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeroGainNotify::set_has_strength() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeroGainNotify::clear_has_strength() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeroGainNotify::clear_strength() {
  strength_ = 0;
  clear_has_strength();
}
inline ::google::protobuf::int32 HeroGainNotify::strength() const {
  return strength_;
}
inline void HeroGainNotify::set_strength(::google::protobuf::int32 value) {
  set_has_strength();
  strength_ = value;
}

// optional int32 intellect = 8;
inline bool HeroGainNotify::has_intellect() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HeroGainNotify::set_has_intellect() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HeroGainNotify::clear_has_intellect() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HeroGainNotify::clear_intellect() {
  intellect_ = 0;
  clear_has_intellect();
}
inline ::google::protobuf::int32 HeroGainNotify::intellect() const {
  return intellect_;
}
inline void HeroGainNotify::set_intellect(::google::protobuf::int32 value) {
  set_has_intellect();
  intellect_ = value;
}

// optional int32 technique = 9;
inline bool HeroGainNotify::has_technique() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HeroGainNotify::set_has_technique() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HeroGainNotify::clear_has_technique() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HeroGainNotify::clear_technique() {
  technique_ = 0;
  clear_has_technique();
}
inline ::google::protobuf::int32 HeroGainNotify::technique() const {
  return technique_;
}
inline void HeroGainNotify::set_technique(::google::protobuf::int32 value) {
  set_has_technique();
  technique_ = value;
}

// optional int32 agility = 10;
inline bool HeroGainNotify::has_agility() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HeroGainNotify::set_has_agility() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HeroGainNotify::clear_has_agility() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HeroGainNotify::clear_agility() {
  agility_ = 0;
  clear_has_agility();
}
inline ::google::protobuf::int32 HeroGainNotify::agility() const {
  return agility_;
}
inline void HeroGainNotify::set_agility(::google::protobuf::int32 value) {
  set_has_agility();
  agility_ = value;
}

// optional int32 hit = 11;
inline bool HeroGainNotify::has_hit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HeroGainNotify::set_has_hit() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HeroGainNotify::clear_has_hit() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HeroGainNotify::clear_hit() {
  hit_ = 0;
  clear_has_hit();
}
inline ::google::protobuf::int32 HeroGainNotify::hit() const {
  return hit_;
}
inline void HeroGainNotify::set_hit(::google::protobuf::int32 value) {
  set_has_hit();
  hit_ = value;
}

// optional int32 jouk = 12;
inline bool HeroGainNotify::has_jouk() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HeroGainNotify::set_has_jouk() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HeroGainNotify::clear_has_jouk() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HeroGainNotify::clear_jouk() {
  jouk_ = 0;
  clear_has_jouk();
}
inline ::google::protobuf::int32 HeroGainNotify::jouk() const {
  return jouk_;
}
inline void HeroGainNotify::set_jouk(::google::protobuf::int32 value) {
  set_has_jouk();
  jouk_ = value;
}

// optional int32 crit = 13;
inline bool HeroGainNotify::has_crit() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HeroGainNotify::set_has_crit() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HeroGainNotify::clear_has_crit() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HeroGainNotify::clear_crit() {
  crit_ = 0;
  clear_has_crit();
}
inline ::google::protobuf::int32 HeroGainNotify::crit() const {
  return crit_;
}
inline void HeroGainNotify::set_crit(::google::protobuf::int32 value) {
  set_has_crit();
  crit_ = value;
}

// optional int32 tenacity = 14;
inline bool HeroGainNotify::has_tenacity() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void HeroGainNotify::set_has_tenacity() {
  _has_bits_[0] |= 0x00002000u;
}
inline void HeroGainNotify::clear_has_tenacity() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void HeroGainNotify::clear_tenacity() {
  tenacity_ = 0;
  clear_has_tenacity();
}
inline ::google::protobuf::int32 HeroGainNotify::tenacity() const {
  return tenacity_;
}
inline void HeroGainNotify::set_tenacity(::google::protobuf::int32 value) {
  set_has_tenacity();
  tenacity_ = value;
}

// optional int32 parry = 15;
inline bool HeroGainNotify::has_parry() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void HeroGainNotify::set_has_parry() {
  _has_bits_[0] |= 0x00004000u;
}
inline void HeroGainNotify::clear_has_parry() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void HeroGainNotify::clear_parry() {
  parry_ = 0;
  clear_has_parry();
}
inline ::google::protobuf::int32 HeroGainNotify::parry() const {
  return parry_;
}
inline void HeroGainNotify::set_parry(::google::protobuf::int32 value) {
  set_has_parry();
  parry_ = value;
}

// optional int32 treat = 16;
inline bool HeroGainNotify::has_treat() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void HeroGainNotify::set_has_treat() {
  _has_bits_[0] |= 0x00008000u;
}
inline void HeroGainNotify::clear_has_treat() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void HeroGainNotify::clear_treat() {
  treat_ = 0;
  clear_has_treat();
}
inline ::google::protobuf::int32 HeroGainNotify::treat() const {
  return treat_;
}
inline void HeroGainNotify::set_treat(::google::protobuf::int32 value) {
  set_has_treat();
  treat_ = value;
}

// optional int32 physidamage = 17;
inline bool HeroGainNotify::has_physidamage() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void HeroGainNotify::set_has_physidamage() {
  _has_bits_[0] |= 0x00010000u;
}
inline void HeroGainNotify::clear_has_physidamage() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void HeroGainNotify::clear_physidamage() {
  physidamage_ = 0;
  clear_has_physidamage();
}
inline ::google::protobuf::int32 HeroGainNotify::physidamage() const {
  return physidamage_;
}
inline void HeroGainNotify::set_physidamage(::google::protobuf::int32 value) {
  set_has_physidamage();
  physidamage_ = value;
}

// optional int32 physidefense = 18;
inline bool HeroGainNotify::has_physidefense() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void HeroGainNotify::set_has_physidefense() {
  _has_bits_[0] |= 0x00020000u;
}
inline void HeroGainNotify::clear_has_physidefense() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void HeroGainNotify::clear_physidefense() {
  physidefense_ = 0;
  clear_has_physidefense();
}
inline ::google::protobuf::int32 HeroGainNotify::physidefense() const {
  return physidefense_;
}
inline void HeroGainNotify::set_physidefense(::google::protobuf::int32 value) {
  set_has_physidefense();
  physidefense_ = value;
}

// optional int32 magicdamage = 19;
inline bool HeroGainNotify::has_magicdamage() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void HeroGainNotify::set_has_magicdamage() {
  _has_bits_[0] |= 0x00040000u;
}
inline void HeroGainNotify::clear_has_magicdamage() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void HeroGainNotify::clear_magicdamage() {
  magicdamage_ = 0;
  clear_has_magicdamage();
}
inline ::google::protobuf::int32 HeroGainNotify::magicdamage() const {
  return magicdamage_;
}
inline void HeroGainNotify::set_magicdamage(::google::protobuf::int32 value) {
  set_has_magicdamage();
  magicdamage_ = value;
}

// optional int32 magicdefense = 20;
inline bool HeroGainNotify::has_magicdefense() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void HeroGainNotify::set_has_magicdefense() {
  _has_bits_[0] |= 0x00080000u;
}
inline void HeroGainNotify::clear_has_magicdefense() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void HeroGainNotify::clear_magicdefense() {
  magicdefense_ = 0;
  clear_has_magicdefense();
}
inline ::google::protobuf::int32 HeroGainNotify::magicdefense() const {
  return magicdefense_;
}
inline void HeroGainNotify::set_magicdefense(::google::protobuf::int32 value) {
  set_has_magicdefense();
  magicdefense_ = value;
}

// optional int32 stuntdamage = 21;
inline bool HeroGainNotify::has_stuntdamage() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void HeroGainNotify::set_has_stuntdamage() {
  _has_bits_[0] |= 0x00100000u;
}
inline void HeroGainNotify::clear_has_stuntdamage() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void HeroGainNotify::clear_stuntdamage() {
  stuntdamage_ = 0;
  clear_has_stuntdamage();
}
inline ::google::protobuf::int32 HeroGainNotify::stuntdamage() const {
  return stuntdamage_;
}
inline void HeroGainNotify::set_stuntdamage(::google::protobuf::int32 value) {
  set_has_stuntdamage();
  stuntdamage_ = value;
}

// optional int32 stuntdefense = 22;
inline bool HeroGainNotify::has_stuntdefense() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void HeroGainNotify::set_has_stuntdefense() {
  _has_bits_[0] |= 0x00200000u;
}
inline void HeroGainNotify::clear_has_stuntdefense() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void HeroGainNotify::clear_stuntdefense() {
  stuntdefense_ = 0;
  clear_has_stuntdefense();
}
inline ::google::protobuf::int32 HeroGainNotify::stuntdefense() const {
  return stuntdefense_;
}
inline void HeroGainNotify::set_stuntdefense(::google::protobuf::int32 value) {
  set_has_stuntdefense();
  stuntdefense_ = value;
}

// optional int32 hpmax = 23;
inline bool HeroGainNotify::has_hpmax() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void HeroGainNotify::set_has_hpmax() {
  _has_bits_[0] |= 0x00400000u;
}
inline void HeroGainNotify::clear_has_hpmax() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void HeroGainNotify::clear_hpmax() {
  hpmax_ = 0;
  clear_has_hpmax();
}
inline ::google::protobuf::int32 HeroGainNotify::hpmax() const {
  return hpmax_;
}
inline void HeroGainNotify::set_hpmax(::google::protobuf::int32 value) {
  set_has_hpmax();
  hpmax_ = value;
}

// optional int32 basestrength = 24;
inline bool HeroGainNotify::has_basestrength() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void HeroGainNotify::set_has_basestrength() {
  _has_bits_[0] |= 0x00800000u;
}
inline void HeroGainNotify::clear_has_basestrength() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void HeroGainNotify::clear_basestrength() {
  basestrength_ = 0;
  clear_has_basestrength();
}
inline ::google::protobuf::int32 HeroGainNotify::basestrength() const {
  return basestrength_;
}
inline void HeroGainNotify::set_basestrength(::google::protobuf::int32 value) {
  set_has_basestrength();
  basestrength_ = value;
}

// optional int32 baseintellect = 25;
inline bool HeroGainNotify::has_baseintellect() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void HeroGainNotify::set_has_baseintellect() {
  _has_bits_[0] |= 0x01000000u;
}
inline void HeroGainNotify::clear_has_baseintellect() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void HeroGainNotify::clear_baseintellect() {
  baseintellect_ = 0;
  clear_has_baseintellect();
}
inline ::google::protobuf::int32 HeroGainNotify::baseintellect() const {
  return baseintellect_;
}
inline void HeroGainNotify::set_baseintellect(::google::protobuf::int32 value) {
  set_has_baseintellect();
  baseintellect_ = value;
}

// optional int32 basetechnique = 26;
inline bool HeroGainNotify::has_basetechnique() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void HeroGainNotify::set_has_basetechnique() {
  _has_bits_[0] |= 0x02000000u;
}
inline void HeroGainNotify::clear_has_basetechnique() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void HeroGainNotify::clear_basetechnique() {
  basetechnique_ = 0;
  clear_has_basetechnique();
}
inline ::google::protobuf::int32 HeroGainNotify::basetechnique() const {
  return basetechnique_;
}
inline void HeroGainNotify::set_basetechnique(::google::protobuf::int32 value) {
  set_has_basetechnique();
  basetechnique_ = value;
}

// optional int32 baseagility = 27;
inline bool HeroGainNotify::has_baseagility() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void HeroGainNotify::set_has_baseagility() {
  _has_bits_[0] |= 0x04000000u;
}
inline void HeroGainNotify::clear_has_baseagility() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void HeroGainNotify::clear_baseagility() {
  baseagility_ = 0;
  clear_has_baseagility();
}
inline ::google::protobuf::int32 HeroGainNotify::baseagility() const {
  return baseagility_;
}
inline void HeroGainNotify::set_baseagility(::google::protobuf::int32 value) {
  set_has_baseagility();
  baseagility_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageHeroGainNotify_2eproto__INCLUDED
